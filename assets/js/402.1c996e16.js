(window.webpackJsonp=window.webpackJsonp||[]).push([[402],{721:function(e,o,r){"use strict";r.r(o);var t=r(4),v=Object(t.a)({},(function(){var e=this,o=e._self._c;return o("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[o("h1",{attrs:{id:"zookeeper基础"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#zookeeper基础"}},[e._v("#")]),e._v(" Zookeeper基础")]),e._v(" "),o("h2",{attrs:{id:"一、什么是zookeeper"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#一、什么是zookeeper"}},[e._v("#")]),e._v(" 一、什么是Zookeeper？")]),e._v(" "),o("p",[e._v("Zookeeper=文件系统+监听通知机制，用来解决"),o("strong",[e._v("分布式应用中的数据管理问题")]),e._v("。比如让"),o("strong",[e._v("多个客户端")]),e._v("都登记注册在一个"),o("strong",[e._v("目录节点")]),e._v("，其中放着客户端的"),o("strong",[e._v("配置信息")]),e._v("，当"),o("strong",[e._v("目录节点发生变化")]),e._v("，"),o("strong",[e._v("zookeeper就可以通过watcher动态通知客户端")]),e._v("进行响应的处理。(实际上是一种观察者模式)\n"),o("img",{attrs:{src:"https://jsd.cdn.zzko.cn/gh/blage-coding/picx-images-hosting@master/20230516/b4ed0094bbd74478b3cb9281b3ff59ba%5B1%5D.5t2b5c2mssc0.webp",alt:"在这里插入图片描述"}})]),e._v(" "),o("h2",{attrs:{id:"二、zookeeper节点类型"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#二、zookeeper节点类型"}},[e._v("#")]),e._v(" 二、Zookeeper节点类型？")]),e._v(" "),o("p",[e._v("1.持久化节点：客户端与Zookeeper断开连接后，该节点"),o("strong",[e._v("依旧存在")]),e._v("。")]),e._v(" "),o("p",[e._v("持久化顺序编号节点：Zookeeper会给持久化节点进行顺序编号。")]),e._v(" "),o("p",[e._v("2.临时节点：客户端与Zookeeper"),o("strong",[e._v("断开连接后该节点删除")]),e._v("。")]),e._v(" "),o("p",[e._v("临时顺序编号节点：Zookeeper给临时节点编号")]),e._v(" "),o("p",[o("strong",[e._v("注意同一个Zookeeper的znode目录下，节点名称是唯一的")]),e._v("。(类似于文件系统同一个目录下文件名唯一)分布式锁实现方式就是基于这个机制。")]),e._v(" "),o("h2",{attrs:{id:"三、zookeeper集群分为几种角色-怎么保证主从节点状态同步"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#三、zookeeper集群分为几种角色-怎么保证主从节点状态同步"}},[e._v("#")]),e._v(" 三、Zookeeper集群分为几种角色？怎么保证主从节点状态同步？")]),e._v(" "),o("p",[e._v("1.leader："),o("strong",[e._v("事务请求的唯一处理者，只能由leader处理写请求")]),e._v("。")]),e._v(" "),o("p",[e._v("follower：对于事务请求把它转发给leader；Leader执行事务时进行投票")]),e._v(" "),o("p",[e._v("2.Zookeeper通过ZAB协议保证主从一致性。分为两个模式：")]),e._v(" "),o("p",[e._v("①恢复模式：当leader主机宕机或者leader主机和过半follower失去联系。这时候需要"),o("strong",[e._v("重新选举新的leader")]),e._v("，"),o("strong",[e._v("然后把leader数据同步到各个follower节点")]),e._v("。")]),e._v(" "),o("p",[e._v("选举机制：首先一开始每个服务器都投自己为leader，然后把投票发给各个服务器。"),o("strong",[e._v("服务器收到其它的投票后会与自己的投票进行PK(检查两个id变量)")]),e._v("。每次投票都会统计，有"),o("strong",[e._v("超过一半的服务器收到相同的投票")]),e._v("，那么该投票的候选人就会成为新的leader。")]),e._v(" "),o("p",[e._v("②广播模式：客户端发起一个写操作请求后，leader会转换一个事务并给其分配一个"),o("strong",[e._v("全局ID(保证消息处理顺序)")]),e._v("，会把这个事务通过队列发送到每个follower，每个follower从"),o("strong",[e._v("队列")]),e._v("中取出并处理完事务后，会发送一个ACK给leader;当leader收到"),o("strong",[e._v("超过半数的ACK")]),e._v("后，就会给所有follower发送commit将前一个事务提交(包括自己的事务)。")]),e._v(" "),o("p",[e._v("因为只是过半的ACK，因此不能保证强一致性。\n"),o("img",{attrs:{src:"https://jsd.cdn.zzko.cn/gh/blage-coding/picx-images-hosting@master/20230516/f1cf2a7f994d434cbe46a30b829dcc13%5B1%5D.6pd63r2z6g00.webp",alt:"在这里插入图片描述"}})]),e._v(" "),o("h2",{attrs:{id:"四、znode节点的监听机制"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#四、znode节点的监听机制"}},[e._v("#")]),e._v(" 四、znode节点的监听机制？")]),e._v(" "),o("p",[e._v("客户端在服务端znode节点上注册一个Watcher监听器，当"),o("strong",[e._v("znode节点发生变化")]),e._v("时，就会"),o("strong",[e._v("触发znode的注册时间")]),e._v("，客户端就会收到znode节点改变的异步通知，然后做出对应业务的改变。")]),e._v(" "),o("h2",{attrs:{id:"五、什么是zookeeper命名服务"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#五、什么是zookeeper命名服务"}},[e._v("#")]),e._v(" 五、什么是Zookeeper命名服务？")]),e._v(" "),o("p",[e._v("1.比如一个znode下有一个生产者节点和一个消费者节点，生产者节点可以把"),o("strong",[e._v("资源的名字或者地址")]),e._v("放到znode下"),o("strong",[e._v("完成服务的发布")]),e._v("，然后消费者可以通过znode节点读取该资源路径访问。其中Zookeeper会"),o("strong",[e._v("定时检查资源路径是否失效")]),e._v("，并动态通知生产者和消费者。")])])}),[],!1,null,null,null);o.default=v.exports}}]);