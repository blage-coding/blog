(window.webpackJsonp=window.webpackJsonp||[]).push([[67],{385:function(t,n,r){"use strict";r.r(n);var s=r(4),e=Object(s.a)({},(function(){var t=this,n=t._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"_209-长度最小的子数组"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_209-长度最小的子数组"}},[t._v("#")]),t._v(" 209.长度最小的子数组")]),t._v(" "),n("p",[t._v("给定一个含有 n 个正整数的数组和一个正整数 target 。找出该数组中满足其和 ≥ target 的长度最小的 连续子数组 [numsl, numsl+1, ..., numsr-1, numsr] ，并返回其长度。如果不存在符合条件的子数组，返回 0 。")]),t._v(" "),n("blockquote",[n("p",[t._v("输入：target = 7, nums = [2,3,1,2,4,3]\n输出：2\n解释：子数组 [4,3] 是该条件下的长度最小的子数组。")])]),t._v(" "),n("ol",[n("li",[t._v("双指针滑动窗口。右指针先向右移动大于等于target时，再让左指针右移缩小窗口直至小于target，此时两指针区间长度为一个最小子数组。")])])])}),[],!1,null,null,null);n.default=e.exports}}]);