(window.webpackJsonp=window.webpackJsonp||[]).push([[114],{430:function(t,s,e){"use strict";e.r(s);var a=e(4),n=Object(a.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"_142-环形链表ii"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_142-环形链表ii"}},[t._v("#")]),t._v(" 142.环形链表Ⅱ")]),t._v(" "),s("p",[t._v("给定一个链表，返回链表开始入环的第一个节点。 如果链表无环，则返回 null。如果链表中有某个节点，可以通过连续跟踪 next 指针再次到达，则链表中存在环。 为了表示给定链表中的环，评测系统内部使用整数 pos 来表示链表尾连接到链表中的位置（索引从 0 开始）。如果 pos 是 -1，则在该链表中没有环。")]),t._v(" "),s("blockquote",[s("p",[t._v("输入：head = [3,2,0,-4], pos = 1\n输出：返回索引为 1 的链表节点\n解释：链表中有一个环，其尾部连接到第二个节点。")])]),t._v(" "),s("ol",[s("li",[t._v("先通过快慢指针判断有无环，得到快慢指针相碰撞的节点后，"),s("strong",[t._v("入环点肯定是在head和fast之间")]),t._v("，再通过遍历设置计数器来得出入环点。")]),t._v(" "),s("li",[t._v("实际上，得出快慢指针碰撞点之后，由快指针走的路程是慢指针的两倍，那么就有b+c=a+b,即c=a，碰撞点到入环点的距离等于头结点head到入环点的距离，因此设置"),s("strong",[t._v("两个节点分别在那两个位置同步走，相碰的节点就是入环点。")]),t._v(" "),s("img",{attrs:{src:"https://jsd.cdn.zzko.cn/gh/blage-coding/picx-images-hosting@master/20230516/cef9be77179b41cfb3e3f5a9fa80c91c.129j0ahaz1n4.webp?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5LiA5ZuiIOeznw==,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center",alt:"在这里插入图片描述"}})])])])}),[],!1,null,null,null);s.default=n.exports}}]);