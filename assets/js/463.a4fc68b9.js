(window.webpackJsonp=window.webpackJsonp||[]).push([[463],{782:function(t,s,a){"use strict";a.r(s);var n=a(4),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"api-gateway-core"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#api-gateway-core"}},[t._v("#")]),t._v(" Api-gateway-core")]),t._v(" "),s("h2",{attrs:{id:"_1、服务端处理http请求"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、服务端处理http请求"}},[t._v("#")]),t._v(" 1、服务端处理Http请求")]),t._v(" "),s("p",[t._v("功能：实现将Http连接请求过程引入Netty服务端IO。核心在于通道需要配置Netty自带的Http解码器和编码器，获取Http对象后用户可以进一步处理。")]),t._v(" "),s("p",[t._v("channelRead0：事件触发后，封装DefaultFullHttpResponse响应对象，"),s("strong",[t._v("包括配置响应体和响应头信息，以及解决跨域问题")]),t._v("。"),s("strong",[t._v("另外，channelRead0事件中不需要关心释放资源。")])]),t._v(" "),s("p",[t._v("SimpleChannelInboundHandler<FullHttpRequest>：事件处理器接口，指定FullHttpRequest作为接收的消息对象。在"),s("strong",[t._v("页面和服务端之间的通道")]),t._v("取出http请求对象，可以通过uri()方法拿到后面"),s("strong",[t._v("资源标识路径")]),t._v("。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://jsd.cdn.zzko.cn/gh/blage-coding/picx-images-hosting@master/20230515/image-20230420104118203.59k5hlccmos.webp",alt:"image-20230420104118203"}})]),t._v(" "),s("h2",{attrs:{id:"_2、代理rpc泛化调用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2、代理rpc泛化调用"}},[t._v("#")]),t._v(" 2、代理RPC泛化调用")]),t._v(" "),s("h4",{attrs:{id:"网关接口映射功能"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#网关接口映射功能"}},[t._v("#")]),t._v(" 网关接口映射功能")]),t._v(" "),s("p",[t._v("SpringBoot在Controller中通过注解RequestMapping，把Http请求路径映射到每个微服务具体方法，但同时也增加了维护成本，服务改变那么访问路径也需要改变。")]),t._v(" "),s("p",[t._v("此处"),s("strong",[t._v("采用Netty+Dubbo的全新微服务架构方式")]),t._v("，所有包装提供的微服务只需要通过Dubbo暴露接口方法，不需要配置请求路径。当用户发起http请求时会发送给Api网关("),s("font",{attrs:{color:"red"}},[s("strong",[t._v("此处网关基于Netty服务端与所有用户请求建立连接")])]),t._v(")，"),s("strong",[t._v("网关会根据配置的映射规则，向微服务注册中心发送Dubbo-RPC请求，调用到对应的服务接口方法")]),t._v("。因此核心就是配置HTTP和RPC的映射规则。")],1),t._v(" "),s("p",[s("img",{attrs:{src:"https://jsd.cdn.zzko.cn/gh/blage-coding/picx-images-hosting@master/20230515/image-20230421140658162.3uzrdespuuo0.webp",alt:"image-20230421140658162"}})]),t._v(" "),s("h4",{attrs:{id:"泛化调用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#泛化调用"}},[t._v("#")]),t._v(" 泛化调用")]),t._v(" "),s("ul",[s("li",[t._v("获取泛化服务调用对象")])]),t._v(" "),s("p",[t._v("DubboBootstrap对象提供好"),s("strong",[t._v("应用名称")]),t._v("、"),s("strong",[t._v("注册中心配置")]),t._v("、"),s("strong",[t._v("引用服务配置")]),t._v("，进行初始化和远程连接后，就可以从"),s("strong",[t._v("Dubbo配置缓存")]),t._v("中取出该接口的泛化调用代理对象GenericService。")]),t._v(" "),s("p",[t._v("消费服务时只需要调用"),s("font",{attrs:{color:"red"}},[s("strong",[t._v("GenericService#$invoke")])]),t._v("方法，并提供"),s("strong",[t._v("方法名、入参类型、入参对象")]),t._v("，即可调用RPC服务接口的方法。")],1),t._v(" "),s("ul",[s("li",[t._v("泛化调用对象的二次封装")])]),t._v(" "),s("p",[t._v("每个RPC服务的实现和方法名称都是不同的，因此不能直接调用"),s("strong",[t._v("GenericService#$invoke")]),t._v("，可能还需要拦截方法实现增强。因此这里对genericService代理对象二次封装，再创建一个新的代理对象。")]),t._v(" "),s("p",[t._v("GenericReferenceProxyFactory：代理工厂采用Cglib的动态代理方式，其中"),s("strong",[t._v("设置了两个代理接口")]),t._v("，一个是统一的泛化调用接口IGenericReference，"),s("strong",[t._v("给整个网关调用提供一个统一的方法")]),t._v("。而另一个接口是手动生成创建的RPC描述性接口，标记当前代理对象间接代理的是哪个RPC接口方法。")]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IGenericReference")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("newInstance")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" method"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" genericReferenceMap"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("computeIfAbsent")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("method"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" k "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//泛化调用")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("GenericReferenceProxy")]),t._v(" genericReferenceProxy "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("GenericReferenceProxy")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("genericService"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" method"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//创建接口,指定名称，返回类型，行参类型")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("InterfaceMaker")]),t._v(" interfaceMaker "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("InterfaceMaker")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        interfaceMaker"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Signature")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("method"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Type")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getType")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Type")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Type")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getType")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Class")]),t._v(" interfaceClass "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" interfaceMaker"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("create")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Enhancer")]),t._v(" enhancer "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Enhancer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        enhancer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setSuperclass")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//设置统一泛化调用接口+手动创建RPC接口")]),t._v("\n        enhancer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setInterfaces")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IGenericReference")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" interfaceClass"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        enhancer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setCallback")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("genericReferenceProxy"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IGenericReference")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" enhancer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("create")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br")])]),s("p",[t._v("GenericReferenceProxy：泛用代理对象，实现了"),s("strong",[t._v("MethodIntercptor")]),t._v("接口，"),s("font",{attrs:{color:"red"}},[s("strong",[t._v("用于增强RPC接口方法(设置搜集入参信息)，并设置代理对象的回调setCallback。")])]),t._v("当网关的泛化代理对象调用$invoke后，会进入到intercept进行拦截增强，并通过外部的method方法搜集入参信息，最后"),s("font",{attrs:{color:"red"}},[s("strong",[t._v("通过genericService.$invoke调用真正的RPC接口")])]),t._v("。")],1),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("intercept")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v(" o"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Method")]),t._v(" method"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" objects"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MethodProxy")]),t._v(" methodProxy"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Throwable")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Class")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" parameterTypes "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" method"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getParameterTypes")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" parameters "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("parameterTypes"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" parameterTypes"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        parameters"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" parameterTypes"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" genericService"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("$"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("invoke")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("methodName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" parameters"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" objects"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br")])]),s("h4",{attrs:{id:"缓存设计"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#缓存设计"}},[t._v("#")]),t._v(" 缓存设计")]),t._v(" "),s("p",[t._v("①Configuration：因为ApplicationConfig，RegistryConfig，ReferenceConfig三种类型对象创建成本高，因此需要存放入内存Map中管理。后面需要从Spring配置文件当中读取。")]),t._v(" "),s("p",[t._v("②ReferenceConfigCache：因为ReferenceConfig对象是一个比较重的实例，其中init初始化方法里实现了通过与注册中心与提供者连接创建代理的过程。因此需要创建缓存，根据referenceConfig对象生成的key获取对应的泛化代理对象。最终"),s("strong",[t._v("Dubbo-RPC代理对象是通过Javassist字节码增强技术创建")]),t._v("。")]),t._v(" "),s("p",[t._v("此处key的生成规则是group/版本/接口，可以根据业务和场景需求通过SPI修改生成策略。")]),t._v(" "),s("p",[t._v("③网关代理工厂中也设置了Map作为网关代理对象的单例池，根据方法名获取对应的代理对象。")]),t._v(" "),s("h4",{attrs:{id:"思考"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#思考"}},[t._v("#")]),t._v(" 思考")]),t._v(" "),s("p",[t._v("①RPC接口调用的入参在http请求路径上(REST)如何获取：通过uri()解析获得请求参数。form表单数据呢？")]),t._v(" "),s("p",[t._v("②网关代理单例池存放新创建的代理对象时，出现同名的RPC方法调用时会覆盖。")]),t._v(" "),s("p",[t._v("③SPI在dubbo的使用，加载ConfigManager，修改注册中心生成key方法")]),t._v(" "),s("h2",{attrs:{id:"_3、重构-使用分治方法重构会话"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3、重构-使用分治方法重构会话"}},[t._v("#")]),t._v(" 3、重构：使用分治方法重构会话")]),t._v(" "),s("ul",[s("li",[t._v("目标")])]),t._v(" "),s("p",[t._v("对工程进行重构，拆分成bind、mapping、session、socket四部分。")]),t._v(" "),s("p",[t._v("①bind：负责网关代理封装与创建。("),s("strong",[t._v("移除了泛化调用部分")]),t._v(")")]),t._v(" "),s("p",[t._v("②mapping："),s("font",{attrs:{color:"red"}},[s("strong",[t._v("HttpStatement对象建立了HTTP网关(uri和请求方式)到RPC服务(应用、接口、方法名)的映射关系。")])]),t._v("并且都采用String类型，避免使用比较重的Dubbo实例。")],1),t._v(" "),s("p",[t._v("③session：会话中间层，包括缓存、泛化调用获取。")]),t._v(" "),s("p",[t._v("④socket：负责Netty服务端网络通信。")]),t._v(" "),s("p",[t._v("整个流程首先session准备配置，socket启动服务端，从session中通过mapperRegistry获取映射器对象(网关代理对象)，通过代理对象调用RPC接口服务。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://jsd.cdn.zzko.cn/gh/blage-coding/picx-images-hosting@master/20230515/image-20230421212631236.7h564ayeyxk0.webp",alt:"image-20230421212631236"}})]),t._v(" "),s("ul",[s("li",[t._v("细节")])]),t._v(" "),s("p",[t._v("各个模块功能是隔离的却又不是完全孤立的，通过调用依赖的方式实现模块之间的通信。")]),t._v(" "),s("p",[t._v("DefaultGatewaySessionFactory："),s("strong",[t._v("socket")]),t._v("通信模块启动Netty服务端依赖于"),s("strong",[t._v("session")]),t._v("的会话工厂。")]),t._v(" "),s("p",[s("strong",[t._v("MapperRegistry")]),t._v("：session模块Configuration依赖于bind模块的映射器注册中心。getMapper方法又会基于GatewaySession中的configuration对象创建新的代理实例。")]),t._v(" "),s("p",[t._v("另外bind代理部分的缓存Map中的key全部改为用"),s("strong",[t._v("uri")]),t._v("来代替，解决了RPC接口方法重名的问题。")]),t._v(" "),s("p",[t._v("核心看MapperProxy#intercept拦截方法的实现。此处"),s("strong",[t._v("把RPC远程连接注册中心并从Dubbo缓存取出GenericReference对象")]),t._v("，"),s("strong",[t._v("以及通过泛化调用对象调用RPC接口$invoke两个过程合并在一起，放到MapperMethod实现。")])]),t._v(" "),s("ul",[s("li",[t._v("问题")])]),t._v(" "),s("p",[t._v("①MappingRegistry和Configuration存在循环依赖问题。HttpStatement在初始化阶段就准备好了，因此可以直接放入Configuration缓存，不需要在添加映射器时再进行，所以MappingRegistry注册中心不需要依赖Configuration。")]),t._v(" "),s("p",[t._v("②将泛化调用对象的获取和RPC接口调用绑定的问题在于，GatewaySession#get方法没有缓存GenericReference对象，而获取GenericReference对象需要远程调用，是一个很重的方法。因此用户第一次调用服务会非常慢，此外每次调用相同RPC接口都会进行远程调用，十分损耗系统资源。")]),t._v(" "),s("p",[t._v("所以这个地方必须要拆分，把GenericReference对象获取和初始化过程放到Netty服务端启动之前，和Configuration一起进行初始化。不过这种做法相当于一次性往内存加载所有RPC服务，拿空间换时间，具体需要结合时机场景考虑。")]),t._v(" "),s("h2",{attrs:{id:"_4-重构-引入数据源重构rpc连接"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-重构-引入数据源重构rpc连接"}},[t._v("#")]),t._v(" 4.重构：引入数据源重构RPC连接")]),t._v(" "),s("ul",[s("li",[t._v("目标")])]),t._v(" "),s("p",[t._v("把RPC远程连接获取GenericService泛化调用对象的部分从DefaultGatewaySession会话中抽离出来，"),s("strong",[t._v("把RPC抽象成一种连接资源，整合放入数据源管理当中")]),t._v("。这样"),s("font",{attrs:{color:"red"}},[s("strong",[t._v("针对不同的资源请求，可以扩展不同的数据源连接方式")])]),t._v("。而在Gatewaysession中需要做的，"),s("strong",[t._v("只需要初始化DataSource数据源，并且在需要调用远程数据或者远程服务的地方getConnection获取数据源连接")]),t._v("，进一步拿到数据执行对应的业务处理即可。")],1),t._v(" "),s("ul",[s("li",[t._v("细节")])]),t._v(" "),s("p",[t._v("整个依赖关系：DefaultGatewaySession—>(DateSourceFactory—>DateSource)—>Connection")]),t._v(" "),s("p",[s("strong",[t._v("UnpooledDataSource：根据网关中的HTTP映射信息对象HttpStatement，从配置Configuration中取出建立RPC连接所需要的Dubbo配置对象，并交给连接对象(DubboConnection)进行实例化。")])]),t._v(" "),s("p",[t._v("DataSourceType：定义数据源类型")]),t._v(" "),s("p",[t._v("DubboConnection：根据数据源传入的Dubbo配置对象，获取泛化调用对象并创建连接。"),s("strong",[t._v("execute")]),t._v("方法执行RPC服务。")]),t._v(" "),s("p",[t._v("数据源的引入：DefaultGatewaySessionFactory#openSession中初始化数据源工厂，并通过工厂获取数据源对象，"),s("strong",[t._v("交给DefaultGatewaySession保存")]),t._v("。")]),t._v(" "),s("ul",[s("li",[t._v("问题")])]),t._v(" "),s("p",[t._v("①RPC服务调用交给DefaultGatewaySession不合适，应该直接由Mapper代理调用connection对象执行。")]),t._v(" "),s("h2",{attrs:{id:"_5-http请求参数解析"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-http请求参数解析"}},[t._v("#")]),t._v(" 5.HTTP请求参数解析")]),t._v(" "),s("p",[t._v("目标："),s("strong",[t._v("GatewayServerHandler")]),t._v("接收到HTTP请求后，针对HTTP的GET/POST请求类型，以及该请求的参数类型Content-Type进一步细化参数解析过程。")]),t._v(" "),s("h4",{attrs:{id:"请求参数解析"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#请求参数解析"}},[t._v("#")]),t._v(" 请求参数解析")]),t._v(" "),s("p",[t._v("RequestParser#parse：请求参数解析。核心基于FullHttpRequset对象，根据不同的请求方式取出数据。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("GET方式：数据可以直接从uri中解析获取。")])]),t._v(" "),s("li",[s("p",[t._v("POST方式：前端数据会以"),s("strong",[t._v("不同的请求体方式")]),t._v("提交，因此需要区分请求头中不同的Content-Type信息。另外解析参数类型Content-Type时，过滤时需要考虑到分号后面的boundary或charset。")]),t._v(" "),s("ul",[s("li",[t._v("multipart/form-data----form-data")]),t._v(" "),s("li",[t._v("application/json----raw(json)")]),t._v(" "),s("li",[t._v("application/x-www-from-urlencoded----x-www-from-urlencoded")])])])]),t._v(" "),s("h4",{attrs:{id:"rpc接口入参设置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#rpc接口入参设置"}},[t._v("#")]),t._v(" RPC接口入参设置")]),t._v(" "),s("p",[t._v("通过泛化对象调用RPC接口时，需要"),s("strong",[t._v("根据不同的入参类型传入正确的入参对象")]),t._v("。如果传入的是JAVA八大基本数据类型，那么直接把数据填入到入参对象数组当中；"),s("font",{attrs:{color:"red"}},[s("strong",[t._v("如果传入的是自定义类型对象，那么需要把该对象的所有成员属性封装成一个Map对象，作为RPC接口的一个入参对象。")])])],1),t._v(" "),s("p",[t._v("此处下面的params已经提前转化为Map对象。")]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" connection"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("execute")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("methodName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("parameterType"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"name"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SimpleTypeRegistry")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isSimpleType")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("parameterType"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v("params"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("values")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toArray")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("params"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("p",[t._v("另外，此处暂且规定RPC接口只传入一个入参。如果是多入参的情况下，需要拿到RPC接口的Method对应的所有入参参数名，代理调用时需要根据入参名把入参对象放入对应的位置。另外没有解决DTO转化问题。")]),t._v(" "),s("h2",{attrs:{id:"_6-重构-引入执行器执行rpc泛化调用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-重构-引入执行器执行rpc泛化调用"}},[t._v("#")]),t._v(" 6.重构：引入执行器执行RPC泛化调用")]),t._v(" "),s("ul",[s("li",[t._v("目标")])]),t._v(" "),s("p",[t._v("将Session会话中获取连接源，并通过连接源执行泛化调用的整个执行过程抽离出来，由连接器负责。")]),t._v(" "),s("p",[s("strong",[t._v("会话只需要串联上下文，包括①根据外部uri信息创建数据源②获取执行器执行结果返回给外部HTTP响应。")])]),t._v(" "),s("ul",[s("li",[t._v("细节")])]),t._v(" "),s("p",[s("strong",[t._v("BaseExecutor#exec")]),t._v("：采用模板模式定义整个执行过程：①准备入参信息②"),s("strong",[t._v("执行器通过连接源对象执行泛化调用")]),t._v("③封装执行结果对象GatewayResult。")]),t._v(" "),s("p",[t._v("DefaultGatewaySessionFactory#openSession："),s("font",{attrs:{color:"red"}},[s("strong",[t._v("根据连接源创建执行器对象，根据外部uri开启会话。最后把执行器存入会话中")])]),t._v("。")],1),t._v(" "),s("p",[t._v("ResponseParser：将执行结果统一封装HTTP响应对象。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://jsd.cdn.zzko.cn/gh/blage-coding/picx-images-hosting@master/20230515/executordrawio.yxax9v6kujk.webp",alt:"executordrawio"}})]),t._v(" "),s("h2",{attrs:{id:"_7-shiro-jwt"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-shiro-jwt"}},[t._v("#")]),t._v(" 7.Shiro+JWT")]),t._v(" "),s("p",[t._v("HTTP请求进来时需要校验所携带的token，从而够验证当前HTTP请求的有效性，防止恶意请求攻击网关。")]),t._v(" "),s("h4",{attrs:{id:"jwt认证流程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#jwt认证流程"}},[t._v("#")]),t._v(" JWT认证流程")]),t._v(" "),s("p",[t._v("用户在第一次登录成功后，后端会通过JWT使用服务器私钥signingKey对用户的uId进行加密编码，得到一串密文作为token，"),s("strong",[t._v("并把token在第一次登录验证成功后(一般是数据库密码匹配)返回给用户")]),t._v("。")]),t._v(" "),s("p",[s("font",{attrs:{color:"red"}},[s("strong",[t._v("也就是说uId与token可以理解是一对明文密文对，只有通过服务器(校验方)的私钥才能正确解密。")])])],1),t._v(" "),s("p",[t._v("每次发送HTTP请求时，先从header头部取出uId和token，然后shiro会对明文密文对进行认证校验，通过Jwt的私钥对token进行解密(解码)，如果结果与明文(uId)不一致，那么说明校验信息很可能经过伪造，校验失败认证不通过。")]),t._v(" "),s("h4",{attrs:{id:"shiro核心原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#shiro核心原理"}},[t._v("#")]),t._v(" Shiro核心原理")]),t._v(" "),s("ul",[s("li",[t._v("认证授权调用链")])]),t._v(" "),s("p",[t._v("subject->securityManager->..->Realm。前端校验信息AuthenticationToken最终会传递到Realm对象进行认证。认证时首先调用"),s("strong",[t._v("doGetAuthenticationInfo")]),t._v("方法"),s("strong",[t._v("获取真正的账号密码信息")]),t._v("，并封装成AuthenticationInfo对象，然后执行"),s("strong",[t._v("doCredentialsMatch")]),t._v("方法将"),s("strong",[t._v("前端token信息")]),t._v("和"),s("strong",[t._v("数据库账户info信息")]),t._v("进行匹配。")]),t._v(" "),s("p",[t._v("而目前来看网关系统"),s("strong",[t._v("①使用认证功能②shiro通过Jwt来对token进行验证，不走数据库")])]),t._v(" "),s("p",[t._v("GatewayAuthorizingRealm：自定义Realm对象，继承了AuthorizingRealm，"),s("font",{attrs:{color:"red"}},[s("strong",[t._v("重写doGetAuthenticationInfo方法，在方法中使用Jwt解码token进行校验，如果校验失败则直接抛出异常")])]),t._v("。暂不走数据库认证。")],1),t._v(" "),s("p",[t._v("GatewayAuthorizingToken：实现了AuthenticationToken接口，用于封装前端传入的uId和token。")]),t._v(" "),s("ul",[s("li",[t._v("主流程")])]),t._v(" "),s("p",[t._v("①工厂对象配置自定义Realm的配置，获取"),s("strong",[t._v("SecurityManager")]),t._v("对象。")]),t._v(" "),s("p",[t._v("②在SecurityUtils中设置管理对象，并"),s("strong",[t._v("获取Subject对象")]),t._v("。")]),t._v(" "),s("p",[t._v("③Subject#login：将前端校验信息封装成Shiro的token对象，并传入SecurityManager内部，进行认证授权。")]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AuthService")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IniSecurityManagerFactory")]),t._v(" factory "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IniSecurityManagerFactory")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"classpath:shiro.ini"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SecurityManager")]),t._v(" securityManager "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" factory"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getInstance")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SecurityUtils")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setSecurityManager")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("securityManager"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("subject "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SecurityUtils")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getSubject")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("boolean")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("validate")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" token"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        subject"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("login")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("GatewayAuthorizingToken")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" token"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" subject"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isAuthenticated")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("finally")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        subject"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("logout")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br")])]),s("h4",{attrs:{id:"会话鉴权融入网关"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#会话鉴权融入网关"}},[t._v("#")]),t._v(" 会话鉴权融入网关")]),t._v(" "),s("ul",[s("li",[t._v("核心")])]),t._v(" "),s("p",[s("strong",[t._v("AuthService作为Shiro鉴权的门面对象，暴露validate方法实现认证功能。")])]),t._v(" "),s("p",[t._v("另外"),s("strong",[t._v("对Netty服务端的Headler处理器进行重构，拆分成三个模块")]),t._v("：")]),t._v(" "),s("p",[t._v("①GatewayServerHandler：校验uri，并根据uri拿到网关映射器HttpStatement，存入通道的AttributeMap。")]),t._v(" "),s("p",[t._v("②AuthorizationHandler：从request头部取出用户校验信息，进行接口鉴权。")]),t._v(" "),s("p",[t._v("③ProtocolDataHandler：解析获取HTTP请求的数据信息，并执行泛化调用。")]),t._v(" "),s("ul",[s("li",[t._v("细节")])]),t._v(" "),s("p",[t._v("HttpStatement#isAuth：后续鉴权后，考虑到游客用户对基本欢迎页信息的get请求不需要认证校验，因此扩充auth字段用来判断当前HTTP请求是否需要进行鉴权。")]),t._v(" "),s("p",[t._v("消息对象：SessionResult作为"),s("strong",[t._v("执行泛化调用后的结果对象")]),t._v("。"),s("strong",[t._v("GatewayResultMessage作为网关响应消息对象")]),t._v("，用来反馈给用户的整个HTTP请求的结果。在HTTPResponse响应报文解析器中，会把SessionResult封装成GatewayResultMessage对象并填入data字段。")]),t._v(" "),s("p",[t._v("通道多处理器：①当前通道处理器处理完后，通过fireChannelRead将request请求传递给下一个处理器的read事件，当前通道放行，同时执行request#retain引用计数加一。")]),t._v(" "),s("p",[t._v("②通道AttributeMap："),s("font",{attrs:{color:"red"}},[s("strong",[t._v("把HttpStatement对象存放在通道的AttributeMap中（ctx之间的Map是隔离的），相当于全局变量，整个通道的所有处理器都可以共享。channel.attr()通过指定key获取对应的Attribute对象。")])])],1),t._v(" "),s("h2",{attrs:{id:"_8-排除内嵌tomcat运行war包-排除数据源启动"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8-排除内嵌tomcat运行war包-排除数据源启动"}},[t._v("#")]),t._v(" 8.排除内嵌Tomcat运行war包&排除数据源启动")]),t._v(" "),s("ul",[s("li",[t._v("SpringBoot部署项目有两种方式：")])]),t._v(" "),s("p",[t._v("①jar包")]),t._v(" "),s("p",[t._v("打包jar包，使用"),s("strong",[t._v("spring-boot-starter-web内置tomcat")]),t._v("，直接通过java-jar运行。")]),t._v(" "),s("p",[t._v("②war包")]),t._v(" "),s("p",[t._v("如果需要配置定制化Tomcat服务器，那么需要使用"),s("strong",[t._v("外置的Tomcat服务器")]),t._v("部署war包。把war包打包后放入到Tomcat文件夹下，然后启动tomcat进行发布。")]),t._v(" "),s("p",[t._v("因此引入Springboot依赖后需要排除掉内置的tomcat，否则会冲突。")]),t._v(" "),s("div",{staticClass:"language-xml line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("dependency")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("org.springframework.boot"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("spring-boot-starter-web"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("exclusions")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("exclusion")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("org.springframework.boot"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("spring-boot-starter-tomcat"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("exclusion")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("exclusions")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("dependency")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br")])]),s("p",[t._v("或者引入spring-boot-starter-tomcat指明scope：provided，依赖由容器或者jdk提供。")]),t._v(" "),s("ul",[s("li",[t._v("排除数据源")])]),t._v(" "),s("p",[t._v("如果yml配置中没有配置数据源，那么导入的相关jar包里面如果有用到数据库，就会报错，因此springboot启动时需要排除数据源。")]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@SpringBootApplication")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("exclude"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DataSourceAutoConfiguration")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])])])}),[],!1,null,null,null);s.default=e.exports}}]);