(window.webpackJsonp=window.webpackJsonp||[]).push([[342],{660:function(t,s,a){"use strict";a.r(s);var n=a(4),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"jmm语义与重排"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#jmm语义与重排"}},[t._v("#")]),t._v(" JMM语义与重排")]),t._v(" "),s("h2",{attrs:{id:"_1-内存模型基础"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-内存模型基础"}},[t._v("#")]),t._v(" 1.内存模型基础")]),t._v(" "),s("p",[t._v("顺序一致性模型(内存屏障限制最多)+重排序并行优化=JMM")]),t._v(" "),s("ul",[s("li",[t._v("Java并发采用"),s("strong",[t._v("共享内存模型")]),t._v("，线程之间的通信是根据"),s("strong",[t._v("写-读内存中的公共状态")]),t._v("进行隐式通信。")]),t._v(" "),s("li",[t._v("Java源程序在编译执行的过程，可能会经历几种重排序。JMM通过插入"),s("strong",[t._v("内存屏障指令")]),t._v("(禁止前后指令重排)，保证一致的内存可见性。")])]),t._v(" "),s("p",[t._v("🔥无论是哪种内存模型，添加的内存屏障和约束越少，那么指令的并行度越高，"),s("strong",[t._v("性能越好")]),t._v("；但是相对的指令代码执行的顺序"),s("strong",[t._v("不可控")]),t._v("，易编程性变差。")]),t._v(" "),s("h2",{attrs:{id:"_2-重排序"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-重排序"}},[t._v("#")]),t._v(" 2.重排序")]),t._v(" "),s("p",[t._v("代码在执行时，"),s("font",{staticStyle:{background:"rgb(255, 240, 102)"}},[s("strong",[t._v("编译器")])]),t._v("和"),s("font",{staticStyle:{background:"rgb(255, 240, 102)"}},[s("strong",[t._v("处理器")])]),t._v("可能都会对其进行重排序。")],1),t._v(" "),s("p",[t._v("JMM会制定相应的规则，限制不同情况下的重排。")]),t._v(" "),s("p",[s("font",{attrs:{color:"red"}},[s("strong",[t._v("结论：多线程下，对数据依赖和控制依赖的操作进行重排序会改变执行结果")])]),t._v("。")],1),t._v(" "),s("h3",{attrs:{id:"as-if-serial语义"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#as-if-serial语义"}},[t._v("#")]),t._v(" as-if-serial语义")]),t._v(" "),s("p",[t._v("保证单线程执行结果不会改变。换句话说，编译器和处理器重排时，"),s("strong",[t._v("不能改变存在数据依赖关系的操作")]),t._v("。(单线程下重排控制依赖操作不受影响)")]),t._v(" "),s("h2",{attrs:{id:"_3-volatile内存语义"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-volatile内存语义"}},[t._v("#")]),t._v(" 3.volatile内存语义")]),t._v(" "),s("p",[t._v("volatile具有以下特性和语义：")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("可见性")]),t._v("：其它线程总能读到volatile变量最新的值")]),t._v(" "),s("li",[s("strong",[t._v("原子性")]),t._v("：对单个volatile变量的操作具有原子性。每次读/写操作等效于使用一个synchronized锁同步。")]),t._v(" "),s("li",[t._v("volatile写：在线程内存空间对当前volatile变量修改后，"),s("strong",[t._v("刷新到主内存共享区域")]),t._v("。")]),t._v(" "),s("li",[t._v("volatile读：线程内存空间的volatile变量"),s("strong",[t._v("置为无效")]),t._v("，从主内存读取最新共享变量。")])]),t._v(" "),s("p",[s("font",{attrs:{color:"red"}},[s("strong",[t._v("结论：为了实现volatile内存语义，通过插入不同内存屏障实现代码的同步")])]),t._v("。")],1),t._v(" "),s("h2",{attrs:{id:"_4-锁的内存语义"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-锁的内存语义"}},[t._v("#")]),t._v(" 4.锁的内存语义")]),t._v(" "),s("p",[t._v("ReentrantLock分为"),s("strong",[t._v("公平锁")]),t._v("和"),s("strong",[t._v("非公平锁")]),t._v("，它们的锁获取-释放的区别如下,分别代表两种锁的实现：")]),t._v(" "),s("ul",[s("li",[t._v("公平锁锁获取时，会"),s("strong",[t._v("读volatile变量")]),t._v("；释放锁时会"),s("strong",[t._v("写volatile变量")]),t._v("。——利用volatile的内存语义。")]),t._v(" "),s("li",[t._v("非公平锁在获取锁时，会使用"),s("strong",[t._v("CAS方法")]),t._v("更新state值。")])]),t._v(" "),s("h2",{attrs:{id:"_5-final内存语义"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-final内存语义"}},[t._v("#")]),t._v(" 5.final内存语义")]),t._v(" "),s("p",[t._v("final域重排序与内存屏障限制：")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("写操作")]),t._v("：final变量的写只能在"),s("strong",[t._v("构造函数")]),t._v("内进行，不能重排到构造函数之外。")]),t._v(" "),s("li",[s("strong",[t._v("读操作")]),t._v("：①final变量的对象引用的读操作②final变量的读操作。两者执行顺序不能改变")])]),t._v(" "),s("h2",{attrs:{id:"_6-happens-before关系"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-happens-before关系"}},[t._v("#")]),t._v(" 6.happens-before关系")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("happens-before")]),t._v(" "),s("p",[t._v("描述代码编写的先后关系，强调前面的操作结果一定对后面操作结果可见。")]),t._v(" "),s("p",[t._v("代码之间只要不存在数据依赖关系，那么代码实际执行顺序并不一定跟happens-before关系保持一致。")])]),t._v(" "),s("p",[t._v("常见的happens-before规则：")]),t._v(" "),s("ul",[s("li",[t._v("程序顺序规则")]),t._v(" "),s("li",[t._v("volatile规则：volatile变量写 —> happens-before —> volatile变量读。保证所有线程能够读到最新的共享变量。")]),t._v(" "),s("li",[t._v("监视器锁规则：对一个锁的解锁—>happens-before—>对一个锁的加锁。解锁后锁的状态要对全局可见，才能够加锁。")]),t._v(" "),s("li",[t._v("传递性")]),t._v(" "),s("li",[t._v("start规则：A线程执行ThreadB.start启动线程，那么在执行ThreadB.start()之前对共享变量所做的修改，接下来在B线程开始执行后都是可见的。")]),t._v(" "),s("li",[t._v("join规则：A线程执行ThreadB.join终止B线程，那么B线程终止前修改的共享变量，在A执行ThreadB.join都能够读取到。")])]),t._v(" "),s("h2",{attrs:{id:"_7-延迟初始化方案"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-延迟初始化方案"}},[t._v("#")]),t._v(" 7.延迟初始化方案")]),t._v(" "),s("p",[t._v("延迟初始化：Java程序中，有时候对象初始化的比较大，"),s("strong",[t._v("需要在使用该对象的时候再进行初始化")]),t._v("，也就是懒加载，因此程序员需要延迟初始化。")]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Instance")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getInstance")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("instance"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\tinstance"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Instance")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" instance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br")])]),s("p",[t._v("但上述代码在多线程的环境下存在问题。")]),t._v(" "),s("h3",{attrs:{id:"double-checked-locking存在的问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#double-checked-locking存在的问题"}},[t._v("#")]),t._v(" Double-Checked Locking存在的问题")]),t._v(" "),s("p",[t._v("上述代码在多线程下存在问题，如果在方法加锁synchronized，虽然问题可以解决，但是加锁开销较大。")]),t._v(" "),s("p",[t._v("我们希望如果当前对象已经初始化，那么直接返回对象，不需要重新获取锁资源，从而减小锁粒度和开销，因此就有了下面的代码：")]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DoubleCheckedLocking")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \t\t\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Instance")]),t._v(" instance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \t\t\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Instance")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getInstance")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \t\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 3")]),t._v("\n         "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("instance "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \t\t\t\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 4:第一次检查")]),t._v("\n             "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("synchronized")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DoubleCheckedLocking")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 5:加锁")]),t._v("\n                 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("instance "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \t\t\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 6:第二次检查")]),t._v("\n                 instance "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Instance")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \t\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 7:问题的根源出在这里")]),t._v("\n             "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \t\t\t\t\t\t\t\t\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 8")]),t._v("\n         "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \t\t\t\t\t\t\t\t\t\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 9")]),t._v("\n         "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" instance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \t\t\t\t\t\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 10")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \t\t\t\t\t\t\t\t\t\t\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 11")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br")])]),s("p",[t._v("然而上述代码存在的问题在于，第七行代码并不是一个原子操作，它分为两个步骤"),s("font",{staticStyle:{background:"rgb(255, 240, 102)"}},[s("strong",[t._v("①分配内存地址空间，并完成初始化②instance引用指向内存空间")])]),t._v("。在多线程下若发生重排，则线程B在执行第4行进行判断时，"),s("strong",[t._v("会出现instance不为null，但是还没完成初始化的情况")]),t._v("。")],1),t._v(" "),s("p",[t._v("解决方案分为两个：")]),t._v(" "),s("ol",[s("li",[t._v("✨保证instance=new Instance()初始化过程中，"),s("strong",[t._v("不出现重排")]),t._v("。")])]),t._v(" "),s("ul",[s("li",[t._v("直接将instance变量设置为"),s("strong",[t._v("volatile修饰")]),t._v("。单个volatile操作具有原子性。")])]),t._v(" "),s("ol",{attrs:{start:"2"}},[s("li",[s("p",[t._v("✨instance=new Instance()初始化的过程"),s("strong",[t._v("对外不可见")]),t._v("。")]),t._v(" "),s("ul",[s("li",[t._v("基于类初始化的方案：在执行类初始化期间，JVM会去获取一个锁，它可以同步多个线程同步过程，主要是类初始化锁的五个阶段...")])]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("InstanceFactory")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("InstanceHolder")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n         "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Instance")]),t._v(" instance "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Instance")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Instance")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getInstance")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n         "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("InstanceHolder")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("instance "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("　　"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//这里将导致InstanceHolder类被初始化")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br")])])])])])}),[],!1,null,null,null);s.default=e.exports}}]);