(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{342:function(n,t,r){"use strict";r.r(t);var o=r(4),s=Object(o.a)({},(function(){var n=this,t=n._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[t("h1",{attrs:{id:"剑指offer03"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#剑指offer03"}},[n._v("#")]),n._v(" 剑指offer03")]),n._v(" "),t("p",[n._v("找出数组中重复的数字。\n在一个长度为 n 的数组 nums 里的所有数字都在 0～n-1 的范围内。数组中某些数字是重复的，但不知道有几个数字重复了，也不知道每个数字重复了几次。请找出数组中任意一个重复的数字。")]),n._v(" "),t("blockquote",[t("p",[n._v("输入：\n[2, 3, 1, 0, 2, 5, 3]\n输出：2 或 3")])]),n._v(" "),t("ol",[t("li",[n._v("返回整型数组长度num.length是调用属性(包括"),t("strong",[n._v("字符数组")]),n._v(")，后面不需要跟括号。String.length()是调用方法。")]),n._v(" "),t("li",[t("strong",[n._v("原地哈希")]),n._v("：时间O(n)空间O(1)，因为每交换一次，就有一个"),t("strong",[n._v("索引值")]),n._v("和"),t("strong",[n._v("索引")]),n._v("匹配，所以最多交换n次，所以时间复杂度是O(n)。根据鸽巢原理，当前索引值和索引下的值相等说明该索引值重复，直接return当前索引值。")]),n._v(" "),t("li",[n._v("二分查找不行的原因在于，当两边的count都等于各自的区间长度时，则重复数字可能在左边也可能在右边。")])])])}),[],!1,null,null,null);t.default=s.exports}}]);