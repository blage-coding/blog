(window.webpackJsonp=window.webpackJsonp||[]).push([[128],{446:function(r,t,s){"use strict";s.r(t);var e=s(4),n=Object(e.a)({},(function(){var r=this,t=r._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":r.$parent.slotKey}},[t("h1",{attrs:{id:"剑指offer05"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#剑指offer05"}},[r._v("#")]),r._v(" 剑指offer05")]),r._v(" "),t("p",[r._v('请实现一个函数，把字符串 s 中的每个空格替换成"%20"。')]),r._v(" "),t("blockquote",[t("p",[r._v('输入：s = "We are happy."\n输出："We%20are%20happy."')])]),r._v(" "),t("ol",[t("li",[r._v("substring(a,b)：返回下标为a到b-1之间的string")]),r._v(" "),t("li",[r._v("Java 中的字符串是不变的，所以直接替换或者直接赋值是错误的")]),r._v(" "),t("li",[r._v("StringBuilder类型可以用来表达可变的字符串，实现拼接替换，最后再使用tostring()转化为string")]),r._v(" "),t("li",[t("strong",[r._v("s.tocharArray()")]),r._v(" 方法可以使string的拼接问题在字符数组进行。 char[] newArr=new char[3*n],最后再调用新的构造new  String(newArr,0,length)返回string类型（从字符数组0开始长度为length）")]),r._v(" "),t("li",[r._v('s.replaceAll("ss","bb")直接把ss全部替换bb')]),r._v(" "),t("li",[r._v("foreach写法for(char c:s.toCharArray())")])])])}),[],!1,null,null,null);t.default=n.exports}}]);