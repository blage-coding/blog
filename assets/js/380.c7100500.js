(window.webpackJsonp=window.webpackJsonp||[]).push([[380],{698:function(s,t,a){"use strict";a.r(t);var r=a(4),_=Object(r.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"mysql一致性与高可用性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#mysql一致性与高可用性"}},[s._v("#")]),s._v(" MySQL一致性与高可用性")]),s._v(" "),t("h2",{attrs:{id:"_1-mysql一致性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-mysql一致性"}},[s._v("#")]),s._v(" 1.MySQL一致性")]),s._v(" "),t("h3",{attrs:{id:"_1-1备库设置readonly"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-1备库设置readonly"}},[s._v("#")]),s._v(" 1.1备库设置Readonly")]),s._v(" "),t("p",[s._v("客户端和主库进行连接，并在主库上执行更新操作后，主库会将所有更新都同步到备库中。")]),s._v(" "),t("p",[s._v("一般情况下，备库需要进行设置成readonly只读模式，好处如下：")]),s._v(" "),t("ul",[t("li",[s._v("为了减少主库的压力，一些运营类查询语句会"),t("strong",[s._v("放到备库上查")]),s._v("，设置只读可以设置防止误操作。")]),s._v(" "),t("li",[s._v("防止主备切换时出现"),t("strong",[s._v("双写")]),s._v("bug，导致主备不一致。")]),s._v(" "),t("li",[s._v("通过readonly可以区分节点是主库还是存库。")])]),s._v(" "),t("p",[s._v("只读模式对于拥有super用户权限的用户是无效的，"),t("strong",[s._v("用于备库的同步更新的线程就拥有超级权限")]),s._v("。因此备库的更新不会受限于只读模式。")]),s._v(" "),t("h3",{attrs:{id:"_1-2主备日志同步流程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-2主备日志同步流程"}},[s._v("#")]),s._v(" 1.2主备日志同步流程")]),s._v(" "),t("p",[s._v("主库(A节点)执行事务并更新日志后，"),t("font",{attrs:{color:"red"}},[t("strong",[s._v("通过dump_thread线程专门用于维护主库和备库的长连接")])]),s._v("。")],1),s._v(" "),t("p",[t("img",{attrs:{src:"https://jsd.cdn.zzko.cn/gh/blage-coding/picx-images-hosting@master/20230703/image.1ws6tgq9wuf4.webp",alt:""}})]),s._v(" "),t("ol",[t("li",[s._v("备库B通过change master命令设置主库A的IP、用户名、密码，"),t("strong",[s._v("要读取的主库的binlog文件名和位置偏移")]),s._v("。")]),s._v(" "),t("li",[s._v("备库上执行start slave命令后，备库上会启动两个线程：\n"),t("ul",[t("li",[t("strong",[s._v("io-thread：负责与主库进行连接")]),s._v("。拿到主库的binlog日志后会写到本地文件，也就是中转日志(relaylog)")]),s._v(" "),t("li",[t("strong",[s._v("sql-thread：读取中转日志，并解析出日志的SQL命令然后执行")]),s._v("。")])])])]),s._v(" "),t("h3",{attrs:{id:"_1-3binlog的三种格式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-3binlog的三种格式"}},[s._v("#")]),s._v(" 1.3binlog的三种格式")]),s._v(" "),t("p",[t("font",{staticStyle:{background:"rgb(240, 240, 236)"},attrs:{color:"#d94a33"}},[t("strong",[s._v("binlog_format")])]),s._v("：设置binlog的格式。可选参数包含以下三种格式。")],1),s._v(" "),t("h4",{attrs:{id:"statement"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#statement"}},[s._v("#")]),s._v(" statement")]),s._v(" "),t("p",[s._v("使用以下命令查看binlog日志文件：")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/*查看当前binlog的记录位置*/")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("show")]),s._v(" master "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("status")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/*根据日志名称查看指定日志文件*/")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("show")]),s._v(" binlog events "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("in")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'master.000001'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("p",[s._v("得到的binlog内容如下，其中"),t("font",{attrs:{color:"red"}},[t("strong",[s._v("begin和commit之间记录的是SQL语句原文")])]),s._v("。")],1),s._v(" "),t("p",[t("img",{attrs:{src:"https://jsd.cdn.zzko.cn/gh/blage-coding/picx-images-hosting@master/20230703/image.6sx67yjma200.webp",alt:""}})]),s._v(" "),t("ul",[t("li",[s._v("第三行：首先use 'test'表示先锁定删除数据表t所在的数据库test，然后接着执行删除命令。")]),s._v(" "),t("li",[s._v("第四行：XID用于redolog与binlog两者之间的定位和标识。")])]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("delete")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" t "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" a"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("and")]),s._v(" t_modified"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'2018-11-10'")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("limit")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("💣"),t("strong",[s._v("statement格式存在的问题")]),s._v("：考虑如果客户端要执行以上语句，其中t_modified和a字段都有索引，因为limit 1的缘故，该条删除语句分别使用a索引和t_modified索引，"),t("strong",[s._v("定位到的可能不是一条行记录")]),s._v("。")]),s._v(" "),t("p",[s._v("也就是说在statement格式下，仅仅根据SQL语句进行备份，"),t("strong",[s._v("如果主库执行时使用了索引a，而备库执行时使用了t_modified，那么就会导致主备不一致的情况")]),s._v("。MySQL认为这是不安全的。")]),s._v(" "),t("h4",{attrs:{id:"row"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#row"}},[s._v("#")]),s._v(" row")]),s._v(" "),t("p",[s._v("借助mysqlbinlog工具解析查看binlog具体内容。其中-vv表示将内容都解析出来，可以看到各个字段的值。")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[s._v("mysqlbinlog  "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("vv "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("data")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("master"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("000001")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("--start-position=8900;")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[t("img",{attrs:{src:"https://jsd.cdn.zzko.cn/gh/blage-coding/picx-images-hosting@master/20230703/image.3qswvxwezt40.webp",alt:""}})]),s._v(" "),t("p",[s._v("row格式下，begin与commit之间记录的是两个event事件：")]),s._v(" "),t("ul",[t("li",[t("p",[t("font",{staticStyle:{background:"rgb(240, 240, 236)"},attrs:{color:"#d94a33"}},[t("strong",[s._v("Table_map")])]),s._v(" ：用于说明SQL语句操作的是哪个库哪个表")],1)]),s._v(" "),t("li",[t("p",[t("font",{staticStyle:{background:"rgb(240, 240, 236)"},attrs:{color:"#d94a33"}},[t("strong",[s._v("Delete_rows")])]),s._v("：用于定义删除行为。其中根据binlog_row_images不同，记录的信息也存在些许差别：")],1),s._v(" "),t("ul",[t("li",[t("p",[t("font",{staticStyle:{background:"rgb(240, 240, 236)"},attrs:{color:"#d94a33"}},[t("strong",[s._v("binlog_row_image")])]),s._v(" = FULL：记录更新之前的记录，以及更新之后的记录。"),t("strong",[s._v("增加binlog文件大小，增加磁盘IO，但从数据恢复角度来说更加安全")]),s._v("。")],1),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("### UPDATE `test`.`t2`")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("### WHERE")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("###   @1=1 /* INT meta=0 nullable=0 is_null=0 */")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("###   @2='gz' /* STRING(20) meta=65044 nullable=1 is_null=0 */")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("###   @4=3 /* INT meta=0 nullable=1 is_null=0 */")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("### SET")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("###   @1=1 /* INT meta=0 nullable=0 is_null=0 */")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("###   @2='gz' /* STRING(20) meta=65044 nullable=1 is_null=0 */")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("###   @3=99 /* INT meta=0 nullable=1 is_null=0 */")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br")])])]),s._v(" "),t("li",[t("p",[t("font",{staticStyle:{background:"rgb(240, 240, 236)"},attrs:{color:"#d94a33"}},[t("strong",[s._v("binlog_row_image")])]),s._v(" = MINIMAL：仅记录该行更新的列字段值信息。"),t("strong",[s._v("相比FULL方式binlog文件更小，但不够安全")]),s._v("。")],1),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("### UPDATE `test`.`t2`")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("### WHERE")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("###   @1=1 /* INT meta=0 nullable=0 is_null=0 */")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("### SET")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("###   @3=100 /* INT meta=0 nullable=1 is_null=0 */")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])])])])])]),s._v(" "),t("p",[s._v("综上，在row格式下，"),t("font",{attrs:{color:"red"}},[t("strong",[s._v("binlog记录了具体更新操作行的主键id值")])]),s._v("，从而保证无论是主库还是备库，都能够根据主键id"),t("strong",[s._v("定位到同一行数据")]),s._v("。")],1),s._v(" "),t("h4",{attrs:{id:"mixed"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#mixed"}},[s._v("#")]),s._v(" mixed")]),s._v(" "),t("p",[s._v("对比上面两种格式的binlog，不难分析出存在以下优缺点：")]),s._v(" "),t("ul",[t("li",[s._v("statement格式的"),t("strong",[s._v("binlog文件更小")]),s._v("，因为只需要花费几十个字节存储一个SQL语句。但是在备份同步时，可能会出现"),t("strong",[s._v("主备不一致")]),s._v("的情况。")]),s._v(" "),t("li",[s._v("row格式的binlog虽然解决了主备不一致的问题，但binlog"),t("strong",[s._v("文件较大浪费空间，耗费IO资源")]),s._v("。假设一个delete语句删除十万行数据，那么binlog文件中就需要记载十万个行记录的信息(至少包含主键id)。")])]),s._v(" "),t("p",[s._v("mixed：这种格式相当于以上两种方案的折中。"),t("font",{attrs:{color:"red"}},[t("strong",[s._v("对于一条SQL语句，如果不会造成主备不一致，那么就会转化为statement格式；否则就用row格式")])]),s._v("。")],1),s._v(" "),t("h4",{attrs:{id:"增删改场景下binlog格式选择"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#增删改场景下binlog格式选择"}},[s._v("#")]),s._v(" 增删改场景下binlog格式选择")]),s._v(" "),t("p",[s._v("结论：一般来说"),t("strong",[s._v("主要使用row格式")]),s._v("。因为row格式有一个很大的好处："),t("font",{attrs:{color:"red"}},[t("strong",[s._v("恢复数据")])]),s._v("。")],1),s._v(" "),t("p",[s._v("row格式中记载了更新前和更新后行记录的所有信息，因此"),t("strong",[s._v("删错了就在日志中改为插入；插错了就在日志中改为删除；对于更新操作只需要将event事件更新前后的记录信息对调")]),s._v("即可。")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("insert")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("into")]),s._v(" t "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("values")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("now")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("这条SQL语句需要插入当前时间，因此备库根据binlog的SQL语句同步数据时，肯定会由于存在"),t("strong",[s._v("时间间隔")]),s._v("而导致主从不一致的情况。因此这种情况下有两种解决方案：")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("使用row格式不会出现主备不一致的情况，直接根据该条行记录的列信息进行同步和备份。")])]),s._v(" "),t("li",[t("p",[s._v("使用mixed格式的情况下，"),t("strong",[s._v("MySQL虽然会选择statenment格式，但是会加上时间戳信息，保证now()返回的是一个设定好的时间")]),s._v("。")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("set")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TIMESTAMP")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1546103491")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("insert")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("into")]),s._v(" t "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("values")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("now")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])])])]),s._v(" "),t("h4",{attrs:{id:"如何根据binlog来恢复数据"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#如何根据binlog来恢复数据"}},[s._v("#")]),s._v(" 如何根据binlog来恢复数据")]),s._v(" "),t("p",[s._v("statement格式的SQL语句在执行时，有时候"),t("strong",[s._v("依赖于binlog的上下文命令")]),s._v("。因此使用binlog恢复数据时，需要将解析结果整行整段一起执行。")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[s._v("mysqlbinlog master"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("000001")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("--start-position=2738 --stop-position=2973 | mysql -h127.0.0.1 -P13000 -u$user -p$pwd;")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("上述命令是指将master.000001文件2738字节到2973字节中间这段内容进行"),t("strong",[s._v("解析和重放")]),s._v("，然后放到MySQL执行。")]),s._v(" "),t("h3",{attrs:{id:"_1-4循环复制问题"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-4循环复制问题"}},[s._v("#")]),s._v(" 1.4循环复制问题")]),s._v(" "),t("p",[s._v("实际生产过程中，采用的是"),t("strong",[s._v("双M结构")]),s._v("(双主节点)。")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://jsd.cdn.zzko.cn/gh/blage-coding/picx-images-hosting@master/20230703/image.7gksd814k0o0.webp",alt:""}})]),s._v(" "),t("ul",[t("li",[s._v("不存在绝对的主节点或者从节点。"),t("strong",[s._v("节点之间互为主备关系")]),s._v("。")]),s._v(" "),t("li",[s._v("如果客户端在A节点进行更新操作，那么B节点就作为从节点将A节点内容同步到自己节点上。反之在B节点上进行更新，那么A节点就需要同步更新。")])]),s._v(" "),t("p",[t("font",{staticStyle:{background:"rgb(240, 240, 236)"},attrs:{color:"#d94a33"}},[t("strong",[s._v("log_slave_updates")])]),s._v(" ：设置为on，表示备库执行relaylog之后会生成binlog。")],1),s._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[s._v("循环复制问题")]),s._v(" "),t("p",[s._v("A节点执行完更新语句将binlog传给备库B，B节点执行更新语句的同时自身也会生成新的binlog文件，因此这时候A节点相当于”备库“，又轮到A节点同步...这样就会不断循环执行同一条更新语句。")])]),s._v(" "),t("p",[t("font",{attrs:{color:"red"}},[t("strong",[s._v("MySQL对于每条命令，第一次执行时都会在binlog中记下所在的server id，并且将这条日志在传给备库时，备库并不会修改")])]),s._v("。而每"),t("strong",[s._v("个库的server id都是不同的")]),s._v("，所以可以根据server id来中止恶行循环。备库在执行relaylog时，"),t("strong",[s._v("生成的binlog的server id需要与relaylog的id保持一致")]),s._v("。")],1),s._v(" "),t("p",[s._v("整个过程如下：")]),s._v(" "),t("ol",[t("li",[s._v("A节点执行更新操作，并生成binlog，通过后台线程传给B节点")]),s._v(" "),t("li",[s._v("B节点收到后，执行relaylog，并生成新的binlog，此时该binlog中的更新操作的server id仍然为A节点的id")]),s._v(" "),t("li",[s._v("A节点作为B的”从节点“，拿到B传过来的binlog，"),t("strong",[s._v("发现里面的server id就是自己的server id。因此不再执行该日志的更新操作")]),s._v("。")])]),s._v(" "),t("p",[s._v("然而这个方法也还是存在一定的缺点，当节点数大于2时，备库之间发送的binlog日志同样会造成死循环。也就是说"),t("strong",[s._v("发送binlog进行同步的节点只能由主库发起")]),s._v("，”备库“与”备库“之间不能发起同步。")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[s._v("stop slave；\nCHANGE MASTER "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TO")]),s._v(" IGNORE_SERVER_IDS"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("server_id_of_B"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("start")]),s._v(" slave"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[s._v("从节点可以执行以上语句，当前从节点受到日志更新后，主节点还是一开始的主节点，从而中止日志传播。")]),s._v(" "),t("h2",{attrs:{id:"_2-mysql高可用性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-mysql高可用性"}},[s._v("#")]),s._v(" 2.MySQL高可用性")]),s._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[s._v("主备延迟")]),s._v(" "),t("p",[s._v("主库A执行完一个事务写入binlog，计为时刻T1；备库B收到更新binlog并执行完这个更新事务，计为时刻T2；")]),s._v(" "),t("p",[s._v("主备延迟就是主库执行完成的时间与备库完成同步的时间之差，也就是T2-T1。")])]),s._v(" "),t("p",[s._v("在备库执行以下SQL语句查看备库延迟"),t("font",{staticStyle:{background:"rgb(240, 240, 236)"},attrs:{color:"#d94a33"}},[t("strong",[s._v("seconds_behind_master")])]),s._v(" 的值。忽略网络因素，主备延迟的来源主要是"),t("strong",[s._v("备库消费relaylog的这段时间")]),s._v("。")],1),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("show")]),s._v(" slave "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("status")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h3",{attrs:{id:"_2-1主备延迟的来源"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-1主备延迟的来源"}},[s._v("#")]),s._v(" 2.1主备延迟的来源")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("备库所在的机器性能较差")])])]),s._v(" "),t("p",[s._v("备库设置”非双1“的模式下，更新操作导致的大量IOPS，因此备库在”烂机器“上抢占CPU和内存资源执行同步更新事务，导致更大的主备延迟。")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("备库压力大")])])]),s._v(" "),t("p",[s._v("为了不直接影响业务，个别查询语句往往在备库上执行，而"),t("strong",[s._v("这些查询语句也会耗费大量CPU资源")]),s._v("，从而影响新进来的同步更新速度。")]),s._v(" "),t("p",[s._v("解决方案：①"),t("strong",[s._v("一主多从")]),s._v("：一个备库不行那就搞多几个备库，让多个备库分担查询压力。")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("大事务")])])]),s._v(" "),t("p",[s._v("一个大事务如果主库执行需要十分钟，那么从库执行时也至少需要十分钟。从而造成较大的主备延迟。")]),s._v(" "),t("p",[s._v("因此需要尽可能避免大事务操作，可以将数据分批处理。")]),s._v(" "),t("h3",{attrs:{id:"_2-2可靠性优先策略"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-2可靠性优先策略"}},[s._v("#")]),s._v(" 2.2可靠性优先策略")]),s._v(" "),t("p",[s._v("当有新的更新操作到来后，整个主备切换流程如下：")]),s._v(" "),t("ol",[t("li",[s._v("首先判断备库B的主备延迟"),t("font",{staticStyle:{background:"rgb(240, 240, 236)"},attrs:{color:"#d94a33"}},[t("strong",[s._v("seconds_behind_master")])]),s._v("是否小于设定的阈值，如果不小于则轮询重试这一步。")],1),s._v(" "),t("li",[s._v("将主库A设置为"),t("strong",[s._v("只读模式")]),s._v("。——此时"),t("strong",[s._v("整个数据库直到步骤5处于短暂的不可用状态")]),s._v("。")]),s._v(" "),t("li",[s._v("判断备库B的"),t("font",{staticStyle:{background:"rgb(240, 240, 236)"},attrs:{color:"#d94a33"}},[t("strong",[s._v("seconds_behind_master")])]),s._v("是否等于0，如果不等于0则持续轮询。")],1),s._v(" "),t("li",[s._v("将备库B设置为"),t("strong",[s._v("可读写模式")]),s._v("。")]),s._v(" "),t("li",[s._v("把业务请求切到备库B,完成"),t("strong",[s._v("主从切换")]),s._v("。")])]),s._v(" "),t("p",[s._v("整个过程最耗时的地方是步骤3，因此这就是为什么存在主备延迟double check的原因：")]),s._v(" "),t("ul",[t("li",[s._v("第一遍轮询主备延迟原因在于，步骤三耗时比较慢，如果进来时的主备延迟就很大，那么很早就关闭主库A的权限会"),t("strong",[s._v("导致整个系统不可用的时间大大延长")]),s._v("。")]),s._v(" "),t("li",[s._v("第二遍轮询的目的在于保证可靠性，等待"),t("strong",[s._v("整个备库B执行完所有的事务，完成同步")]),s._v("。")])]),s._v(" "),t("p",[s._v("显然"),t("font",{attrs:{color:"red"}},[t("strong",[s._v("可靠性策略能够保证主备库数据的一致性，但是需要花费较大时间等待备库完成同步")])]),s._v("。")],1),s._v(" "),t("h3",{attrs:{id:"_2-3可用性优先策略"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-3可用性优先策略"}},[s._v("#")]),s._v(" 2.3可用性优先策略")]),s._v(" "),t("p",[s._v("在可用性优先策略中，将上述步骤4、5提前执行。即先切换，后补数据实现同步：")]),s._v(" "),t("ol",[t("li",[s._v("将备库B设置为可读写模式")]),s._v(" "),t("li",[s._v("把所有业务请求切到备库B上，完成主从切换。")]),s._v(" "),t("li",[s._v("同上步骤一到三，备库B执行主库A传过来的更新日志，实现同步。")])]),s._v(" "),t("p",[s._v("可用性策略能够保证系统"),t("font",{attrs:{color:"red"}},[t("strong",[s._v("以较低的时延实现主备切换，速度快，但缺点在于容易出现主备数据不一致")])]),s._v("。")],1),s._v(" "),t("h3",{attrs:{id:"_2-4主库断电场景"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-4主库断电场景"}},[s._v("#")]),s._v(" 2.4主库断电场景")]),s._v(" "),t("p",[s._v("场景：主库突然断电或者宕机，并且当前主备延迟是30分钟。")]),s._v(" "),t("p",[s._v("这种情况下显然只能采用可用性优先策略，因为如果不立马将当前备库切换到主库，就会导致整个系统不可用；可即使是切换到了备库B，主备延迟有30分钟那么大，这意味着"),t("strong",[s._v("30分钟内更新的数据用户是查询不到的")]),s._v("，对个别业务场景而言，这种状态也是不能接受的。")]),s._v(" "),t("p",[s._v("总而言之，在保证"),t("strong",[s._v("数据可靠性优先")]),s._v("的条件下，MySQL的可用性依赖于"),t("strong",[s._v("主备延迟")]),s._v("。"),t("font",{attrs:{color:"red"}},[t("strong",[s._v("延迟越小，主库出故障后恢复服务所需要的时间越短，可用性越高")])]),s._v("。")],1),s._v(" "),t("h2",{attrs:{id:"_3-mysql并行复制"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-mysql并行复制"}},[s._v("#")]),s._v(" 3.MySQL并行复制")]),s._v(" "),t("p",[s._v("问题：在高并发场景下，大量用户请求会分别打到主库和备库。对主库来说因为"),t("strong",[s._v("InnoDB支持更细粒度的行锁")]),s._v("，因此主库对业务并发度的支持还是比较友好的；而对于从库，尤其是sql线程执行中转日志更新DATA时，如果使用"),t("strong",[s._v("单线程")]),s._v("，就会产生较大的主备延迟，备库永远追不上主库。")]),s._v(" "),t("p",[s._v("解决问题的核心在于，将"),t("font",{attrs:{color:"red"}},[t("strong",[s._v("单线程sql_thread拆成多线程进行复制")])]),s._v("。具体来说原来的sql_thread会被拆掉分成"),t("strong",[s._v("单个coordinator线程和多个worker线程")]),s._v("。其中coordinator负责读取中转日志和分发事务，而不同worker的执行顺序不能控制，所以分发时需要遵循以下原则：")],1),s._v(" "),t("ul",[t("li",[s._v("同一个完整的事务不能被拆开，必须放到同一个worker中。")]),s._v(" "),t("li",[t("strong",[s._v("同一行的不同事务必须分发到同一个worker")]),s._v("，从而"),t("strong",[s._v("控制执行顺序")]),s._v("，保证主备一致。")])]),s._v(" "),t("p",[s._v("要想迅速标识出表名和行名，显然"),t("font",{attrs:{color:"red"}},[t("strong",[s._v("哈希表")])]),s._v("是一个很好的选择，因为它的key具有唯一性。下面介绍以下两种策略：")],1),s._v(" "),t("h3",{attrs:{id:"_3-1按表分发规则"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-1按表分发规则"}},[s._v("#")]),s._v(" 3.1按表分发规则")]),s._v(" "),t("p",[s._v("核心思想："),t("font",{attrs:{color:"red"}},[t("strong",[s._v("不同的事务如果操作同一个数据库的表，那么将这些事务都放到同一个worker进行")])]),s._v("。")],1),s._v(" "),t("p",[s._v("每一个worker对应一个哈希表，用于保存当前worker的"),t("strong",[s._v("执行队列")]),s._v("。哈希表的"),t("strong",[s._v("key为数据库名+表名")]),s._v("，"),t("strong",[s._v("value代表这个表的执行队列，有多少个事务同时要在这个表上进行操作")]),s._v("。")]),s._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[s._v("worker冲突")]),s._v(" "),t("p",[s._v("如果当前worker的事务执行队列中存在一个事务A，它与当前事务B操作的都是同一张表，那么则说当前事务与该worker冲突。")])]),s._v(" "),t("p",[t("img",{attrs:{src:"https://jsd.cdn.zzko.cn/gh/blage-coding/picx-images-hosting@master/20230704/image.60umx7gpdt80.webp",alt:""}})]),s._v(" "),t("p",[s._v("规则如下：")]),s._v(" "),t("ul",[t("li",[s._v("worker中如果某个表都已经复制更新完毕，执行队列为0，那么则将该表从哈希表中的key删除。")]),s._v(" "),t("li",[s._v("当前事务如果与多个worker存在冲突，那么coordinator线程则进入等待状态。")]),s._v(" "),t("li",[s._v("直到当前"),t("strong",[s._v("只有一个")]),s._v("worker与当前事务存在冲突，那么coordinator线程会将该事务分配给该worker，并加入冲突表的执行队列。")])]),s._v(" "),t("p",[s._v("💣按表分发存在的问题：按表转发的粒度比较大，如果"),t("strong",[s._v("多个操作同个表的高并发")]),s._v("(热点数据)请求打进来，就会导致所有的事务堆积进同一个worker中。从而退化为“单线程复制”。")]),s._v(" "),t("h3",{attrs:{id:"_3-2按行分发规则"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-2按行分发规则"}},[s._v("#")]),s._v(" 3.2按行分发规则")]),s._v(" "),t("p",[s._v("核心思想："),t("font",{attrs:{color:"red"}},[t("strong",[s._v("如果两个事务没有操作同一行数据，那么它们可以在不同的worker下并行执行")])]),s._v("。")],1),s._v(" "),t("p",[s._v("注意仅使用主键ID作为key虽然可以将不同行的事务分发到对应的桶，但在“"),t("strong",[s._v("唯一索引”上依然存在时序约束")]),s._v("，个别情况下不同的行数据也需要放在同一个worker中顺序执行。因此哈希表的key需要设置多个项：")]),s._v(" "),t("ul",[t("li",[s._v("库名+表名+主键名称+主键字段值")]),s._v(" "),t("li",[s._v("库名+表名+唯一索引字段名称+唯一索引字段值")]),s._v(" "),t("li",[s._v("...")])]),s._v(" "),t("p",[s._v("以上多个项都是“且”的关系，也就是说只要有一项存在冲突，那么当前事务就与该worker就存在冲突。既然需要从relaylog中转日志中读取列字段的值，显然binlog格式只能使用"),t("strong",[s._v("row格式")]),s._v("。")]),s._v(" "),t("p",[s._v("💣按行分发存在的问题："),t("strong",[s._v("按行分发虽然并发度更高")]),s._v("，但是解析binlog+计算和保存哈希这两个步骤成本较高，消耗较多的资源。")]),s._v(" "),t("h3",{attrs:{id:"_3-3其它规则策略"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-3其它规则策略"}},[s._v("#")]),s._v(" 3.3其它规则策略")]),s._v(" "),t("p",[s._v("MySQL5.6：按"),t("strong",[s._v("库")]),s._v("分发。需要将热度相同的表均摊到不同的数据库当中。")]),s._v(" "),t("p",[s._v("MariaDB：利用"),t("strong",[s._v("组提交里事务之间操作的行数据肯定不会产生冲突")]),s._v("的特性，备库每次将“同组”"),t("font",{staticStyle:{background:"rgb(240, 240, 236)"},attrs:{color:"#d94a33"}},[t("strong",[s._v("commit_id")])]),s._v("的所有事务一次性取出来，并直接分发到不同的worker(肯定不会冲突)。缺点在于下一组的所有事务，需要等到所有worker中当前这组事务都更新完，才会开始下一组事务的更新。")],1),s._v(" "),t("p",[s._v("MySQL5.7：上述两种策略的融合。核心思想是既然"),t("strong",[s._v("处于prepare阶段的事务就已经通过锁冲突检测了")]),s._v("，因此同时处于prepare阶段(以及到commit阶段)的所有事务都是可以并行的。本质上是在两阶段写binlog时，同时添加记录"),t("font",{staticStyle:{background:"rgb(240, 240, 236)"},attrs:{color:"#d94a33"}},[t("strong",[s._v("commit_id")])]),s._v("，备库通过这个id来判断是否可以并行。此外可以通过调节binlog两个参数，利用延迟机制使组提交的效果最好。")],1),s._v(" "),t("p",[s._v("MySQL5.7.22：基于"),t("strong",[s._v("WRITESET")]),s._v("进行复制。与按行分发的区别在于，它是在主库生成binlog后直接将writeset写进去，因此备库不需要扫描binlog(取出每个行数据)也不需要计算。判断冲突时，"),t("strong",[s._v("只要两个事务之间的writeset没有交集，那么这两个事务就可以分别放入不同的worker并行执行")]),s._v("。")]),s._v(" "),t("p",[s._v("5.7.22根据参数"),t("font",{staticStyle:{background:"rgb(240, 240, 236)"},attrs:{color:"#d94a33"}},[t("strong",[s._v("binlog-transaction-dependency-tracking")])]),s._v("设置不同的策略：")],1),s._v(" "),t("ul",[t("li",[s._v("COMMIT_ORDER：根据同时进入prepare的事务来判断是否可以并行。")]),s._v(" "),t("li",[s._v("WRITESET：计算出这行数据的所有哈希值，并组成集合。")]),s._v(" "),t("li",[s._v("WRITESET_SESSION：在上面基础上多了一个约束，在主库中同一个线程"),t("strong",[s._v("先后执行的两个事务")]),s._v("，在备库执行同步时，需要保证相同的先后顺序(相当于要放在同一个worker)。")])]),s._v(" "),t("h2",{attrs:{id:"_4-mysql一主多从下的主备切换"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-mysql一主多从下的主备切换"}},[s._v("#")]),s._v(" 4.MySQL一主多从下的主备切换")]),s._v(" "),t("p",[s._v("A与A'互为主备库，B和C均为从库。当主库A发生故障时，备库A'会成为新的主库，同时所有从库改接新的主库。")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://jsd.cdn.zzko.cn/gh/blage-coding/picx-images-hosting@master/20230704/image.44h1bgyxzrc0.webp",alt:""}})]),s._v(" "),t("p",[s._v("其中从库节点B更换主节点时，需要执行如下"),t("strong",[s._v("change master")]),s._v("命令，包括指明新主节点A'的IP、端口、用户名、密码，同时还需要指明同步位点，即"),t("font",{attrs:{color:"red"}},[t("strong",[s._v("主库对应的文件名和日志偏移量")])]),s._v("。")],1),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[s._v("CHANGE MASTER "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TO")]),s._v(" \nMASTER_HOST"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("$host_name \nMASTER_PORT"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("$port \nMASTER_USER"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("$user_name \nMASTER_PASSWORD"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("$password \nMASTER_LOG_FILE"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("$master_log_name \nMASTER_LOG_POS"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("$master_log_pos  \n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("h3",{attrs:{id:"_4-1基于同步位点的主备切换"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-1基于同步位点的主备切换"}},[s._v("#")]),s._v(" 4.1基于同步位点的主备切换")]),s._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[s._v("同步位点")]),s._v(" "),t("p",[s._v("从库所需要同步的主库对应文件名和日志偏移量")])]),s._v(" "),t("p",[s._v("问题：主库A发生故障时，取故障时刻T，然后用工具扫描备库A' 的文件，最后得到在T时刻的位点。然后得到的结果并不精准，因为主库A发生故障后，所有"),t("strong",[s._v("从库和备库并不是绝对静止")]),s._v("，可能会存在"),t("strong",[s._v("重复执行事务")]),s._v("的情况。")]),s._v(" "),t("p",[s._v("常用两种解决方案如下：")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("每次从库B如果因执行重复事务出现报错，则"),t("strong",[s._v("执行以下SQL语句主动跳过一个事务，直到不再出现报错为止")]),s._v("。")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("set")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("global")]),s._v(" sql_slave_skip_counter"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("start")]),s._v(" slave"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])])]),s._v(" "),t("li",[t("p",[s._v("设置"),t("font",{staticStyle:{background:"rgb(240, 240, 236)"},attrs:{color:"#d94a33"}},[t("strong",[s._v("slave_skip_errors")])]),s._v("参数，"),t("strong",[s._v("直接跳过指定的错误码")]),s._v("。当新的主备关系确立后，稳定一段时间确认新的主从关系后，再开启错误拦截。")],1)])]),s._v(" "),t("h3",{attrs:{id:"_4-2基于全局事务id的主备切换"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-2基于全局事务id的主备切换"}},[s._v("#")]),s._v(" 4.2基于全局事务ID的主备切换")]),s._v(" "),t("p",[s._v("GTID：全局事务ID，用于每个事务的唯一标识。格式为GTID="),t("font",{staticStyle:{background:"rgb(240, 240, 236)"},attrs:{color:"#d94a33"}},[t("strong",[s._v("server_uuid ：gno")])])],1),s._v(" "),t("p",[t("font",{staticStyle:{background:"rgb(240, 240, 236)"},attrs:{color:"#d94a33"}},[t("strong",[s._v("gno")])]),s._v("：每次"),t("strong",[s._v("提交事务")]),s._v("时才会分配给这个事务，并加一。因此GTID往往是连续的。")],1),s._v(" "),t("p",[t("font",{staticStyle:{background:"rgb(240, 240, 236)"},attrs:{color:"#d94a33"}},[t("strong",[s._v("transaction_id")])]),s._v("：也叫事务ID，只要"),t("strong",[s._v("事务执行了就会分配")]),s._v("。即使这个事务回滚了，下一个事务ID也会继续递增。")],1),s._v(" "),t("p",[s._v("每一个MySQL数据库实例都会维护一个"),t("font",{attrs:{color:"red"}},[t("strong",[s._v("GTID集合，里面包含该节点执行过的所有事务ID标识")])]),s._v("。")],1),s._v(" "),t("p",[s._v("从节点要使用GTID模式完成主备切换，不需要指定文件名+偏置这两个位点信息，只需要指定使用GTID协议，具体流程如下：")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[s._v("master_auto_position"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("ol",[t("li",[s._v("从节点B指定A' 作为主库，开始进行主备切换。")]),s._v(" "),t("li",[s._v("B节点将自己节点上执行过的所有事务集合set_b发送给主库A’ 。")]),s._v(" "),t("li",[s._v("主库A' 计算出A‘节点与B节点的事务ID集合的差集（即在A’集合但不在B集合的事务ID），并检查A'本地binlog文件的事务是否包含这个差集：\n"),t("ul",[t("li",[s._v("如果不包含，则说明A' 将B需要同步的事务日志给删掉了，返回错误(获取主库已删除gtid_purged，并在从库指定新的GTID同步起点)。")]),s._v(" "),t("li",[s._v("如果全部包含，则从binlog文件中"),t("font",{attrs:{color:"red"}},[t("strong",[s._v("找出第一个不在set_b的事务，作为B节点的同步位点")])]),s._v("。")],1)])]),s._v(" "),t("li",[s._v("A' 节点从这个事务开始，在binlog中读取后续的文档内容，并发送给从库B进行同步。")])]),s._v(" "),t("p",[s._v("💡"),t("strong",[s._v("GTID模式的好处")]),s._v("：差集计算保证了"),t("font",{attrs:{color:"red"}},[t("strong",[s._v("从库没有执行过的事务日志，主库一定有并且是完整的")])]),s._v("。否则这两个库之间就不能建立主备关系。")],1),s._v(" "),t("h3",{attrs:{id:"_4-3gtid与在线ddl"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-3gtid与在线ddl"}},[s._v("#")]),s._v(" 4.3GTID与在线DDL")]),s._v(" "),t("p",[s._v("场景：因为索引缺失导致的性能问题，在业务高峰期时对"),t("strong",[s._v("主库")]),s._v("通过online DDL添加索引，可能会对主库造成影响。所以最优实践是"),t("strong",[s._v("在备库添加索引后，再进行主备切换")]),s._v("。")]),s._v(" "),t("p",[s._v("在互为主备的双M结构下，当前主库A，备库为B；")]),s._v(" "),t("ol",[t("li",[t("p",[s._v("首先主库A执行stop slave，停止写入中转日志，暂停同步线程。")])]),s._v(" "),t("li",[t("p",[s._v("然后在备库B执行DDL语句，此时并不需要关闭binlog(设置 set_log_bin=off)，依旧将DDL语句写到binlog。")])]),s._v(" "),t("li",[t("p",[s._v("记录下备库B该条DDL语句对应的GTID。")])]),s._v(" "),t("li",[t("p",[s._v("执行以下语句序列，使主库A的GTID集合中写入DDL对应的GTID，保证主库A此时不会执行DDL影响线上：")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("set")]),s._v(" GTID_NEXT"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"server_uuid_of_Y:gno"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("begin")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("commit")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("set")]),s._v(" gtid_next"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("automatic"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("start")]),s._v(" slave"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])])]),s._v(" "),t("li",[t("p",[s._v("执行主备切换。因为DDL语句对应事务已经被跳过了，因此A库要想添加索引同步，只能再执行一遍上述1-5步骤，"),t("strong",[s._v("手动")]),s._v("在备库(先前的主库)中添加对应的索引。")])])]),s._v(" "),t("p",[s._v("✨通过提交"),t("font",{attrs:{color:"red"}},[t("strong",[s._v("指定GTID的空事务")])]),s._v("，可以将"),t("strong",[s._v("其它全局事务ID写入当前库的GTID集合当中")]),s._v("，从而避免执行或者跳过某些事务。")],1),s._v(" "),t("h2",{attrs:{id:"_5-mysql读写分离"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-mysql读写分离"}},[s._v("#")]),s._v(" 5.MySQL读写分离")]),s._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[s._v("过期读")]),s._v(" "),t("p",[s._v("客户端执行完一个更新事务后，立刻发起一个查询(打到从库)，因为存在主备延迟从库还没有完成更新，导致客户端读到的是更新前的旧数据。")])]),s._v(" "),t("p",[s._v("下面简要介绍和分析几种处理“过期读”的方案。")]),s._v(" "),t("h3",{attrs:{id:"方案一、强制走主库"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#方案一、强制走主库"}},[s._v("#")]),s._v(" 方案一、强制走主库")]),s._v(" "),t("p",[s._v("方案：根据不同业务的查询请求来划分，"),t("font",{attrs:{color:"red"}},[t("strong",[s._v("对于强一致性要求的结果，则必须直接走主库")])]),s._v("；而对于弱一致性要求的查询结果，则可以走从库。")],1),s._v(" "),t("p",[s._v("强制走主库放弃了数据库的可扩展性，导致读写压力全部打到主库。但这种方法也是"),t("strong",[s._v("用的最多")]),s._v("的。")]),s._v(" "),t("h3",{attrs:{id:"方案二、sleep方案"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#方案二、sleep方案"}},[s._v("#")]),s._v(" 方案二、sleep方案")]),s._v(" "),t("p",[s._v("方案：设定一个休眠时长，读从库之前sleep一下(或者前端设置一个交互界面和按钮)，大多数情况下经过这个时间间隔后，可以拿到最新的数据。")]),s._v(" "),t("p",[s._v("这种方法存在的问题在于，查询前人为设定的延迟时间不好精准确定下来。")]),s._v(" "),t("h3",{attrs:{id:"方案三、判断主备无延迟的方案"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#方案三、判断主备无延迟的方案"}},[s._v("#")]),s._v(" 方案三、判断主备无延迟的方案")]),s._v(" "),t("ul",[t("li",[s._v("根据"),t("font",{staticStyle:{background:"rgb(240, 240, 236)"},attrs:{color:"#d94a33"}},[t("strong",[s._v("seconds_behind_master")])]),s._v("判断")],1)]),s._v(" "),t("p",[s._v("每次执行查询之前先通过show slave status查看从库的主备延迟，如果不等于0，那么一直等直到主备延迟为0才在从库上执行查询操作。")]),s._v(" "),t("ul",[t("li",[s._v("对比位点")])]),s._v(" "),t("p",[s._v("如果主库和从库的"),t("strong",[s._v("文件名")]),s._v("和"),t("strong",[s._v("更新偏置")]),s._v("两组位点值完全相同，那么表示从库已经完全同步完成。")]),s._v(" "),t("ul",[t("li",[s._v("对比GTID")])]),s._v(" "),t("p",[s._v("判断主库和从库的GTID集合、以及执行完成的GTID集合。如果主从库两个集合相同，则表示备库已经同步完成。")]),s._v(" "),t("p",[s._v("存在的问题：主库已经执行完毕，并已经向客户端发送了提交确认(还没有生成GTID)，但是此时“"),t("strong",[s._v("备库还没有收到日志")]),s._v("”，此时虽然备库查询主备延迟发现是0，但是备库还没有执行更新同步。而这种情况下导致的过期读用上面三种方法均失效。")]),s._v(" "),t("h3",{attrs:{id:"方案四、semi-sync"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#方案四、semi-sync"}},[s._v("#")]),s._v(" 方案四、semi-sync")]),s._v(" "),t("p",[s._v("启用半同步复制后，能够保证"),t("font",{attrs:{color:"red"}},[t("strong",[s._v("所有向客户端发送确认的事务，备库都已经收到该事务的日志")])]),s._v("。")],1),s._v(" "),t("p",[s._v("①解决主库突然断电问题：要么主备都已经收到同步日志，要么客户端没收到直接回滚。保证主从数据一致性。")]),s._v(" "),t("p",[s._v("②解决上述过期读状态：通过semi-sync客户端ack和位点对比判断双重条件，可以保证从库不是过期读。")]),s._v(" "),t("p",[s._v("但是半同步不能解决以下问题：")]),s._v(" "),t("p",[s._v("①一主多从的情况下，主库只要收到一个从库的ack立刻会向客户端发送确认。因此"),t("strong",[s._v("半同步方式不能保证所有从库都处于最新的状态")]),s._v("。")]),s._v(" "),t("p",[s._v("②❓在持续延迟的情况，可能出现过度等待。")]),s._v(" "),t("h3",{attrs:{id:"方案五、等主库位点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#方案五、等主库位点"}},[s._v("#")]),s._v(" 方案五、等主库位点")]),s._v(" "),t("p",[s._v("借助SQL语句，获取"),t("strong",[s._v("从库同步到指定的主库位点")]),s._v("所需要的时间。该方法是一个阻塞方法，可以设置超时时间。")]),s._v(" "),t("p",[s._v("下列语句表示"),t("strong",[s._v("从库应用同步完指定的file和pos的binlog位置")]),s._v("，一共执行了多少事务。因此"),t("font",{attrs:{color:"red"}},[t("strong",[s._v("方案的核心就是利用该语句的返回结果判断当前从库是否同步完毕")])]),s._v("。")],1),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" master_pos_wait"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("file")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" pos"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" timeout"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("ol",[t("li",[s._v("主库执行更新操作，并立刻执行show master status获取当前主库执行到的file和position。")]),s._v(" "),t("li",[s._v("选定一个从库执行上述SQL查询语句：select master_pos_wait(File, Position, 1)；\n"),t("ul",[t("li",[s._v("如果返回值是正整数，那么说明该从库已经完成同步，直接在该从库上执行查询语句。")]),s._v(" "),t("li",[s._v("否则到主库执行查询语句。")])])])]),s._v(" "),t("p",[s._v("如果SELECT查询等待超过1s，则退化为方案一到主库上查询。")]),s._v(" "),t("h3",{attrs:{id:"方案六、gtid方案"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#方案六、gtid方案"}},[s._v("#")]),s._v(" 方案六、GTID方案")]),s._v(" "),t("p",[s._v("借助SQL语句，"),t("font",{attrs:{color:"red"}},[t("strong",[s._v("等待从库执行的事务中包含传入指定gtid_set")])]),s._v("，如果存在gtid则返回0，超时返回1。根据这个值判断当前从库是否完成同步。")],1),s._v(" "),t("p",[s._v("不同于方案五，这里获取主库gtid信息可以直接"),t("strong",[s._v("从返回包拿到")]),s._v("。通过参数设置+程序API接口。")]),s._v(" "),t("p",[s._v("在大事务+DDL场景下，如果依然选择等GTID方案，会导致要很长时间备库才会同步完成。这种场景下，可以采用以下读写分离方案：")]),s._v(" "),t("ul",[t("li",[s._v("业务低峰期将"),t("strong",[s._v("所有查询请求都切到主库")]),s._v("。")]),s._v(" "),t("li",[s._v("在从库执行DDL（可以关闭set_log_bin）")]),s._v(" "),t("li",[s._v("主从切换，所有请求打到新的主库；然后备库进行DDL")]),s._v(" "),t("li",[s._v("当备库的主备延迟降低追上主库后，再将读请求切到备库。")])])])}),[],!1,null,null,null);t.default=_.exports}}]);