(window.webpackJsonp=window.webpackJsonp||[]).push([[166],{484:function(t,i,r){"use strict";r.r(i);var n=r(4),o=Object(n.a)({},(function(){var t=this,i=t._self._c;return i("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[i("h1",{attrs:{id:"_64-最小路径和"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_64-最小路径和"}},[t._v("#")]),t._v(" 64.最小路径和")]),t._v(" "),i("p",[t._v("给定一个包含非负整数的 "),i("code",[t._v("*m* x *n*")]),t._v(" 网格 "),i("code",[t._v("grid")]),t._v(" ，请找出一条从左上角到右下角的路径，使得路径上的数字总和为最小。**说明：**每次只能向下或者向右移动一步。")]),t._v(" "),i("blockquote",[i("p",[t._v("输入：grid = [[1,2,3],[4,5,6]]\n输出：12")])]),t._v(" "),i("ol",[i("li",[t._v("动规。dp[i][j]表示从起点到grid[i][j]位置,初始化第零行第零列，"),i("strong",[t._v("dp[i][j]=Math.min(dp[i][j-1]+dp[i-1][j])+grid[i][j]")]),t._v("。")])])])}),[],!1,null,null,null);i.default=o.exports}}]);