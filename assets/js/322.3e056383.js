(window.webpackJsonp=window.webpackJsonp||[]).push([[322],{640:function(t,a,e){"use strict";e.r(a);var s=e(4),r=Object(s.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"后端基础"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#后端基础"}},[t._v("#")]),t._v(" 后端基础")]),t._v(" "),a("h2",{attrs:{id:"web应用程序"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#web应用程序"}},[t._v("#")]),t._v(" web应用程序")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("在模块中添加web")])]),t._v(" "),a("li",[a("p",[t._v("创建artifact-部署包，用来丢到tomcat容器配置部署")])]),t._v(" "),a("li",[a("p",[t._v("先有artifact后添加依赖mysql,jar后，会报错，需要删掉旧的重新创建artifact部署包，或者是fix选择add..to将新的依赖添加到部署包中。")]),t._v(" "),a("p",[t._v("可以直接把依赖放在每个module的web-in下创建的一个lib中，但是这个lib依赖库只能当前module使用；或者是在项目下创建一个module，然后所有module共享该lib。")])]),t._v(" "),a("li",[a("p",[t._v("部署Tomcat时，去Deployment部署添加artifact包，然后根据需要修改application Context(影响访问路径，"),a("strong",[t._v('一般可以改成"/')]),t._v('"不需要再输入web项目名称，直接输入资源)，然后去server检查url值，它是启动tomcat后浏览器默认访问的地址。')])])]),t._v(" "),a("h2",{attrs:{id:"字符编码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字符编码"}},[t._v("#")]),t._v(" 字符编码")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("get请求发送的中文数据目前不需要转码，如果是Tomcat8之前版本则需要转码：")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('String fname=requeset.getParameter("fname");\n//将字符串打散成字节数组\nbyte[] bytes=fname.getBytes("ISO-8859-1"); //tomcat8之前\n//将字节数组按照设定的编码重新组装成字符串\nfname=new String(bytes,"UTF-8")；\n')])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])])]),t._v(" "),a("li",[a("p",[t._v("post方式下需要设置编码，防止中文乱码，"),a("strong",[t._v("必须设置在所有读取数据之前")]),t._v("。")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('req.setCharacterEncoding("UTF-8");\n')])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])])])]),t._v(" "),a("h2",{attrs:{id:"http协议和路径"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#http协议和路径"}},[t._v("#")]),t._v(" Http协议和路径")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("请求行：1.请求的方式2.请求的URL3.请求的协议(HTTP1.1)")]),t._v(" "),a("p",[t._v("请求头：浏览器型号，版本，接受的数据类型，编码方式")]),t._v(" "),a("p",[t._v("请求体：①get：queryString，一般跟在url后面。②post：form data ③json格式，")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("绝对路径")]),t._v("：IP+端口号+context route，如http://localhost:8080/demo1/src/servlets")]),t._v(" "),a("p",[t._v("javascript："),a("strong",[t._v("window.location.href")]),t._v("='del' 相当于a标签地址栏")])])]),t._v(" "),a("h2",{attrs:{id:"get和post方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#get和post方法"}},[t._v("#")]),t._v(" get和post方法")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("post方法用于向服务器上传表单数据，url路径地址不会显示表单数据。在上传时，可以设置input标签类型为“type”,这样可以把必要信息传给服务器(fid,sessionid)而不显示给用户")]),t._v("。")]),t._v(" "),a("li",[a("strong",[t._v("get方法用于请求服务器显示数据，url路径地址会包含数据。只要不是form表单post方法，则所有的方法都是get")]),t._v("。")])])])}),[],!1,null,null,null);a.default=r.exports}}]);