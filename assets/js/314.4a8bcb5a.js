(window.webpackJsonp=window.webpackJsonp||[]).push([[314],{633:function(s,e,a){"use strict";a.r(e);var n=a(4),t=Object(n.a)({},(function(){var s=this,e=s._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h1",{attrs:{id:"mybatis"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mybatis"}},[s._v("#")]),s._v(" Mybatis")]),s._v(" "),e("h2",{attrs:{id:"配置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#配置"}},[s._v("#")]),s._v(" 配置")]),s._v(" "),e("ul",[e("li",[e("p",[s._v("核心配置文件：MyBatis相关配置在configuration中配置")]),s._v(" "),e("p",[s._v("①properties标签引入资源文件，在资源文件保存键值对然后通过${key}来访问value内容")]),s._v(" "),e("p",[s._v("②typeAliases设置JAVA类别名，在其他地方引用直接以类名标识不需要路径，可配置整个包的类")]),s._v(" "),e("p",[s._v("③mapper映射文件，可以直接以包的形式导入包下面所有的映射文件，"),e("strong",[s._v("条件是映射文件和mapper接口的名称和路径要完全一致")]),s._v("。")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('<configuration>\n<properties resource="jdbc.properties"></properties>\n  <typeAliases >\n     <package name="pojo"></package>\n  </typeAliases>\n  <mappers>\n <package name="mapper"></package>\n </mappers>\n</configuration>\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br")])])]),s._v(" "),e("li",[e("p",[s._v("映射文件：①namespace要保证和映射的类"),e("strong",[s._v("接口")]),s._v("保持一致②sql语句的id要和"),e("strong",[s._v("代理接口")]),s._v("方法名保持一致③如果是查询语句则在sql操作标签还需要"),e("strong",[s._v("设置resultType(设置每行查询结果返回java类型，而不是接口返回的List类型)和resultMap(一对多映射关系")]),s._v(")。")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("<mapper namespace=\"pojo.User\">\n\x3c!--    int insertUser--\x3e\n    <insert id=\"insertUser\">\n        insert into t_user values(0,'admin','123456',23,'男','12345@qq.com')\n    </insert>\n    \n    <select id=\"getUserById\" resultType=\"pojo.User\">\n    select * from t_user where id=1\n    </select>\n</mapper>\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br")])])]),s._v(" "),e("li",[e("p",[s._v("把映射文件引入到核心配置文件中")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('<mapper resource="mapper/UserMapper.xml"></mapper>\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])])])]),s._v(" "),e("h2",{attrs:{id:"使用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用"}},[s._v("#")]),s._v(" 使用")]),s._v(" "),e("p",[s._v("创建一个sql工厂构造器=>从流中获取创建sqlSessionFactory=>sqlSession通过代理模式创建mapper实例对象。")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('InputStream is = Resources.getResourceAsStream("mybatis-config.xml");\nSqlSessionFactoryBuilder sqlSessionFactoryBuilder = new SqlSessionFactoryBuilder();\nSqlSessionFactory sqlSessionFactory = sqlSessionFactoryBuilder.build(is);\nSqlSession sqlSession = sqlSessionFactory.openSession(true);\n//获取UserMapper的代理实现类对象,底层有一个代理类来实现这个类\nUserMapper userMapper = sqlSession.getMapper(UserMapper.class);\nint result = userMapper.insertUser();\t\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("h2",{attrs:{id:"动态sql语句获取参数值"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#动态sql语句获取参数值"}},[s._v("#")]),s._v(" 动态sql语句获取参数值")]),s._v(" "),e("ul",[e("li",[e("p",[s._v("#{}占位符赋值多用，${}通过String字符串拼接的方式(动态设置一些查询信息)，"),e("strong",[s._v("对于日期或者字符串类型需要在mapper.xml中的sql语句中手动添加单引号")]),s._v("。多个参数的情况下，在mapper.xml通过arg0，arg1...对应拿到接口形参第一个值，第二个值...(mybatis默认放在map集合里面)")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("select * from t_user where username=#{arg0} and password=#{arg1}\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])])]),s._v(" "),e("li",[e("p",[s._v("传入形参为一个实例对象，要把实例对象的属性赋值注入xml的sql语句中，"),e("font",{attrs:{color:"red"}},[e("strong",[s._v("直接通过#{}访问属性名")])])],1),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("select * from t_user where username=#{username} and password=#{password}\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])])]),s._v(" "),e("li",[e("p",[s._v("使用注解命名参数User getByUser(@Param('username' ) String username)")])]),s._v(" "),e("li",[e("p",[s._v("当查询语句返回多条记录时，可以直接转换成实体类，"),e("strong",[s._v("接口中返回类型设置List<User>，然后mapper.xml中sql语句的resultType设置为“User”")]),s._v("。")]),s._v(" "),e("p",[s._v("当多条记录不需要转换成实体类时，"),e("strong",[s._v("接口中可以设置返回List<Map<String，Object>>,一个map映射表，在mapper.xml中sql语句resultType设置为Map")]),s._v("。")])]),s._v(" "),e("li",[e("p",[s._v("模糊查询：使用时#{}因为在单引号里面占位符不被解析，因此使用双引号。")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('select * from t_user where username like "%"#{username}"#"\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])])]),s._v(" "),e("li",[e("p",[s._v("插入数据时自动获取到自增的数据id，存放在形参实体的id属性中")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('<insert id="insertUser" useGeneratedKeys="true" keyProperty="id">\ninsert ...\n</insert>\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])])])]),s._v(" "),e("h2",{attrs:{id:"自定义映射"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#自定义映射"}},[s._v("#")]),s._v(" "),e("strong",[s._v("自定义映射")])]),s._v(" "),e("ul",[e("li",[e("p",[s._v("数据库列名和类属性名不一致，使用resultMap把字段名和属性名进行映射。")]),s._v(" "),e("p",[s._v("id标签处理主键字段，result标签处理普通字段")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('<resultMap id="resMap" type="User">\n<id column="user_id" property="userId"></id>\n<result column="user_name" property="userName"></result>\n</resultMap>\n----通过id使用-----\n<select id="selectAll" resultMap="resMap"></select>\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br")])])]),s._v(" "),e("li",[e("p",[s._v("一对一：在resultmap中添加子实例属性和对应多表联查记录的列名")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('public class User{\n...\nDept dept;}\n-------mapper.xml------\n<resultMap id="resMap" type="User">\n<id column="user_id" property="userId"></id>\n<result column="user_name" property="userName"></result>\n<result column="dept_id" property="dept.id"></result>  #直接通过.建立新映射\n</resultMap>\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br")])]),e("p",[s._v("多表查询：查到二号员工的个人信息和部门信息")]),s._v(" "),e("p",[s._v("方法①sql语句直接一步到位，返回的一个join的联合表记录中，把对应需要的值通过resultMap配给相应类的属性。"),e("strong",[s._v("注意这里result中重复的数据表属性不需要指明是哪个表")]),s._v("。")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('<resultMap id="resMap" type="Emp">\n<id column="emp_id" property="emp_id"></id>\n---不需要指明是e.dept_id还是d.dept_id------\n<result column="dept_id" property="dept.id"></result>\n<result column="dept_name" property="dept.name"></result>\n</resultMap>\n\n<select id="getByDeptId" resultMap="resMap">\n    select * from t_emp e join t_dept d on e.dept_id=d.dept_id where e.dept_id=#{id}\n</select>\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br")])]),e("p",[s._v("方法②使用"),e("font",{attrs:{color:"red",size:"5"}},[s._v("association")]),s._v("分布查询,"),e("strong",[s._v("延迟加载的好处在于可以懒加载")]),s._v("，使用第二个表信息才执行第二次查询。"),e("strong",[s._v("select是分布查询的唯一标识")])],1),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('<resultMap id="resMap" type="Emp">\n<id column="emp_id" property="emp_id"></id>\n#当前Emp类的dept属性映射\n<association property="dept"  fetchType="eager/lazy" \n#定位到另一个返回Dept类型的sql语句唯一标识(另一个mapper.xml的namespace+id，也就是接口+方法名)\n\tselect="mapper.DeptMapper.getByDeptId"  \n#当前第一次查询记录中作为下一次查询的字段，注意是数据库的字段\n\tcolumn="dept_id">\n\t</association>\n</resultMap>\n\n<select id="getByEmpId" resultMap="resMap">\n    select * from t_emp  where dept_id=#{id}\n</select>\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br")])]),e("p",[s._v("在configuration中设置全局延迟加载和按需加载")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('<setting name="lazyLoadingEnabled" value="true"></setting>\n<setting name="aggressiveLazyLoading" value="false"></setting>\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])])]),s._v(" "),e("li",[e("p",[s._v('一对多：在“一”类里面创建一个List<"多">的属性。mapper.xml使用'),e("font",{attrs:{color:"red"}},[e("strong",[s._v("collection")])])],1),s._v(" "),e("p",[s._v("ofType设置集合里面的对象类型")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('<collection property="emps" ofType="Emp">\n<id></id>\n<result></result>\n</collection>\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])])])]),s._v(" "),e("h2",{attrs:{id:"动态sql"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#动态sql"}},[s._v("#")]),s._v(" 动态SQL")]),s._v(" "),e("ul",[e("li",[e("p",[s._v("if：条件为真则将if标签内的内容拼接到sql语句中(使用where/trim标签)")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('<select id="getEmpByCondition" resultType="Emp">\n        select * from t_emp where 1=1\n        <if test="emp_name !=null and emp_name!=\'\'">\n            and emp_name=#{emp_name}\n        </if>\n </select>\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br")])])]),s._v(" "),e("li",[e("p",[s._v("where(自动生成where，自动过滤标签内容前多余的and)，choose，when(相当于真正的if-else,只要一个when为真拼接当前when的条件，然后下面的when都无效)")])]),s._v(" "),e("li",[e("p",[e("strong",[s._v("foreach实现批量添加和批量删除")]),s._v(",注意要给list添加形参Param注解emps，否则mybatis都会把容器类型list/array作为键添加到map中。")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('<insert id="insertEmp">\n        insert into t_emp values\n        <foreach collection="emps" item="emp" separator=",">\n            (null,#{emp.emp_name},#{emp.age},#{emp.gender},null)\n        </foreach>\n</insert>\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br")])]),e("p",[s._v('使用open="("，close=")"实现delete  in(,...,)')])])]),s._v(" "),e("h2",{attrs:{id:"缓存"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#缓存"}},[s._v("#")]),s._v(" 缓存")]),s._v(" "),e("ul",[e("li",[s._v("一级缓存是SqlSession级别，同一个SqlSession的查询结果会被缓存。失效的情况：\n"),e("ul",[e("li",[s._v("不同查询条件(即使能查到同一条记录")]),s._v(" "),e("li",[s._v("两次查询之间使用一次增删改(增删改会清除缓存)")])])]),s._v(" "),e("li",[s._v("二级缓存是SqlSessionFactory级别。SqlSession.close关闭后才会把一级缓存保存到二级缓存，且类需要实现序列化接口。失效情况：\n"),e("ul",[e("li",[s._v("增删改")])])]),s._v(" "),e("li",[s._v("先查二级缓存然后再查一级缓存。二级缓存可以使用第三方缓存")])]),s._v(" "),e("h2",{attrs:{id:"逆向工程和分页"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#逆向工程和分页"}},[s._v("#")]),s._v(" 逆向工程和分页")]),s._v(" "),e("ul",[e("li",[e("p",[s._v("创建好数据库之后插件自动创建sql语句和mapper和pojo实体类")])]),s._v(" "),e("li",[e("p",[s._v("分页插件(原理：Spring给SqlSessionFactory添加拦截器，会在sql执行前添加limit，然后将查询结果和分页信息封装成PageInfo返回)")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("EmpMapper mapper = sqlSession.getMapper(EmpMapper.class);\nPage<Object> page = PageHelper.startPage(1, 2);\nList<Emp> emps = mapper.selectByExample(null);\nSystem.out.println(page);\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])])])])])}),[],!1,null,null,null);e.default=t.exports}}]);