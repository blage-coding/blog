(window.webpackJsonp=window.webpackJsonp||[]).push([[121],{440:function(t,n,r){"use strict";r.r(n);var e=r(4),a=Object(e.a)({},(function(){var t=this,n=t._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"_3-无重复字符的最长字串"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-无重复字符的最长字串"}},[t._v("#")]),t._v(" 3.无重复字符的最长字串")]),t._v(" "),n("p",[t._v("给定一个字符串 s ，请你找出其中不含有重复字符的 "),n("strong",[t._v("最长子串")]),t._v(" 的长度。")]),t._v(" "),n("ol",[n("li",[t._v("用hashmap来记录字符是否出现。len记录的是每次for循环"),n("strong",[t._v("以s.charAt(i)字符为右端点的最长子串长度")]),t._v("。如果当前字符未出现在hashmap中，则将其添加到hashmap并且窗口向右移动；而如果当前字符出现过，则左窗口移动(hashmap删除元素)，直至当前字符已经从hashmap删去。")]),t._v(" "),n("li",[t._v("Character和Integer,Long是char和int,long的包装类，是一个类，而char和int,long是基本数据类型,基本数据类型默认值是0。包装类可以"),n("strong",[t._v("拆包")]),t._v("成基本数据类型，基本数据类型可以"),n("strong",[t._v("包装")]),t._v("成类。类似于类和类内属性的关系。\n"),n("strong",[t._v("Integer转int：Integer.intValue()\nint转Integer：Integer.valueOf(int)")]),t._v(" "),n("strong",[t._v("Integer封装了int类型的最大值最小值：Integer.MIN_VALUE,  Integer.MAX_VALUE")])])])])}),[],!1,null,null,null);n.default=a.exports}}]);