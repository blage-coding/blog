(window.webpackJsonp=window.webpackJsonp||[]).push([[464],{783:function(t,s,a){"use strict";a.r(s);var e=a(4),n=Object(e.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"api-gateway-center"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#api-gateway-center"}},[t._v("#")]),t._v(" Api-gateway-center")]),t._v(" "),s("h3",{attrs:{id:"_1-网关服务注册库表设计"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-网关服务注册库表设计"}},[t._v("#")]),t._v(" 1.网关服务注册库表设计")]),t._v(" "),s("p",[t._v("RPC接口：在设计上是一个明显的应用、接口、方法一对N的映射。")]),t._v(" "),s("p",[t._v("网关服务组：核心在于理解group_id和gateway_id。")]),t._v(" "),s("p",[t._v("①group_id：相当于抽象出的一个"),s("strong",[t._v("业务模块组")]),t._v("，也可以是一个"),s("strong",[t._v("领域组")]),t._v("。")]),t._v(" "),s("p",[t._v("②gateway_ip：对应一个网关通信实例gateway-core。")]),t._v(" "),s("p",[t._v("③在distribution分配表中，"),s("font",{attrs:{color:"red"}},[s("strong",[t._v("一个应用可以注册在多个网关通信实例，从而实现负载均衡。")])])],1),t._v(" "),s("p",[t._v("④"),s("strong",[t._v("另一种设计方式distribution表中每个应用只需要注册在group_id组上，server_detail表中需要添加group_id字段指明当前通信实例属于哪个组。当HTTP请求过来时，根据应用名找到对应的服务组，然后均衡的打到该组下的每个服务实例当中。")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://jsd.cdn.zzko.cn/gh/blage-coding/picx-images-hosting@master/20230515/image-20230424100158694.6eck1ai79v40.webp",alt:"image-20230424100158694"}})]),t._v(" "),s("h3",{attrs:{id:"_2-结合content-type类型接收请求参数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-结合content-type类型接收请求参数"}},[t._v("#")]),t._v(" 2.结合Content-Type类型接收请求参数")]),t._v(" "),s("p",[t._v("@RequestParam：接收①get请求url中的参数②Post请求体中的json("),s("strong",[t._v("仅支持Content-Type为form表单、www-form-unlencode类型")]),t._v(")")]),t._v(" "),s("p",[t._v("@RequestBody：接收post请求体中的json数据("),s("strong",[t._v("仅支持content-Type=application/json")]),t._v(")，用一个对象或者Map接收("),s("strong",[t._v("一个请求对应只能用一个requestBody注解")]),t._v(")。")]),t._v(" "),s("h3",{attrs:{id:"_3-网关算力与rpc接口注册"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-网关算力与rpc接口注册"}},[t._v("#")]),t._v(" 3.网关算力与RPC接口注册")]),t._v(" "),s("ul",[s("li",[t._v("网关算力注册")])]),t._v(" "),s("p",[t._v("ConfigManageService#registerGatewayServerNode：添加网关算力节点时，需要考虑节点重复注册的问题。因此需要先查数据库，如果节点还没注册，那么添加注册当前节点；否则"),s("strong",[t._v("更新")]),t._v("当前算力节点为可用状态。")]),t._v(" "),s("ul",[s("li",[t._v("RPC接口信息注册")])]),t._v(" "),s("p",[t._v("将RPC应用、接口、方法信息在注册中心完成注册。")]),t._v(" "),s("ul",[s("li",[s("font",{attrs:{color:"red"}},[s("strong",[t._v("应用ID—接口ID—方法ID")])]),t._v(" &&"),s("font",{attrs:{color:"red"}},[s("strong",[t._v("网关算力ID—网关算力地址")])])],1)]),t._v(" "),s("p",[t._v("添加"),s("strong",[t._v("多列联合唯一约束")]),t._v("(一张表可以有多个唯一索引，允许为空值)，"),s("strong",[t._v("并建立B+树索引")]),t._v("，"),s("strong",[t._v("更适用于范围查找")]),t._v("(大于小于、覆盖索引(select字段建立了索引，保证where字段索引生效)、模糊查询)。")]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("UNIQUE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("KEY")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token identifier"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("idx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token identifier"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("system_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token identifier"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("interface_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("USING")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BTREE")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("向表中插入数据后，如果"),s("strong",[t._v("表的联合唯一索引字段存在重复")]),t._v("，就会"),s("strong",[t._v("报DuplicateKeyException异常")]),t._v(" ，通过捕获该异常来"),s("strong",[t._v("监测所注册RPC服务与算力节点是否重复。")])]),t._v(" "),s("h3",{attrs:{id:"_4-拉取rpc服务聚合信息"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-拉取rpc服务聚合信息"}},[t._v("#")]),t._v(" 4.拉取RPC服务聚合信息")]),t._v(" "),s("ul",[s("li",[t._v("功能")])]),t._v(" "),s("p",[t._v("①添加List属性封装当前网关映射的RPC"),s("strong",[t._v("聚合信息")]),t._v("。")]),t._v(" "),s("p",[t._v("②网关助手assist-starter添加从注册中心拉取算力节点上的RPC注册信息，并打印出来。作为启动项目时打印给用户的日志信息。")]),t._v(" "),s("p",[t._v("③提取网关服务端配置到configution。当启动多个算力节点时，Netty服务IP和端口需要从文件读取配置。")]),t._v(" "),s("ul",[s("li",[t._v("skipTests&maven.test.skip")])]),t._v(" "),s("p",[t._v("install打包时"),s("strong",[t._v("不执行单元测试用例")]),t._v("，但是"),s("strong",[t._v("会编译")]),t._v("测试用例类生成的class文件到target/test-classes")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("<plugin>\n    <groupId>org.apache.maven.plugins</groupId>\n    <artifactId>maven-surefire-plugin</artifactId>\n    <configuration>\n        <skipTests>true</skipTests>\n    </configuration>\n</plugin>\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br")])]),s("p",[t._v("maven.test.skip=true则表示"),s("strong",[t._v("不执行测试用例，也不编译测试用例类")])]),t._v(" "),s("ul",[s("li",[t._v("TypeReference")])]),t._v(" "),s("p",[t._v("使用fastjson对String类型进行"),s("strong",[t._v("反序列化")]),t._v("时，"),s("strong",[t._v("如果指定的类型含有泛型参数，那么需要使用TypeReference来解析。")])]),t._v(" "),s("h3",{attrs:{id:"_5-算力节点与rpc服务映射查询"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-算力节点与rpc服务映射查询"}},[t._v("#")]),t._v(" 5.算力节点与RPC服务映射查询")]),t._v(" "),s("p",[t._v("根据数据库的网关算力分配表，给后台提供"),s("strong",[t._v("网关分组—网关ID—RPC服务应用ID的关联映射关系")]),t._v("查询的方法接口，它们是1vNvN的关系，具体groupId--\x3egatewayId--\x3esystemId如下：\n10001->api-gateway-g3->api-gateway-test-01-provider\n10001->api-gateway-g3->api-gateway-test-02-provider\n10001->api-gateway-g4->api-gateway-test-03-provider\n10001->api-gateway-g4->api-gateway-test-04-provider\n10002->api-gateway-g5->api-gateway-test-05-provider\n10002->api-gateway-g5->api-gateway-test-06-provider")]),t._v(" "),s("h3",{attrs:{id:"_6-动态节点配置nginx负载"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-动态节点配置nginx负载"}},[t._v("#")]),t._v(" 6.动态节点配置Nginx负载")]),t._v(" "),s("p",[t._v("功能：新的网关算力节点注册后，"),s("strong",[t._v("注册中心")]),t._v("通过"),s("strong",[t._v("java程序编程式")]),t._v("调用容器指令，将其动态配置Nginx网关负载。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://jsd.cdn.zzko.cn/gh/blage-coding/picx-images-hosting@master/20230515/nginx.7jz2iidfqe4.webp",alt:"nginx"}})]),t._v(" "),s("ul",[s("li",[t._v("容器配置文件挂载")])]),t._v(" "),s("p",[t._v("gateway-center注册中心程序部署到容器运行，"),s("strong",[t._v("此时在"),s("font",{attrs:{color:"red"}},[t._v("容器内部不能感知到外部centos7服务器上的文件")]),t._v("，因此通过new File()"),s("font",{attrs:{color:"red"}},[t._v("进行IO时只能操作容器内部的目录文件")]),t._v("，不能直接对服务器上的文件进行读写")],1),t._v("。此处下面的文件地址为容器内部地址。")]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("File")]),t._v(" file "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("File")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/nginx/conf/nginx.conf"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("解决方案是运行容器时，通过-v将容器内部文件挂载到容器外部的Nginx配置文件，从而实现"),s("font",{attrs:{color:"red"}},[s("strong",[t._v("容器内部更新的IO内容同步到外部的Nginx配置文件。")])]),t._v("最终，"),s("strong",[t._v("运行注册中心程序的docker容器")]),t._v("和"),s("strong",[t._v("运行Nginx服务器的docker容器")]),t._v("两者挂载到"),s("font",{attrs:{color:"red"}},[s("strong",[t._v("同一个容器外部(服务器)的文件目录。")])])],1),t._v(" "),s("ul",[s("li",[t._v("刷新配置生效")])]),t._v(" "),s("p",[t._v("Nginx.conf配置文件改变之后，需要通过指令docker exec Nginx nginx -s reload"),s("strong",[t._v("重新刷新Nginx配置文件")]),t._v("，使其生效。而两者处于不同的容器，需要"),s("strong",[t._v("通过com.github.dockerjava包工具建立docker连接，查找服务并执行指令(开启监听端口)。")])]),t._v(" "),s("p",[s("strong",[t._v("跨容器调用服务的核心")]),t._v("：通过"),s("strong",[t._v("ListContainersCmd#withNameFilter")]),t._v("对容器名过滤，获取剩下的指定容器ID后，通过exec指令进入容器内部获取对应服务。")]),t._v(" "),s("ul",[s("li",[t._v("网关算力节点动态配置Nginx负载")])]),t._v(" "),s("p",[t._v("要使用Nginx的负载均衡，需要将"),s("strong",[t._v("原本直接访问网关算力节点地址")]),t._v("，改为"),s("strong",[t._v("访问Nginx中的location匹配路径")]),t._v("。Nginx匹配到HTTP服务组后，"),s("strong",[t._v("先通过rewrite删除路径中的网关分组标识，然后将剩余内容拼接上代理服务器。")])]),t._v(" "),s("p",[t._v("①^表示匹配输入字符串起始位置")]),t._v(" "),s("p",[t._v("②$表示匹配输入字符串的结束位置")]),t._v(" "),s("p",[t._v("③()用于匹配括号内的内容，此处表示匹配10001/后的所有内容，通过$1，$2调用")]),t._v(" "),s("p",[t._v("④下面例子表示，"),s("strong",[t._v("uri截取/10001/后面的内容进行重定向")]),t._v("，并且结束下面所有的匹配规则。")]),t._v(" "),s("div",{staticClass:"language-nginx line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-nginx"}},[s("code",[s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("rewrite")]),t._v(" ^/10001/(.*)$ /"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$1")]),t._v(" break")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("ul",[s("li",[s("strong",[t._v("Collectors#groupingBy")])])]),t._v(" "),s("p",[t._v("List集合通过stream流重新收集构造Map，"),s("font",{attrs:{color:"red"}},[s("strong",[t._v("groupingBy指定容器数据类型的哪个字段作为key，value为聚合的List集合。")])]),t._v("key->groupId,value->List<GatewayServerDetailVO>")],1),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Map")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("List")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("GatewayServerDetailVO")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" gatewayServerDetailMap "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" gatewayServerDetailVOS"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("stream")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("collect")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Collectors")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("groupingBy")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("GatewayServerDetailVO")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getGroupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])])])}),[],!1,null,null,null);s.default=n.exports}}]);