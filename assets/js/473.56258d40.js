(window.webpackJsonp=window.webpackJsonp||[]).push([[473],{793:function(a,s,e){"use strict";e.r(s);var r=e(4),n=Object(r.a)({},(function(){var a=this,s=a._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"项目优化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#项目优化"}},[a._v("#")]),a._v(" 项目优化")]),a._v(" "),s("h2",{attrs:{id:"_1-缓存短信验证码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-缓存短信验证码"}},[a._v("#")]),a._v(" 1.缓存短信验证码")]),a._v(" "),s("p",[a._v("生成的验证码保存到redis，并设置存活时间")]),a._v(" "),s("p",[a._v("前端输出后，后端从redis取出验证码进行校验，如果匹配成功则从redis中删除该验证码。")]),a._v(" "),s("h2",{attrs:{id:"_2-缓存菜品数据"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-缓存菜品数据"}},[a._v("#")]),a._v(" 2.缓存菜品数据")]),a._v(" "),s("p",[a._v("每点击一次菜品就会发送一次数据库查询，为了减轻数据库压力需要缓存菜品数据。")]),a._v(" "),s("p",[a._v("业务流程：")]),a._v(" "),s("ul",[s("li",[s("p",[a._v("先从redis中获取菜品数据，有则返回无需查询数据库，如果没有则查询数据库，并把数据放入到redis中。把每个菜系品种的categoryid作为key")])]),a._v(" "),s("li",[s("p",[a._v("此外DishController中添加和更新方法中，"),s("font",{attrs:{color:"red"}},[s("strong",[a._v("每完成一次数据库操作都需要清理缓存,防止数据库和缓存数据不一致出现脏数据")])]),a._v("。")],1)])]),a._v(" "),s("p",[a._v("对象可以存储为String的原因：对象通过JSON序列化成字符串在序列化成字节数组存入redis，取的时候拿到字节数组反序列即可")]),a._v(" "),s("p",[a._v("更改redis序列化方式为StringRedisSerializer才能正常显示字符串（默认的jdkRedis...）")]),a._v(" "),s("h2",{attrs:{id:"_3-spring-cache"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-spring-cache"}},[a._v("#")]),a._v(" 3.Spring Cache")]),a._v(" "),s("p",[a._v("@EnableCaching："),s("strong",[a._v("开启缓存注解功能,在启动类上添加")])]),a._v(" "),s("p",[a._v('@Cacheable(value=" " , key=" #id"，condition="#result!=null")：先查看缓存是否有数据，如果有则直接返回；如果没有则执行方法查询数据库语句，把结果加入到缓存并返回。'),s("strong",[a._v("condition表示满足条件才把缓存数据")]),a._v("。"),s("font",{attrs:{color:"red"}},[a._v("一般用于select语句")])],1),a._v(" "),s("p",[a._v('@CachePut(value=" ",  key=" #user.id")：将方法返回值放入缓存，value表示缓存名称，key表示缓存key；#user表示返回值，名称要和方法中的对应')]),a._v(" "),s("p",[a._v('@CacheEvict(value=" "  ,key=" #id")：清除指定的缓存'),s("font",{attrs:{color:"red"}},[a._v("一般用于更新删除语句")])],1),a._v(" "),s("p",[a._v('@CacheEvict(value="setmealCache",allEntries = true)：删除该分类下所有缓存数据')]),a._v(" "),s("p",[s("strong",[a._v("注意：使用注解要注意方法返回类型是否实现了序列化接口。而IO读写都是以字节流方式进行的，java类只有implements Serializable实现了序列化，才能被输出流转化为字节流。")])]),a._v(" "),s("h2",{attrs:{id:"_4-读写分离"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-读写分离"}},[a._v("#")]),a._v(" 4.读写分离")]),a._v(" "),s("p",[a._v("mysql主从复制，数据库的写操作在主库进行，读操作在从库进行。分成以下三步")]),a._v(" "),s("ul",[s("li",[a._v("主库将改变记录都记录到binary log日志中")]),a._v(" "),s("li",[a._v("从库其中一个io线程会将binary log拷贝到他的中继日志relay log")]),a._v(" "),s("li",[a._v("从库的SQL线程重做一遍中继日志的事件，将改变应用到自己的数据库")])]),a._v(" "),s("h4",{attrs:{id:"sharding-jdbc框架"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#sharding-jdbc框架"}},[a._v("#")]),a._v(" sharding-JDBC框架")]),a._v(" "),s("p",[a._v("增强版JDBC驱动，轻松实现数据库读写分离")]),a._v(" "),s("ul",[s("li",[a._v("配置好主从数据库")]),a._v(" "),s("li",[a._v("导入maven坐标")]),a._v(" "),s("li",[a._v("在配置文件配置读写分离规则")])]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("shardingsphere:\n  datasource:\n    names:\n      master,slave\n    # 主数据源\n    master:\n      type: com.alibaba.druid.pool.DruidDataSource\n      driver-class-name: com.mysql.cj.jdbc.Driver\n      url: jdbc:mysql://192.168.138.100:3306/rw?characterEncoding=utf-8\n      username: root\n      password: root\n    # 从数据源\n    slave:\n      type: com.alibaba.druid.pool.DruidDataSource\n      driver-class-name: com.mysql.cj.jdbc.Driver\n      url: jdbc:mysql://192.168.138.101:3306/rw?characterEncoding=utf-8\n      username: root\n      password: root\n  masterslave:\n    # 读写分离配置\n    load-balance-algorithm-type: round_robin #轮询\n    # 最终的数据源名称\n    name: dataSource\n    # 主库数据源名称\n    master-data-source-name: master\n    # 从库数据源名称列表，多个逗号分隔\n    slave-data-source-names: slave\n  props:\n    sql:\n      show: true #开启SQL显示，默认false\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br"),s("span",{staticClass:"line-number"},[a._v("11")]),s("br"),s("span",{staticClass:"line-number"},[a._v("12")]),s("br"),s("span",{staticClass:"line-number"},[a._v("13")]),s("br"),s("span",{staticClass:"line-number"},[a._v("14")]),s("br"),s("span",{staticClass:"line-number"},[a._v("15")]),s("br"),s("span",{staticClass:"line-number"},[a._v("16")]),s("br"),s("span",{staticClass:"line-number"},[a._v("17")]),s("br"),s("span",{staticClass:"line-number"},[a._v("18")]),s("br"),s("span",{staticClass:"line-number"},[a._v("19")]),s("br"),s("span",{staticClass:"line-number"},[a._v("20")]),s("br"),s("span",{staticClass:"line-number"},[a._v("21")]),s("br"),s("span",{staticClass:"line-number"},[a._v("22")]),s("br"),s("span",{staticClass:"line-number"},[a._v("23")]),s("br"),s("span",{staticClass:"line-number"},[a._v("24")]),s("br"),s("span",{staticClass:"line-number"},[a._v("25")]),s("br"),s("span",{staticClass:"line-number"},[a._v("26")]),s("br"),s("span",{staticClass:"line-number"},[a._v("27")]),s("br"),s("span",{staticClass:"line-number"},[a._v("28")]),s("br"),s("span",{staticClass:"line-number"},[a._v("29")]),s("br"),s("span",{staticClass:"line-number"},[a._v("30")]),s("br")])]),s("ul",[s("li",[a._v("在配置文件中配置允许bean定义覆盖配置项")])]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("main:\n  allow-bean-definition-overriding: true\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br")])]),s("h2",{attrs:{id:"_5-生成接口文档"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-生成接口文档"}},[a._v("#")]),a._v(" 5.生成接口文档")]),a._v(" "),s("p",[a._v("swagge生成接口文档")]),a._v(" "),s("ul",[s("li",[a._v("导入knife4j的maven坐标")]),a._v(" "),s("li",[a._v("在webmvcConfigp配置类添加注解@EnableSwagger2 @EnableKnife4j")]),a._v(" "),s("li",[a._v("配置类指明扫描controller的包目录")]),a._v(" "),s("li",[a._v("过滤器放行查看输出接口文档的路径地址")]),a._v(" "),s("li",[a._v("访问查看结果http://localhost:8080/doc.html")])]),a._v(" "),s("h2",{attrs:{id:"_6-最终项目部署"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-最终项目部署"}},[a._v("#")]),a._v(" 6.最终项目部署")]),a._v(" "),s("p",[a._v("192.168.142.134：部署后端jar包+mysql+redis")]),a._v(" "),s("p",[a._v("192.168.142.132：部署前端nginx")]),a._v(" "),s("p",[a._v("maven打jar包 clean+package")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("nohup java -jar reggie_take_out-1.0-SNAPSHOT.jar &>reggie_take_out.log &\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])])])}),[],!1,null,null,null);s.default=n.exports}}]);