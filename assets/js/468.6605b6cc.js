(window.webpackJsonp=window.webpackJsonp||[]).push([[468],{786:function(t,s,a){"use strict";a.r(s);var n=a(4),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"抽奖项目"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#抽奖项目"}},[t._v("#")]),t._v(" 抽奖项目")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://jsd.cdn.zzko.cn/gh/blage-coding/picx-images-hosting@master/20230515/lottery.drawio.6gxpbqidrn00.webp",alt:"lottery.drawio"}})]),t._v(" "),s("h2",{attrs:{id:"_1-ddd架构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-ddd架构"}},[t._v("#")]),t._v(" 1.DDD架构")]),t._v(" "),s("h4",{attrs:{id:"insfrastructure基础层"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#insfrastructure基础层"}},[t._v("#")]),t._v(" insfrastructure基础层")]),t._v(" "),s("p",[t._v("提供数据底层基础功能服务，包括数据库、缓存、ES底层操作，进行数据持久化。")]),t._v(" "),s("ul",[s("li",[t._v("dao：数据库daosql语句映射接口。")]),t._v(" "),s("li",[t._v("po：数据库表映射的对象。")]),t._v(" "),s("li",[t._v("repository："),s("strong",[t._v("领域层仓储接口")]),t._v("的具体实现。")]),t._v(" "),s("li",[t._v("util：工具包，封装redis，es等组件数据底层操作的对象。")])]),t._v(" "),s("h4",{attrs:{id:"domain领域层"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#domain领域层"}},[t._v("#")]),t._v(" domain领域层")]),t._v(" "),s("p",[t._v("提供不同领域服务实现。具体如何把业务抽象到对应服务，可以根据该业务需要操作的库表、使用的仓储对象来归类到具体业务。每个领域是一个大的方面。")]),t._v(" "),s("ul",[s("li",[t._v("model：包含该领域层使用到的所有对象。\n"),s("ul",[s("li",[t._v("aggregates：聚合对象，一般包含多个VO对象聚合在一起。")]),t._v(" "),s("li",[t._v("req：service服务层调用服务时的请求对象。")]),t._v(" "),s("li",[t._v("res：service服务层服务响应返回的封装对象。")]),t._v(" "),s("li",[t._v("vo：一般作为repository仓储层服务的形参或者返回类型，以及service中服务请求响应类型；设计时"),s("strong",[t._v("属性仅包含PO对象中关键属性信息，排除掉PO中冗杂字段")]),t._v("。")])])]),t._v(" "),s("li",[t._v("repository仓储"),s("strong",[t._v("接口")]),t._v("：提供dao上一层的数据仓储服务，通过"),s("font",{attrs:{color:"red"}},[s("strong",[t._v("编排组合dao对象来根据业务需求操作数据库")])]),t._v("。")],1),t._v(" "),s("li",[t._v("service服务层：每个领域下细分成不同的服务实现。比如活动领域下包含活动分发、活动流转、活动领取多种服务。以服务接口+实现的方式暴露给外部，"),s("strong",[t._v("除此之外根据设计模式还可能包含抽象类、config对象池、support供应类(一般用于query查询出对象并封装成聚合对象，提供服务实现类使用)")]),t._v("。")])]),t._v(" "),s("h4",{attrs:{id:"application应用层"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#application应用层"}},[t._v("#")]),t._v(" application应用层")]),t._v(" "),s("p",[t._v("负责对domain层暴露服务接口的组合和编排。一般以接口+实现类的形式暴露给接口层门面类"),s("strong",[t._v("使用")]),t._v("。除此之外，MQ生产者消费者以及xxljob组件对象使用也在应用层。")]),t._v(" "),s("h4",{attrs:{id:"interfaces接口层"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#interfaces接口层"}},[t._v("#")]),t._v(" interfaces接口层")]),t._v(" "),s("p",[t._v("用于暴露服务给RESTFUL服务请求，facade门面类("),s("strong",[t._v("实现通信层的服务接口")]),t._v(")通过解析用户输入的配置文件，并"),s("strong",[t._v("组合调用application提供的服务")]),t._v("。初次之外，服务内部的VO对象转化为服务传输通信的DTO对象的类型转换器也在这声明定义。")]),t._v(" "),s("h4",{attrs:{id:"rpc通信层"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#rpc通信层"}},[t._v("#")]),t._v(" RPC通信层")]),t._v(" "),s("p",[t._v("提供暴露当前服务给其它服务使用。")]),t._v(" "),s("ul",[s("li",[t._v("dto：不同服务之间通信时的传输对象")]),t._v(" "),s("li",[t._v("req：服务接口的请求对象")]),t._v(" "),s("li",[t._v("res：服务接口的响应对象")]),t._v(" "),s("li",[t._v("服务接口：由接口层门面类实现")])]),t._v(" "),s("h4",{attrs:{id:"common通用包"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#common通用包"}},[t._v("#")]),t._v(" common通用包")]),t._v(" "),s("p",[t._v("用来定义"),s("strong",[t._v("状态码")]),t._v("、类型码等"),s("strong",[t._v("常量值")]),t._v("；"),s("strong",[t._v("统一回复对象")]),t._v("等等。")]),t._v(" "),s("h2",{attrs:{id:"_2-concurrenthashmap与securerandom"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-concurrenthashmap与securerandom"}},[t._v("#")]),t._v(" 2.ConcurrentHashMap与SecureRandom")]),t._v(" "),s("ul",[s("li",[t._v("ConcurrentHashMap")])]),t._v(" "),s("p",[t._v("多并发场景下用来做缓存，保证线程安全，其中computeIfAbsen方法用于"),s("strong",[t._v("获取key对应value")]),t._v("，同时合并首次获取不到"),s("strong",[t._v("执行key插入的操作")]),t._v("。")]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" map "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" concurrentHashMap"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("computeIfAbsent")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("strategyId"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" key "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("RATE_TUPLE_LENGTH")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("ul",[s("li",[t._v("SecureRandom")])]),t._v(" "),s("p",[t._v("secureRandom.nextInt(100) + 1生成随机数，使用SecureRandom类保证线程安全，且生成的随机数更安全。")]),t._v(" "),s("h2",{attrs:{id:"_3-策略模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-策略模式"}},[t._v("#")]),t._v(" 3.策略模式")]),t._v(" "),s("ul",[s("li",[t._v("业务场景")])]),t._v(" "),s("p",[t._v("策略领域下的抽奖算法服务使用了策略模式。首先先在BaseAlgorithm类中实现"),s("strong",[t._v("算法接口")]),t._v("的"),s("strong",[t._v("一般算法行为")]),t._v("，包括生成随机值，初始化map策略池，其中包含两种map，一种是保存当前策略的映射表，映射表是一个概率散列值—奖品Id的映射表，它是一个String数组，通过下标索引进行映射；另一种map是保存当前抽奖策略的所有奖品信息。")]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//strategyId——>string[],其中String[i]代表概率散列值为i对应的奖品Id")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("protected")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Map")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Long")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" rateTupleMap "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ConcurrentHashMap")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("protected")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Map")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Long")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("List")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AwardRateVO")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" awardRateInfoMap "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ConcurrentHashMap")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("p",[t._v("不同算法会继承这个算法基础类，并"),s("font",{attrs:{color:"red"}},[t._v("根据采用的不同策略场景来实现randomDraw()执行抽奖方法")]),t._v("。")],1),t._v(" "),s("p",[s("strong",[t._v("策略模式在调用时引用的是接口对象，通过接口对象调用的方法实际上是接口注入的Bean实现的方法")]),t._v("。")]),t._v(" "),s("ul",[s("li",[t._v("@Resource")])]),t._v(" "),s("p",[t._v("为了防止策略模式下"),s("strong",[t._v("对算法接口Autowired")]),t._v("自动装配出现问题，并采用@"),s("strong",[t._v("Resource的byName注入方式，并在不同算法实现类上的注解指明Bean名称")]),t._v("。"),s("strong",[t._v("autowired注入的对象一定得存在。source可以不存在")]),t._v("，它会自动按照byName方式进行装配；如果没有匹配，则回退为一个原始类型进行匹配")]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Component")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"entiretyRateRandomDrawAlgorithm"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("EntiretyRateRandomDrawAlgorithm")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BaseAlgorithm")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("p",[s("img",{attrs:{src:"https://jsd.cdn.zzko.cn/gh/blage-coding/picx-images-hosting@master/20230515/image-20230405165509701.5rovpfvkwa00.webp",alt:"image-20230405165509701"}})]),t._v(" "),s("h2",{attrs:{id:"_4-模板模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-模板模式"}},[t._v("#")]),t._v(" 4.模板模式")]),t._v(" "),s("ul",[s("li",[t._v("业务场景")])]),t._v(" "),s("p",[t._v("策略领域下的抽奖服务采用模板模式设计，整个抽奖流程如下：")]),t._v(" "),s("p",[t._v("①根据入参策略ID获取抽奖策略配置")]),t._v(" "),s("p",[t._v("②校验和处理抽奖策略的数据初始化到内存")]),t._v(" "),s("p",[t._v("③获取那些被排除掉的抽奖列表，这些奖品可能是"),s("strong",[t._v("已经奖品库存为空")]),t._v("，或者因为"),s("strong",[t._v("风控策略不能给这个用户薅羊毛的奖品")])]),t._v(" "),s("p",[t._v("④执行抽奖算法，可以拿到算法接口执行已定义好的策略，也可以重新定义其它的抽奖算法，")]),t._v(" "),s("p",[t._v("⑤包装中奖结果")]),t._v(" "),s("p",[t._v("其中"),s("font",{attrs:{color:"red"}},[s("strong",[t._v("五个行为的参数控制和调用顺序由抽象模板类")])]),t._v("进行控制，而"),s("strong",[t._v("执行抽奖")]),t._v("和"),s("strong",[t._v("获取库存为0的奖品ID")]),t._v("这两种行为"),s("strong",[t._v("因为实现方有不同的方式变化，不适合定义成通用的方法")]),t._v("，因此模板类中抽象这两种方法，交给子类去实现。")],1),t._v(" "),s("p",[t._v("DrawConfig使用池化/映射思想，提供了一个根据"),s("strong",[t._v("策略ID")]),t._v("取出"),s("strong",[t._v("对应抽奖算法Bean")]),t._v("的Map池子")]),t._v(" "),s("p",[t._v("Support类主要提供查询操作，获取策略信息和商品信息提供给子类使用。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://jsd.cdn.zzko.cn/gh/blage-coding/picx-images-hosting@master/20230515/image-20230405171314313.3i4omn28qwk0.webp",alt:"image-20230405171314313"}})]),t._v(" "),s("h2",{attrs:{id:"_5-工厂模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-工厂模式"}},[t._v("#")]),t._v(" 5.工厂模式")]),t._v(" "),s("ul",[s("li",[t._v("业务场景")])]),t._v(" "),s("p",[t._v("采用工厂模式发放奖品。首先基于策略模式实现优惠券、实物奖品、文字奖品等奖品类的发货方法，把奖品模拟成货物，"),s("strong",[t._v("每个奖品各自都实现不同的发货方法")]),t._v("。接着把四种奖品的发奖统一放在配置类的Map中，最后声明定义工厂，"),s("font",{attrs:{color:"red"}},[s("strong",[t._v("工厂从map中根据奖品类型ID取出获得对应的奖品，减少if-else使用")])]),t._v("。")],1),t._v(" "),s("p",[s("img",{attrs:{src:"https://jsd.cdn.zzko.cn/gh/blage-coding/picx-images-hosting@master/20230515/image-20230405173430626.44h8emuvc600.webp",alt:"image-20230405173430626"}})]),t._v(" "),s("h2",{attrs:{id:"_6-状态模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-状态模式"}},[t._v("#")]),t._v(" 6.状态模式")]),t._v(" "),s("ul",[s("li",[t._v("业务场景")])]),t._v(" "),s("p",[t._v("每个活动都包含不同的状态，包括提审、撤审、运行、关闭等等，当执行完某些操作后会触发活动状态的改变，比如活动开始秒杀状态会从通过转为运行。每一种状态下转移到其它状态的条件都是不同的，因此可以使用状态模式。"),s("font",{attrs:{color:"red"}},[s("strong",[t._v("对象的行为基于他的状态来改变")])]),t._v(",这个状态必须是一个"),s("strong",[t._v("接口")]),t._v("或"),s("strong",[t._v("抽象类")]),t._v("。")],1),t._v(" "),s("p",[s("img",{attrs:{src:"https://jsd.cdn.zzko.cn/gh/blage-coding/picx-images-hosting@master/20230515/image-20230405191413561.7iy5mh3kjs00.webp",alt:"image-20230405191413561"}})]),t._v(" "),s("p",[t._v("实现分为两块，首先是状态类，基于它的多态性质采用策略模式实现("),s("strong",[t._v("抽象类+实现")]),t._v(")，每种状态基于自身响应的转换规则实现对应行为，最后所有类都会放入到一个map中根据状态码获取。另一部分是流转接口和流转服务(也就是"),s("strong",[t._v("上下文类")]),t._v(")，"),s("font",{attrs:{color:"red"}},[s("strong",[t._v("流转服务类需要持有一个抽象类状态属性和状态转移函数")])]),t._v(",通过该"),s("strong",[t._v("抽象类引用")]),t._v("来"),s("strong",[t._v("调用不同状态的行为后，再调用函数实现流转")]),t._v("。这种内部状态转移是交给context类从map中取状态来实现。")],1),t._v(" "),s("p",[s("img",{attrs:{src:"https://jsd.cdn.zzko.cn/gh/blage-coding/picx-images-hosting@master/20230515/image-20230405191812397.41bswnx0xvg0.webp",alt:"image-20230405191812397"}})]),t._v(" "),s("p",[t._v("另一种内部流转方式是把状态转移交给"),s("strong",[t._v("状态类")]),t._v("来实现，流转服务调用状态行为时，把自己this指针传进去(context对象)，然后状态类再通过形参set修改上下文类的状态位。")]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Context")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("State")]),t._v(" state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setState")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("State")]),t._v(" state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Handle")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),t._v("Handle")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StateA")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("State")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Handle")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Context")]),t._v(" context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setState")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StateB")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br")])]),s("ul",[s("li",[t._v("外部传参流转")])]),t._v(" "),s("p",[s("strong",[t._v("状态转换依赖于外部传参(新的状态)，context.do()后再调用context.setState实现")]),t._v("。这种方式仅适用于context内部拿不到其它状态类。")]),t._v(" "),s("h2",{attrs:{id:"_7-mybatis-foreach-标签"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-mybatis-foreach-标签"}},[t._v("#")]),t._v(" 7.mybatis<foreach>标签")]),t._v(" "),s("p",[t._v("mybatis实现可以通过<foreach>标签，实现把dao形参里的list集合插入到表中。好处在于高效，只用从连接池获取一次连接执行一条sql语句。")]),t._v(" "),s("div",{staticClass:"language-xml line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("insert")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("insertList"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("parameterType")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("java.util.List"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        INSERT INTO award(award_id, award_type, award_name, award_content, create_time, update_time)\n        VALUES\n        "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("foreach")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("collection")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("list"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("item")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("item"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("index")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("index"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("separator")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v(","),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n            (\n            #{item.awardId},\n            #{item.awardType},\n            #{item.awardName},\n            #{item.awardContent},\n            NOW(),\n            NOW()\n            )\n        "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("foreach")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("insert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br")])]),s("h2",{attrs:{id:"_8-id生成策略"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8-id生成策略"}},[t._v("#")]),t._v(" 8.ID生成策略")]),t._v(" "),s("p",[t._v("使用策略模式将三种ID生成算法进行包装，"),s("strong",[t._v("外部的调用方会需要根据不同的场景来选择出适合的ID生成策略")]),t._v("。使用阿帕奇工具包来实现，包括雪花算法、日期拼接算法、随机数算法。")]),t._v(" "),s("ul",[s("li",[t._v("订单号：大量高并发，采用雪花算法")]),t._v(" "),s("li",[t._v("活动号activityId：少量，采用日期生成算法")]),t._v(" "),s("li",[t._v("随机数号strategyId：少量，采用随机数算法")])]),t._v(" "),s("p",[t._v("雪花算法：安全性和高并发由数据中心和工作节点共十比特来决定，当然可以根据业务需求扩展位数和生成方法，这里采用的是根据本地网卡IP的hashcode生成。")]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Component")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SnowFlake")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("implements")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IIdGenerator")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Snowflake")]),t._v(" snowflake"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@PostConstruct")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("init")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("long")]),t._v(" workId"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            workId "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NetUtil")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ipv4ToLong")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NetUtil")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getLocalhostStr")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Exception")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            workId"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NetUtil")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getLocalhost")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("hashCode")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//保留后五位作为数据节点id")]),t._v("\n        workId"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("workId"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("31")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//数据中心id")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("long")]),t._v(" dataCenterId"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1L")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        snowflake "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IdUtil")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createSnowflake")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("workId"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" dataCenterId"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Long")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("nextId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" snowflake"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("nextId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br"),s("span",{staticClass:"line-number"},[t._v("21")]),s("br"),s("span",{staticClass:"line-number"},[t._v("22")]),s("br")])]),s("h2",{attrs:{id:"_9-aop概念"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_9-aop概念"}},[t._v("#")]),t._v(" 9.AOP概念")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("切面：切点+处理")])]),t._v(" "),s("li",[s("p",[t._v("连接点joinpoint：允许作为切入点的资源，它需要插入横切关注点。、")])]),t._v(" "),s("li",[s("p",[t._v("切点pointcut："),s("strong",[t._v("用来指定在什么地方进行织入")]),t._v("。切入点的指明可以通过切入点表达式，包括@annotation指明注解名称、指明包名，还可以使用|| &&进行拼接。")])]),t._v(" "),s("li",[s("p",[t._v("advice：声明各种增强方法，包括环绕增强...使用方法一般是在@around()里面使用&&指定多个切点条件，指明注解名的同时还要指明来自哪个包(防止其它jar包的注解出现同名)。")])])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://jsd.cdn.zzko.cn/gh/blage-coding/picx-images-hosting@master/20230515/image-20230405195304802.1mhyq98z93eo.webp",alt:"image-20230405195304802"}})]),t._v(" "),s("p",[t._v("环绕增强一般两种使用方式：")]),t._v(" "),s("p",[t._v("①@pointcut和@around联合使用。其中@around的value要指明切点前面切点指明的函数。")]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[t._v(" "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Pointcut")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"@annotation(com.last.lottery.db.router.annotation.DBRouter)"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("addPoint")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n \n "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Around")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"addPoint()"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("doRouter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ProceedingJoinPoint")]),t._v(" jp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DBRouter")]),t._v(" dbRouter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Throwable")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br")])]),s("p",[t._v("②单独在@around中使用切入表达式，并使用&&拼接多个条件。")]),t._v(" "),s("h2",{attrs:{id:"_10-mybatis拦截器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10-mybatis拦截器"}},[t._v("#")]),t._v(" 10.Mybatis拦截器")]),t._v(" "),s("p",[t._v("Mybatis可以拦截如下四大对象：")]),t._v(" "),s("ul",[s("li",[t._v("Executor (update, query, flushStatements, commit, rollback, getTransaction, close, isClosed)拦截执行器(查询缓存，数据库操作，事务管理)")]),t._v(" "),s("li",[t._v("ParameterHandler (getParameterObject, setParameters)拦截sql语句参数处理(给sql语句动态赋值具体实现，也就是#{}里面的参数)")]),t._v(" "),s("li",[t._v("ResultSetHandler (handleResultSets, handleOutputParameters)拦截结果集处理和组装(resulttype将结果映射成响应的结果对象)")]),t._v(" "),s("li",[t._v("StatementHandler (prepare, parameterize, batch, update, query)拦截sql语法构建的处理(创建封装statement对象。"),s("strong",[t._v("parameterize调用parameterhandler类方法对sql站位符进行赋值")]),t._v("。prepare方法根据"),s("strong",[t._v("Connection连接")]),t._v("获取statement对象)")])]),t._v(" "),s("p",[t._v("MappedStatement：对mapper.xml某个sql方法的封装，相当于一个sql语句，通过"),s("code",[t._v("Invocation")]),t._v(" 对象的 "),s("code",[t._v("getArgs()")]),t._v(" 方法获取到，getArgs()[1]表示传入sql语句第二个参数。")]),t._v(" "),s("p",[t._v("Invocation.getTarget()获取拦截方法所在的类class")]),t._v(" "),s("p",[t._v("delegate.mappedStatement：存储"),s("strong",[t._v("映射语句")]),t._v("信息。映射语句定义了该执行哪个curd操作，以及sql语句与java对象如何映射。")]),t._v(" "),s("h2",{attrs:{id:"_11-数据库路由组件设计"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_11-数据库路由组件设计"}},[t._v("#")]),t._v(" 11.数据库路由组件设计")]),t._v(" "),s("h4",{attrs:{id:"业务场景"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#业务场景"}},[t._v("#")]),t._v(" 业务场景")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("应对分库分表的不同场景。分库解决的高并发场景，缓解同一个数据库的压力。分表解决的是单表数据量大的问题。如用户活动报名登记表适合分库，因为用户只要不超过限额，可以反复来回报名活动。而订单表则需要分库分表，因为订单表包括活动信息、抽奖策略、奖品信息等等，一条数据量大。实"),s("strong",[t._v("现分库分表的核心在于动态切换数据源dataSource")]),t._v("，不同的用户在进行数据库读写时，会"),s("font",{attrs:{color:"red"}},[s("strong",[t._v("根据他的uId使用路由算法计算获得库索引和表索引，这样用户就可以知道他的数据存放在哪个库哪个表")])]),t._v("。")],1)]),t._v(" "),s("li",[s("p",[t._v("整个过程使用拦截器和AOP来实现。"),s("strong",[t._v("通过AOP和注解获取该SQL语句的分表策略(分库？分表？索引Key)，并计算出新的路由库索引和表索引(反射拿到路由属性值+路由算法)")]),t._v("。拦截器的作用则是"),s("strong",[t._v("在执行SQL语句之前，修改插入新的库名和表名，从而路由到对应的位置读取数据")]),t._v("。")])]),t._v(" "),s("li",[s("p",[t._v("路由算法实现使用hashmap的扰乱函数来对hashcode进行均匀散列，并把计算得到的库索引和表索引存放在DB上下文类中，DB上下文类使用"),s("strong",[t._v("ThreadLocal")]),t._v("来保存库表索引(ThreadLocal具有线程隔离的特点)。")])])]),t._v(" "),s("h4",{attrs:{id:"mybatis拦截器动态替换表名"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mybatis拦截器动态替换表名"}},[t._v("#")]),t._v(" mybatis拦截器动态替换表名")]),t._v(" "),s("p",[t._v("@Signature注解：指定拦截器的类型、拦截器的方法、方法的入参。这里选择"),s("strong",[t._v("拦截StatementHandler构造sql语句之前")]),t._v("。")]),t._v(" "),s("ul",[s("li",[t._v("获取StatementHandler对象，并拿到该对象的元数据")]),t._v(" "),s("li",[t._v("从元数据对象拿到sql对象mappedStatement")]),t._v(" "),s("li",[s("strong",[t._v("通过mappedStatement.getId()获取sql语句所映射的接口名(Dao)")])]),t._v(" "),s("li",[t._v("拿到接口.class名称后可以通过class.getAnnotation()获取注解名称。("),s("font",{attrs:{color:"red"}},[s("strong",[t._v("只有通过反射拿到了.class才能够拿到注解")])]),t._v(")")],1),t._v(" "),s("li",[t._v("根据注解里定义的字段属性值，判断是否采用分表策略，不分表则照常执行不需要修改。")]),t._v(" "),s("li",[t._v("如果需要分表,从拦截类statementHandler获取sql语句，通过正则表达式找到表名的位置，并从DBContextHolder上下文类中取出计算好的表索引替换到sql语句。")]),t._v(" "),s("li",[t._v("通过反射修改BoundSql中的sql字符串语句，因为BoundSql中的属性都为private final。")])]),t._v(" "),s("h4",{attrs:{id:"aop切面计算路由"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#aop切面计算路由"}},[t._v("#")]),t._v(" AOP切面计算路由")]),t._v(" "),s("p",[t._v("首先明白AOP环绕增强执行时机是在切点方法执行之前，也就是dao上注解方法被调用才会进行扩展。")]),t._v(" "),s("ul",[s("li",[t._v("从注解拿到的字段key判空，若为空从config"),s("font",{attrs:{color:"red"}},[s("strong",[t._v("(spring启动会直接从yml文件中读取路由组件配置)")])]),t._v("根据默认key计算路由")],1),t._v(" "),s("li",[t._v("通过反射，拿到切入点方法的实参——>根据字段名field拿到对应的值")]),t._v(" "),s("li",[t._v("根据key值使用哈希扰乱函数进行散列")]),t._v(" "),s("li",[t._v("执行切入点方法")]),t._v(" "),s("li",[t._v("最后关闭threadlocal防止内存泄露")])]),t._v(" "),s("h4",{attrs:{id:"更换数据源-分库原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#更换数据源-分库原理"}},[t._v("#")]),t._v(" 更换数据源（分库原理）")]),t._v(" "),s("ul",[s("li",[t._v("动态数据源类DynamicDataSource需要继承"),s("font",{attrs:{color:"red"}},[s("strong",[t._v("AbstractRoutingDataSource")])]),t._v("类，并重写"),s("strong",[t._v("determineCurrentLookupKey")]),t._v("方法。")],1),t._v(" "),s("li",[t._v("所谓数据源本质就是一个"),s("strong",[t._v("保存有数据库信息的Map")]),t._v("，多数据源切换的核心在于，通过AbstractRoutingDataSource动态织入程序。配置的多个数据源会放在AbstractRoutingDataSource的 "),s("strong",[t._v("targetDataSources")]),t._v("和"),s("strong",[t._v("defaultTargetDataSource")]),t._v("中，通过"),s("strong",[t._v("afterPropertiesSet")]),t._v("()方法分别复制到resolvedDataSources和resolvedDefaultDataSource中。")]),t._v(" "),s("li",[s("font",{attrs:{color:"red"}},[t._v("每次查询数据库")]),t._v("会调用AbstractRoutingDataSource的getConnection()——>调用determineTargetDataSource()方法——>调用"),s("strong",[t._v("determineCurrentLookupKey")]),t._v("方法获取数据库的key(db_02)，然后从"),s("strong",[t._v("resolvedDataSources")]),t._v("中根据key拿到该数据库的数据源配置，最后根据该配置获取connection。")],1),t._v(" "),s("li",[t._v("如何实现改写数据源：①重写determineCurrentLookupKey方法，并从threadLocal中取出dbKey返回。②通过重写setEnvironment方法，把yml配置的每个数据源都配置到Map<dbKey，数据源>中③通过set方法将Map中的数据源配置设置到AbstractRoutingDataSource里的TargetDataSources和DefaultTargetDataSource对象。")])]),t._v(" "),s("h4",{attrs:{id:"动态路由导致事务问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#动态路由导致事务问题"}},[t._v("#")]),t._v(" 动态路由导致事务问题")]),t._v(" "),s("p",[t._v("不同数据源下会导致@Transactional失效，因为数据操作不属于同一个数据库，实际上属于分布式事务的问题。重写了AbstractRoutingDataSource方法后，在事务下数据源是切换不了的，需要重写事务方法。")]),t._v(" "),s("p",[t._v("因此采用"),s("strong",[t._v("手动设置路由+手动开启事务")]),t._v("，"),s("strong",[t._v("保证同一个事务内进行的是同一个数据库的操作")]),t._v("。这些部分不交给组件的切面使用去做(不使用分库分表注解)，而是通过调用组件暴露的路由接口**，把计算的路由索引存到上下文对象类，当执行sql语句触发拦截器后从上下文类取出新的表名并更新**。")]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[t._v("idbRouterStrategy"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("doRouter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("partakeReq"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getuId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" transactionTemplate"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("execute")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("status"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DuplicateKeyException")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        status"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setRollbackOnly")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Result")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("buildResult")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Constants"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ResponseCode")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("INDEX_DUP")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Result")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("buildSuccessResult")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br")])]),s("h4",{attrs:{id:"待解决问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#待解决问题"}},[t._v("#")]),t._v(" 待解决问题")]),t._v(" "),s("p",[s("strong",[t._v("AbstractDataRouting替代默认数据源，实现动态多数据源切入。")])]),t._v(" "),s("p",[t._v("尚未解决多数据源问题，比如hikari，或者Druid，不能使用数据连接池。")]),t._v(" "),s("h2",{attrs:{id:"_12-meta-inf-spring-factories与springconfig配置依赖"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_12-meta-inf-spring-factories与springconfig配置依赖"}},[t._v("#")]),t._v(" 12.META-INF/spring.factories与springConfig配置依赖")]),t._v(" "),s("ul",[s("li",[t._v("spring.factories")])]),t._v(" "),s("p",[t._v("Spring加载时会去META-INF文件夹下的"),s("font",{attrs:{color:"red"}},[s("strong",[t._v("spring.factories")])]),t._v("文件加载扫描@Configuration注解的类，导入时会扫描外部Jar包的Bean，并交给本地项目容器管理，这就是"),s("strong",[t._v("spring加载代码根目录之外的Bean的方法")]),t._v("。如果不加那么所导入的jar包所有Bean都会加载到本地项目的spring容器中，在本地项目自动注入失败。")],1),t._v(" "),s("ul",[s("li",[t._v("Spring自动配置依赖")])]),t._v(" "),s("p",[t._v("spring-boot-configuration-processor：将自己的配置、你自己创建的配置类、生成元数据信息，从而在配置文件中(application.yml)可以方便的显示看到配置的属性。")]),t._v(" "),s("p",[t._v("spring-boot-autoconfigure：自动配置，默认配置项")]),t._v(" "),s("h2",{attrs:{id:"_13-configurationproperties和afterpropertiesset"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_13-configurationproperties和afterpropertiesset"}},[t._v("#")]),t._v(" 13.@ConfigurationProperties和afterPropertiesSet()")]),t._v(" "),s("ul",[s("li",[t._v("@ConfigurationProperties")])]),t._v(" "),s("p",[t._v('@ConfigurationProperties(prefix = "mybatis")：可以'),s("strong",[t._v("在当前注解类取到yml配置的数据(当前注解类需要提供get,set方法)")]),t._v("。")]),t._v(" "),s("p",[s("strong",[t._v("@EnableConfigurationProperties(MyProperties.class)")]),t._v("：注解会"),s("strong",[t._v("将配置参数类注册到容器中")]),t._v("，然后在当前注解类可以直接通过对象使用配置参数。")]),t._v(" "),s("p",[t._v("其中prefix绑定前缀命名规范:仅支持纯小写字母、数字、下划线")]),t._v(" "),s("p",[t._v("作用："),s("font",{attrs:{color:"red"}},[t._v("可以在yml中填写配置时，提示当前组件可以配置的变量名")]),t._v("。")],1),t._v(" "),s("ul",[s("li",[t._v("afterPropertiesSet")])]),t._v(" "),s("p",[t._v("在spring的bean的生命周期中，实例化->生成对象->属性填充后会进行afterPropertiesSet方法。")]),t._v(" "),s("h2",{attrs:{id:"_14-static和final"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_14-static和final"}},[t._v("#")]),t._v(" 14.static和final")]),t._v(" "),s("p",[t._v("static静态方法需要通过类名调用，static的数据和代码块会在jvm中存放在方法区。而类对象会保存在堆中。")]),t._v(" "),s("p",[t._v("final修改的变量可以通过反射修改变量值。")]),t._v(" "),s("p",[t._v("stream()map()块内不能用外部变量，只能用final。")]),t._v(" "),s("p",[t._v("BeanUtils.getProperty(bean,attr)：获取bean对象的attr属性字段值。")]),t._v(" "),s("h2",{attrs:{id:"_15-mybatis驼峰与lombok"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_15-mybatis驼峰与lombok"}},[t._v("#")]),t._v(" 15.Mybatis驼峰与lombok")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("Mybatis中的配置文件只能指定一份")]),t._v("，要么在spring的yml中configuration下添加所有的配置，要么在资源文件下创建mybatis-config.xml文件，所有配置添加里面，并用config-location指明位置。否则会报错")]),t._v(" "),s("li",[s("strong",[t._v("uId字段使用lombok@Data注解后，mybatis开启驼峰导致数据库接收不到数据")]),t._v("。原因是当使用@Data注解时，自动生成的setter,getter方法为getUId，不符合javaBean规范。 解决方法是"),s("strong",[t._v("遇到第二个字母大写的字段一定要重写getter,setter方法")]),t._v("。")])]),t._v(" "),s("h2",{attrs:{id:"_16-报名活动"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_16-报名活动"}},[t._v("#")]),t._v(" 16.报名活动")]),t._v(" "),s("ul",[s("li",[t._v("业务场景")])]),t._v(" "),s("p",[t._v("报名活动使用模板模式实现。抽象类中定义整个报名活动执行流程和顺序：")]),t._v(" "),s("p",[t._v("①查询是否存在报了名但是未抽奖的记录（当前再次报名活动就是在刷单）")]),t._v(" "),s("p",[t._v("②获取活动账单,并将活动报名数量插入缓存当中")]),t._v(" "),s("p",[t._v("③活动信息校验：包括日期校验，库存校验，状态校验。")]),t._v(" "),s("p",[t._v("④扣减活动库存：可以根据不同活动执行不同的扣减策略，无限次数或者是限次数。")]),t._v(" "),s("p",[t._v("⑤添加个人报名记录")]),t._v(" "),s("p",[t._v("其中活动信息校验处理、扣减活动库存、添加个人报名记录抽象出来交给子类实现。")]),t._v(" "),s("h2",{attrs:{id:"_17-组合模式-决策树"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_17-组合模式-决策树"}},[t._v("#")]),t._v(" 17.组合模式&决策树")]),t._v(" "),s("h4",{attrs:{id:"组合模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#组合模式"}},[t._v("#")]),t._v(" 组合模式")]),t._v(" "),s("ul",[s("li",[t._v("业务场景")])]),t._v(" "),s("p",[t._v("报名活动时除了用户直接指定特定的活动之外，还可以使用"),s("strong",[t._v("决策树")]),t._v("根据用户信息来决策出最合适的活动ID，以减少活动成本。")]),t._v(" "),s("p",[t._v("遇到流程控制(类似于业务办理流程、简历面试流程)、条件筛选、多层级树形菜单加载等等都可以考虑使用决策树。")]),t._v(" "),s("ul",[s("li",[t._v("组合模式")])]),t._v(" "),s("p",[t._v("组合模式：对象具有部分-整体的层次结构可以使用组合模式(书籍-目录，子节点-非叶子节点)。实现的关键点在于"),s("strong",[t._v("组合对象")]),t._v("(目录，非叶子节点)需要维护一个"),s("strong",[t._v("单个对象的集合")]),t._v("。而具体如何使用组合模式统一操作组合对象与单个对象，有几种设计：")]),t._v(" "),s("p",[t._v("①通过类里的type字段来标识节点类型")]),t._v(" "),s("p",[t._v("②如果节点之间还需要控制不同的行为，可以继承抽象父类，然后在"),s("strong",[t._v("实现类里面维护不同类型对象的标识字段")]),t._v("。外部调用时只需要操作抽象接口,"),s("strong",[t._v("通过接口实现的get、set方法暴漏不同节点类型的属性")]),t._v("。")]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TreeNodeVO")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Long")]),t._v(" treeId"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Long")]),t._v(" treeNodeId"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),t._v(" nodeType"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" ruleKey"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" ruleDesc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" nodeValue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("List")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TreeNodeLineVO")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" treeNodeLineVOList"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br")])]),s("h4",{attrs:{id:"决策树"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#决策树"}},[t._v("#")]),t._v(" 决策树")]),t._v(" "),s("ul",[s("li",[t._v("VO对象设计")])]),t._v(" "),s("p",[t._v("树节点："),s("strong",[t._v("非叶子节点")]),t._v("包含决策字段类型(年龄，性别...)、子节点链路集合。而"),s("strong",[t._v("叶子节点的节点值保存的是活动ID")]),t._v("。")]),t._v(" "),s("p",[t._v("链路节点(边节点)：头节点、尾节点、决策比较类型(大于，小于，等于)，"),s("strong",[t._v("边的决策值")])]),t._v(" "),s("ul",[s("li",[t._v("过滤决策")])]),t._v(" "),s("p",[t._v("首先明确一点，"),s("font",{attrs:{color:"red"}},[s("strong",[t._v("进行决策的树节点不保存有决策值，所有非叶子节点的决策值都是从一个根据用户信息封装成的Map<Type,value>得到，根据非叶子节点的决策字段来从Map取出决策值")])]),t._v("。")],1),t._v(" "),s("p",[t._v("每一条链路进行决策过滤时，根据当前节点的决策值、边节点比较类型、边界点决策值来进行判断，从而决策出符合条件的一条链路，获取下一步要走的节点ID。最终到达树的叶子节点后决策出活动ID。")]),t._v(" "),s("p",[t._v("这里定义了边节点比较类型的常量，"),s("strong",[t._v("大于、小于等比较规则在数据库中保存为int值")]),t._v("。")]),t._v(" "),s("ul",[s("li",[t._v("封装决策器和决策服务")])]),t._v(" "),s("p",[t._v("使用"),s("font",{attrs:{color:"red"}},[t._v("工厂模式+策略模式实现不同规则的决策器")]),t._v("。首先工厂logicFilterMap会根据不同的节点类型取出决策器，不同的决策器会根据"),s("strong",[t._v("决策器类型")]),t._v("从请求对象中封装的用户信息Map取出对应字段的决策值,并进行过滤决策。")],1),t._v(" "),s("p",[s("img",{attrs:{src:"https://jsd.cdn.zzko.cn/gh/blage-coding/picx-images-hosting@master/20230515/image-20230406103439028.5fvil1uo5t80.webp",alt:"image-20230406103439028"}})]),t._v(" "),s("p",[t._v("决策服务则控制整个流程，包括获取所有决策树的节点信息——>遍历整个树节点进行决策——>包装响应对象.")]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Constants"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("NodeType")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("STEM")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("equals")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("treeNodeVO"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getNodeType")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/** 获取当前决策节点的子树茎 */")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("List")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TreeNodeLineVO")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" treeNodeLineVOList "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" treeNodeVO"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getTreeNodeLineVOList")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" ruleKey "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" treeNodeVO"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getRuleKey")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/** 根据当前决策字段拿到决策器 */")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("LogicFilter")]),t._v(" logicFilter "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" logicFilterMap"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ruleKey"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" matterValue "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" logicFilter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("matterValue")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("req"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Long")]),t._v(" childId "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" logicFilter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("filter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("matterValue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" treeNodeLineVOList"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/** 校验是否决策出结果 */")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Constants"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Global")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("TREE_NULL_NODE")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("equals")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("childId"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    treeNodeVO "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" treeNodeMap"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("childId"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br")])]),s("h2",{attrs:{id:"_18-门面模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_18-门面模式"}},[t._v("#")]),t._v(" 18.门面模式")]),t._v(" "),s("ul",[s("li",[t._v("业务场景")])]),t._v(" "),s("p",[t._v("在RPC调用时可以不暴露应用层接口，便于外系统调用。不暴露子系统之间的模块交互与实现，"),s("strong",[t._v("实现客户端和子系统之间解耦")]),t._v("。")]),t._v(" "),s("p",[t._v("执行抽奖封装一个门面，其中包括了子系统活动领取、根据策略算法抽奖、结果生成订单落库的组合调用，客户端不需要关心子系统之间的组合和不同服务请求的封装。")]),t._v(" "),s("h2",{attrs:{id:"_19-mapstruct"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_19-mapstruct"}},[t._v("#")]),t._v(" 19.MapStruct")]),t._v(" "),s("h4",{attrs:{id:"性能比较"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#性能比较"}},[t._v("#")]),t._v(" 性能比较")]),t._v(" "),s("p",[t._v("执行性能上get/set>MapStruct>BeanUtils")]),t._v(" "),s("p",[t._v("Java程序执行的过程，是由编译器先把java文件编译成class字节码文件，然后由JVM去解释执行class文件。Mapstruct正是在java文件到class这一步帮我们实现了转换方法，即做了预处理，提前编译好文件。")]),t._v(" "),s("p",[s("strong",[t._v("IMapping")]),t._v("注入爆红。代码没执行之前自动注入该转换器接口IDEA会出现红线提示，但是运行可以通过，原因就是在于该标签可以动态的完成DTO-DO之间的转换，会在"),s("strong",[t._v("target")]),t._v("包中生成对应的实现类。")]),t._v(" "),s("h4",{attrs:{id:"注解使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#注解使用"}},[t._v("#")]),t._v(" 注解使用")]),t._v(" "),s("ul",[s("li",[t._v("@Mapping")])]),t._v(" "),s("p",[t._v("通过source和target配置不同字段名称之间的赋值。同名属性不需要指定source和target，可以不适用该注解。")]),t._v(" "),s("p",[t._v("当源和目的某一边缺少某个属性时，转换时可以通过指定@Mapping里的constant或者defaultValue给另一边赋值。")]),t._v(" "),s("p",[t._v('源和目的的属性格式不一致(类型一样)时，可以指定dateFormat给目的属性值转换为特定的格式，如@Mapping(target = "createTime", dateFormat = "yyyy-MM-dd HH:mm:ss")。')]),t._v(" "),s("p",[t._v("源和目的存在某个属性类型不一致时，可以通过expression指定类，或者实现转换器类，然后在Mapper中uses指定使用。")]),t._v(" "),s("ul",[s("li",[t._v("Mapper")])]),t._v(" "),s("p",[t._v("componentModel：指定当前接口生成的实现类的组件类型。如果指定是spring，如果指定是spring，会自动给当前实现类注解@Component。")]),t._v(" "),s("p",[t._v("unmappedTargetPolicy = ReportingPolicy.IGNORE："),s("strong",[t._v("忽略多个映射器中")]),t._v("未映射的属性，也就是映射的源或者目标类没有某个属性时，忽略该错误。")]),t._v(" "),s("ul",[s("li",[t._v("@InheritConfiguration")])]),t._v(" "),s("p",[t._v("当两个方法的映射器配置相同时，可以使用该注解，MapStruct会检索其它的已配置方法并用于当前方法的注解配置。"),s("strong",[t._v("保证相同配置器只有一个")]),t._v("。")]),t._v(" "),s("ul",[s("li",[t._v("@mappingconfig")])]),t._v(" "),s("p",[t._v("共享配置，可以通过继承或者是指定mapper config=?使用")]),t._v(" "),s("h4",{attrs:{id:"实现转换器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#实现转换器"}},[t._v("#")]),t._v(" 实现转换器")]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Mapper")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("componentModel "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"spring"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" unmappedTargetPolicy "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ReportingPolicy")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("IGNORE")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" unmappedSourcePolicy "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ReportingPolicy")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("IGNORE")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AwardMapping")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IMapping")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DrawAwardVO")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AwardDTO")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Mapping")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("target "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"userId"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" source "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"uId"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AwardDTO")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sourceToTarget")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DrawAwardVO")]),t._v(" var1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DrawAwardVO")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("targetToSource")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AwardDTO")]),t._v(" var1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br")])]),s("h2",{attrs:{id:"_20-kafka流量削峰"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_20-kafka流量削峰"}},[t._v("#")]),t._v(" 20.kafka流量削峰")]),t._v(" "),s("ul",[s("li",[t._v("中奖后异步消息发奖")])]),t._v(" "),s("p",[t._v("在异步发奖消费场景中,中奖落库后(user_strategy_export表插入订单数据，但授奖位还为0)，生产者通过MQ推送"),s("strong",[t._v("发奖通知")]),t._v("，消费者收到后修改授奖状态位。从而实现解耦削峰，用户只关注抽奖结果，而后续其它过程都可以交给MQ异步处理。")]),t._v(" "),s("p",[s("strong",[t._v("数据库表设计上给export订单表设置了MQ消息发送状态")]),t._v("，"),s("strong",[t._v("根据生产者发送消息后的回调状态来修改消息发送状态")]),t._v("，对于发送失败消息的采用定时任务补偿(这里如果消息状态修改失败也不会有影响，最终只需要判断成功code码)，保证了"),s("font",{attrs:{color:"red"}},[s("strong",[t._v("生产者到broker之间的高可用")])]),t._v("。")],1),t._v(" "),s("p",[t._v("消费者消费失败，可以通过"),s("strong",[t._v("offset偏移量机制")]),t._v("(只有消费成功才提交)+"),s("strong",[t._v("指定auto-offset-reset")]),t._v("+"),s("strong",[t._v("手动提交偏移量(执行ack.acknowledge")]),t._v("())诸多机制来保证"),s("font",{attrs:{color:"red"}},[s("strong",[t._v("消费者与broker之间的高可用")])]),t._v("。其中某些机制可能导致重复消费(earliest)，因此需要保证"),s("strong",[t._v("消费幂等性")]),t._v("。")],1),t._v(" "),s("ul",[s("li",[t._v("报名活动成功后异步扣减活动库存")])]),t._v(" "),s("p",[t._v("原本活动库存扣减使用数据库行级锁(乐观锁)处理扣减，但是存在并发问题，如果库存为1时，两个用户同时都查出库存都大于0，那么它们都可以执行更新操作，导致库存为负数。")]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("UPDATE")]),t._v(" activity "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SET")]),t._v(" stock_surplus_count "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" stock_surplus_count "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" activity_id "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#{activityId} AND stock_surplus_count > 0")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("p",[t._v("通过redis活动库存报名完活动后，使用MQ发送消息异步更新数据库活动库存，做数据最终一致性处理。")]),t._v(" "),s("h2",{attrs:{id:"_21-xxl-job实时任务"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_21-xxl-job实时任务"}},[t._v("#")]),t._v(" 21.xxl-job实时任务")]),t._v(" "),s("p",[t._v("在使用上xxl-job更多适用于对"),s("strong",[t._v("实时性")]),t._v("有要求的定时任务，或者是在跨服务或者是跨业务相互调用的场景下保证整个系统的高可用(feign、dubbo等因为网络波动调用失败，回调通知后使用xxljob进行补偿).")]),t._v(" "),s("ul",[s("li",[t._v("应用场景1")])]),t._v(" "),s("p",[t._v("扫描抽奖活动状态。在秒杀活动开始之前，根据当前时间和活动开始时间的时空关系，调用状态流转服务，审核通过的活动状态扫描后修改为为活动中。通过把已过期活动中的状态扫描为关闭。")]),t._v(" "),s("ul",[s("li",[t._v("应用场景2")])]),t._v(" "),s("p",[t._v("MQ消息补偿业务。对前面MQ发送发奖消息失败的情况，首先扫描出消息发送失败的订单，包括消息发送失败(state=2)和迟迟没有发送消息的情况(state=0)，然后再通过定时任务进行补偿重新发送消息。")]),t._v(" "),s("p",[t._v("其中由于需要通过扫描所有数据库来找出发送失败的消息，因此需要"),s("strong",[t._v("循环的方式把每个库下的多张表中的每条用户记录都进行扫描")]),t._v("。所以需要在分库分表组件中，"),s("strong",[t._v("提供出可以设置路由到的库和表")]),t._v("。")]),t._v(" "),s("p",[t._v("两种做法，一种是直接在xxl-job任务配置时在任务参数指定需要扫描的数据库编号。另一种则是通过IDBRouterStrategy的Bean对象实现，从类里面的dbConfig中拿到"),s("strong",[t._v("spring配")]),t._v("置分库分表的数量。最后循环设置DBContextHolder的库表索引即可。")]),t._v(" "),s("p",[s("strong",[t._v("根据MQ发送消息的回调状态，修改MQ状态(不修改则会重复补偿已经成功MQ消息)")]),t._v("。")]),t._v(" "),s("h2",{attrs:{id:"_22-redis滑块锁"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_22-redis滑块锁"}},[t._v("#")]),t._v(" 22.redis滑块锁")]),t._v(" "),s("p",[t._v("场景：活动库存扣减")]),t._v(" "),s("p",[t._v("通过redis实现了滑块锁，在高并发场景下，用户只有拿到分布式滑块锁，才能够完成redis的活动库存扣减。分布式锁key设置为"),s("strong",[t._v("活动编号+库存(排队锁，当前活动库存数量没减少，那么其它用户就获取不到)")]),t._v("，可以使粒度降低，如果单独只是活动编号作为key可能出现"),s("strong",[t._v("有库存而不能秒杀")]),t._v("的场景。分布式锁加在"),s("strong",[t._v("活动库存减一")]),t._v("操作的两头，减小锁的力度，提高系统性能。")]),t._v(" "),s("p",[t._v("除了滑块锁之外，redis还存放了秒杀活动的报名库存(热点数据)。整个扣减流程如下：")]),t._v(" "),s("ul",[s("li",[t._v("查询活动详情后，把活动库存数量通过setifabsent(不用set的原因是防止从数据库读的脏数据更新到缓存中)加入缓存中，同时可以给库存数量也就是热点数据添加过期时间比如2h，防止过多的热点数据占用redis内存空间。")]),t._v(" "),s("li",[t._v("扣减流程中，首先以活动id+活动库存数量为Key获取锁")]),t._v(" "),s("li",[t._v("如果获取成功，那么先判断库存是否有剩余，然后扣减redis中活动库存数量")]),t._v(" "),s("li",[t._v("释放滑块锁")]),t._v(" "),s("li",[t._v("扣减完数据后发送MQ消息活动库存减一。注意这里不能用扣减活动返回的缓存中的库存数据通过赋值更新，"),s("strong",[t._v("只能够UPDATE activity SET stock_surplus_count = stock_surplus_count-1")]),t._v(",因为这里MQ执行的顺序在分布式场景不能保证，可能会把先扣减的库存后消费更新。")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://jsd.cdn.zzko.cn/gh/blage-coding/picx-images-hosting@master/20230515/1680653192489-2504f3f3-5aef-4ce1-9b43-6d04f58dac9d%5B1%5D.3ql1b514ila0.webp",alt:"img"}})]),t._v(" "),s("p",[t._v("此外，如果系统并发体量较大，还需要把 MQ 的数据不要直接对库更新，仅仅更新缓存中的库存数量，最后可以使用定时任务"),s("strong",[t._v("拿缓存的库存数量")]),t._v("来更新数据库库存，然后删除缓存中的库存数据。以此减少对数据库表的操作。")]),t._v(" "),s("p",[t._v("实际上redis并不适合实时性数据，只能保证最终一致性。因为写数据库后删除缓存能保证一致性但是不能满足高并发，而如果不删除缓存又会导致读到脏数据。")]),t._v(" "),s("h2",{attrs:{id:"_23-redis序列化器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_23-redis序列化器"}},[t._v("#")]),t._v(" 23.redis序列化器")]),t._v(" "),s("p",[t._v("JdkSerializationRedisSerializer：RedisTemplate默认序列化方式，前提是被序列化对象必须实现Serializable接口，序列化后保存的是字节序列。(序列化后结果庞大，占据redis内存)")]),t._v(" "),s("p",[t._v("StringRedisSerializer：是StringRedisTemplate默认的序列化方式，"),s("strong",[t._v("只能对字符串进行序列化")]),t._v("，无法对普通对象进行序列化，因此需要JSON.toJSONString进行转化。")]),t._v(" "),s("p",[t._v("Jackson2JsonRedisSerializer：速度快不需要实现serializable接口，将对象序列化成json串进行存储。"),s("strong",[t._v("在序列化时需要提供序列化对象的.class类型信息")]),t._v("。")]),t._v(" "),s("p",[t._v("注意：使用jackson或者genericJackson存在的坑")]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[t._v("redisTemplate"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("opsForValue")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("set")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1L")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Long")]),t._v(" value "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" redisTemplate"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("opsForValue")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 此时获得的值的类型为Integer类型, 直接进行强转会进行报错")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 其实这也不能说是序列化存在的问题，而是json的数字类型与java的数据类型不能兼容")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("p",[t._v("这里给出一种序列化器配置：")]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Configuration")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@EnableCaching")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RedisConfig")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CachingConfigurerSupport")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Bean")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RedisTemplate")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("redisTemplate")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RedisConnectionFactory")]),t._v(" factory"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RedisTemplate")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" template "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RedisTemplate")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        template"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setConnectionFactory")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("factory"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Jackson2JsonRedisSerializer")]),t._v(" jackson2JsonRedisSerializer "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Jackson2JsonRedisSerializer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ObjectMapper")]),t._v(" om "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ObjectMapper")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 指定要序列化的域，field,get和set,以及修饰符范围，ANY是都有包括private和public")]),t._v("\n        om"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setVisibility")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("PropertyAccessor")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("ALL")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("JsonAutoDetect"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Visibility")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("ANY")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 指定序列化输入的类型，类必须是非final修饰的，final修饰的类，比如String,Integer等会跑出异常")]),t._v("\n        om"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("enableDefaultTyping")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ObjectMapper"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("DefaultTyping")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NON_FINAL")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        jackson2JsonRedisSerializer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setObjectMapper")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("om"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        \n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/** 设置redis键和值的序列化器*/")]),t._v("\n        template"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setKeySerializer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StringRedisSerializer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        template"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setValueSerializer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("jackson2JsonRedisSerializer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/** 设置hash的序列化器*/")]),t._v("\n        template"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setHashKeySerializer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StringRedisSerializer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        template"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setValueSerializer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("jackson2JsonRedisSerializer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        template"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("afterPropertiesSet")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" template"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br"),s("span",{staticClass:"line-number"},[t._v("21")]),s("br"),s("span",{staticClass:"line-number"},[t._v("22")]),s("br"),s("span",{staticClass:"line-number"},[t._v("23")]),s("br"),s("span",{staticClass:"line-number"},[t._v("24")]),s("br")])]),s("h2",{attrs:{id:"_24-整合springboot和xxljob"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_24-整合springboot和xxljob"}},[t._v("#")]),t._v(" 24.整合springboot和xxljob")]),t._v(" "),s("p",[t._v("创造一个xxl-job组件，客户端启动spring后自动将任务注册到调度中心admin中。")]),t._v(" "),s("p",[t._v("查看调度中心controller源码后，发现新建执行器和任务都是向数据库中添加XxlJobGroup和XxlJobInfo这两个对象，也就是spring启动时往数据库插入执行器和任务两种记录即可。可以在@PostConstruct实现。")]),t._v(" "),s("p",[t._v("难点在于项目启动时获取@XxlJob注解里的内容。首先拿到applicationContext并拿到spring中所有的bean，然后再通过.class.getAnnotation拿到注解，但是最后还是要拿到方法上的注解。查了下发现xxljob是通过MethodIntrospector.selectMethods实现。这里留个坑后续把@XxlJob也一起合并")]),t._v(" "),s("p",[t._v("注意：获取自定义注解里面的值，那么一定要能够找到注解类，通过XX.getClass().getAnnotation(MyAnnotation.class)才能拿到注解接口，进而拿到注解里面的值。")]),t._v(" "),s("h2",{attrs:{id:"_25-dubbo通信对象序列化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_25-dubbo通信对象序列化"}},[t._v("#")]),t._v(" 25.Dubbo通信对象序列化")]),t._v(" "),s("p",[t._v("dubbo进行微服务通信时，双方之间进行信息传输的对象都需要实现序列化接口(包括类下的子属性对象，非java基本类型；继承关系只需要序列化子类)，调用方发送请求的req对象，以及服务提供方的应答res对象。")]),t._v(" "),s("h2",{attrs:{id:"_26-多服务包调用下maven打包技巧"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_26-多服务包调用下maven打包技巧"}},[t._v("#")]),t._v(" 26.多服务包调用下Maven打包技巧")]),t._v(" "),s("ul",[s("li",[t._v("打包顺序遵循父pom——>被调用服务的jar包——>子服务jar包")]),t._v(" "),s("li",[t._v("打包操作一律clean——>package——>install")]),t._v(" "),s("li",[t._v("install操作表示将当前jar包加载安装到本地Maven仓库当中")]),t._v(" "),s("li",[t._v("调用其它服务的依赖时，"),s("strong",[t._v("需要指定version版本号")]),t._v("或者交给父pom通过dependencyManagement管理。因为具体的jar包都是保存在仓库中groupId+artifactId+version所拼接的文件目录下。")]),t._v(" "),s("li",[t._v("可以指定仓库让maven在本地仓库找包。")]),t._v(" "),s("li",[t._v("永久关闭防火墙systemctl disable firewalld  /firewald.service")])])])}),[],!1,null,null,null);s.default=e.exports}}]);