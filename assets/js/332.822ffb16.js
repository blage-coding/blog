(window.webpackJsonp=window.webpackJsonp||[]).push([[332],{653:function(t,s,a){"use strict";a.r(s);var n=a(4),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"java基础"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#java基础"}},[t._v("#")]),t._v(" JAVA基础")]),t._v(" "),s("h2",{attrs:{id:"_1-string-stringbuilder和stringbuffer"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-string-stringbuilder和stringbuffer"}},[t._v("#")]),t._v(" 1.String，StringBuilder和StringBuffer")]),t._v(" "),s("h4",{attrs:{id:"区别对比"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#区别对比"}},[t._v("#")]),t._v(" 区别对比")]),t._v(" "),s("ul",[s("li",[t._v("String")])]),t._v(" "),s("p",[t._v("String是final修饰的，不可变的(它的对象生成在方法区)，不可以对String对象进行操作或者赋值。当使用substring()或者是split()等方法时会创建新的String对象。")]),t._v(" "),s("ul",[s("li",[t._v("StringBuilder,StringBuffer")])]),t._v(" "),s("p",[t._v("StringBuilder是线程不安全的；而StringBuffer是线程安全的,"),s("strong",[t._v("因为它的每个方法都是synchronized修饰的")]),t._v("，但是效率低。使用时一般有限考虑StringBuilder,而在"),s("strong",[t._v("多线程使用共享变量下则需要使用StringBuffer")]),t._v("。对象不需要修改则使用String。")]),t._v(" "),s("ul",[s("li",[t._v("相互转换")])]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" str"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ssg"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//String和StringBuilder转换")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StringBuilder")]),t._v(" s"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StringBuilder")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("append")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" str2"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n \n "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" s1"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toCharArray")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//String和字符数组转换")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" str3"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("s1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br")])]),s("ul",[s("li",[t._v("字符串判空")])]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fid"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("equals")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fid"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("h4",{attrs:{id:"string字符串api"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#string字符串api"}},[t._v("#")]),t._v(" String字符串API")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("String.valueOf(char[] data):将char[]数组转换成String")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("String.substring")]),t._v("：substring(a,b)：返回下标为a到b-1之间的string")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("String.replace")]),t._v('：replaceAll("ss","bb")直接把ss全部替换bb')])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("利用String找到十进制数的最高位和最低位数字")]),t._v("：")]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("7893")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" s"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("valueOf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" high"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("charAt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token char"}},[t._v("'0'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" low"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("charAt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("length")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token char"}},[t._v("'0'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])])]),t._v(" "),s("li",[s("p",[t._v("String按照字典序重排")]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" chars"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toCharArray")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Arrays")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sort")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("chars"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ns"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("valueOf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("chars"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])])])]),t._v(" "),s("h4",{attrs:{id:"stringbuilder-api"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#stringbuilder-api"}},[t._v("#")]),t._v(" StringBuilder API")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("StringBuilder.delete(int start,int end)从原字符串删除下标为start到end-1的子串")]),t._v("。")]),t._v(" "),s("li",[s("strong",[t._v("StringBuilder.insert(int start,String s)在原字符串下标start位置插入字符串s(首字符下标为start)")]),t._v("。")])]),t._v(" "),s("h2",{attrs:{id:"_2-列表与队列"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-列表与队列"}},[t._v("#")]),t._v(" 2.列表与队列")]),t._v(" "),s("p",[s("font",{attrs:{color:"red"}},[s("strong",[t._v("无论是队列、堆、栈都可以调用remove（Object o）删除指定元素")])]),t._v("。")],1),t._v(" "),s("h4",{attrs:{id:"arraylist与linkedlist区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#arraylist与linkedlist区别"}},[t._v("#")]),t._v(" ArrayList与LinkedList区别")]),t._v(" "),s("p",[s("strong",[t._v("ArrayList基于动态数组")]),t._v("，适合使用下标搜索，"),s("strong",[t._v("随机访问")]),t._v("。扩容时头部插入数据损耗性能,而使用尾插法效率更高。")]),t._v(" "),s("p",[t._v("LinkedLIst基于链表，适合"),s("strong",[t._v("插入删除")]),t._v("。实现了Deque接口，可以当作"),s("strong",[t._v("双端队列")]),t._v("使用。")]),t._v(" "),s("h4",{attrs:{id:"list转换"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#list转换"}},[t._v("#")]),t._v(" List转换")]),t._v(" "),s("ul",[s("li",[t._v("数组转换成List类型使用Arrays.asList()方法。")])]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("List")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" strList"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nstrList"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Arrays")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("asList")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("ul",[s("li",[t._v("List转指定类型数组")])]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" strs"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("list"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toArray")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("list"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("size")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("ul",[s("li",[t._v("List转int[]")])]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" arr"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("list"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("stream")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("mapToInt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("valueOf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toArray")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("h4",{attrs:{id:"list容器api"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#list容器api"}},[t._v("#")]),t._v(" List容器API")]),t._v(" "),s("p",[t._v("list容器(数组线性表)：List<List<"),s("strong",[t._v("Integer")]),t._v(">> list=new ArrayList<>()")]),t._v(" "),s("ul",[s("li",[t._v("list.add(obj)向尾部添加元素,list.add(int index,Object obj)向index索引位置添加元素。特别要注意的是，"),s("strong",[t._v("add()方法加入的是对象的地址，要加入不同对象需要new新的对象。add()允许添加重复元素。")])]),t._v(" "),s("li",[t._v("list.remove(int i)删除索引i位置的元素，可以这样子写"),s("strong",[t._v("remove(list.indexOf(Object a))")]),t._v("。另一种是remove(Object a)，如果是对象引用则直接传对象引用作为参数，若传的是基本类型，则"),s("strong",[t._v("需要先转化成包装类remove(Integer.valueOf(250))")]),t._v("。")]),t._v(" "),s("li",[t._v("list.size()获取list的长度")]),t._v(" "),s("li",[t._v("list.get(int i)返回索引下标为i的元素")]),t._v(" "),s("li",[t._v("list.contains(int i)容器中含有i则返回true,可以用来"),s("strong",[t._v("去重")]),t._v("。")]),t._v(" "),s("li",[t._v("List<object> list=new ArrayList<>(Arrays.asList(object a，object b，object c...))：一种初始化写法，将数组转换集合")]),t._v(" "),s("li",[s("strong",[t._v("Arrays.sort(nums):对数组排序")])])]),t._v(" "),s("h4",{attrs:{id:"queue队列api"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#queue队列api"}},[t._v("#")]),t._v(" Queue队列API")]),t._v(" "),s("p",[t._v("LinkedList类实现了Queue接口，因此可以使用LinkedList实现队列：")]),t._v(" "),s("ul",[s("li",[t._v("Queue<TreeNode> queue=new LinkedList<TreeNode>();")]),t._v(" "),s("li",[t._v("queue.offer();插入元素到队尾")]),t._v(" "),s("li",[t._v("queue.poll();返回队首元素并删除")]),t._v(" "),s("li",[t._v("queue.isEmpty();判空")]),t._v(" "),s("li",[t._v("queue.size();返回队列大小")])]),t._v(" "),s("h4",{attrs:{id:"deque双端队列"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#deque双端队列"}},[t._v("#")]),t._v(" Deque双端队列")]),t._v(" "),s("p",[s("strong",[t._v("Deque是LinkedList类实现的一个双端队列的接口")]),t._v("，Deque<Integer>  deque=new LinkedList<>()。")]),t._v(" "),s("ul",[s("li",[s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"center"}}),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("首元素")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("首元素")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("尾元素")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("尾元素")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"center"}}),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("抛出异常")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("特殊值")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("抛出异常")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("特殊值")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("插入")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("addFirst(e)")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("offerFirst(e)")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("addLast(e)")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("offerLast(e)")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("删除")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("removeFirst()")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("pollFirst()")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("removeLast()")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("pollLast()")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("检查")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("getFirst()")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("peekFirst()")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("getLast()")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("peekLast()")])])])])])]),t._v(" "),s("h4",{attrs:{id:"优先级队列priorityqueue与comparator比较器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#优先级队列priorityqueue与comparator比较器"}},[t._v("#")]),t._v(" 优先级队列PriorityQueue与Comparator比较器")]),t._v(" "),s("p",[t._v("对二维数组进行排序，先按照第一列元素降序，如果第一列元素相同则按照第二列元素升序")]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Arrays")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sort")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("people"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Comparator")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("compare")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" o1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" o2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n         "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("o1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v("o2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" o2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("o1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n         "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" o1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("o2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br")])]),s("p",[t._v("优先级队列PriorityQueue升序排序，"),s("strong",[t._v("出队列第一个元素即为最小元素")]),t._v("：")]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("PriorityQueue")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" queue"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("PriorityQueue")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Comparator")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("compare")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),t._v(" o1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),t._v(" o2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" o1"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("o2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("；\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),t._v(" minVal"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("queue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("poll")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br")])]),s("h2",{attrs:{id:"_3-hashmap与treemap"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-hashmap与treemap"}},[t._v("#")]),t._v(" 3.HashMap与TreeMap")]),t._v(" "),s("h3",{attrs:{id:"_3-1hashmap"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-1hashmap"}},[t._v("#")]),t._v(" 3.1HashMap")]),t._v(" "),s("h4",{attrs:{id:"hashmap刷新流程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#hashmap刷新流程"}},[t._v("#")]),t._v(" HashMap刷新流程")]),t._v(" "),s("ul",[s("li",[t._v("put()")])]),t._v(" "),s("p",[t._v("首先根据key值的hashcode计算出hash值，也就是"),s("strong",[t._v("桶的位置")]),t._v("；然后进行判断空；接着遍历该桶中的元素，"),s("strong",[t._v("先判断hashcode是否相同，然后再用equals方法判断，如果为重复元素key则进行覆盖")]),t._v("；否则将新的键值对插入到该桶中。")]),t._v(" "),s("ul",[s("li",[t._v("get()")])]),t._v(" "),s("p",[t._v("get()方法和put方法类似，只不过不需要判空。")]),t._v(" "),s("ul",[s("li",[t._v("rehash")])]),t._v(" "),s("p",[t._v("HashMap通过resize()进行扩容，通过transfer()方法把旧数组拷贝到新数组当中。其中旧数组元素经过rehash后，新索引下标"),s("strong",[t._v("要么在原来同一个桶索引的位置")]),t._v("，"),s("strong",[t._v("要么是在新的索引位置")]),t._v("(因为数组长度变化，旧元素计算的哈希值也可能变化。类似于mod 数组长度的原理。但是JDK1.8不需要重新计算哈希值)")]),t._v(" "),s("h4",{attrs:{id:"hashmap容器api"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#hashmap容器api"}},[t._v("#")]),t._v(" HashMap容器API")]),t._v(" "),s("ul",[s("li",[t._v("hashmap.put(i,j):添加元素key=i对应value为j")]),t._v(" "),s("li",[t._v("hashmap.get(i):访问i对应的value,"),s("strong",[t._v("若不存在key则返回null，可以在初次插入用来判空")])]),t._v(" "),s("li",[t._v("for(Integer(key类型) i:hashmap.keySet())  hashmap.get(i)")]),t._v(" "),s("li",[t._v("for(Integer(value类型) i:hashmap.values())")]),t._v(" "),s("li",[t._v("containsKey()/containsValue() 容器含有对应的key值或者value则返回true,用来判空")])]),t._v(" "),s("h3",{attrs:{id:"_3-2treemap"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-2treemap"}},[t._v("#")]),t._v(" 3.2TreeMap")]),t._v(" "),s("h4",{attrs:{id:"treemap性质"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#treemap性质"}},[t._v("#")]),t._v(" TreeMap性质")]),t._v(" "),s("p",[t._v("TreeMap具有如下性质：")]),t._v(" "),s("ul",[s("li",[s("font",{attrs:{color:"red"}},[s("strong",[t._v("插入元素时，在内部会对Key进行排序")])]),t._v("，默认是升序。")],1),t._v(" "),s("li",[t._v("通过"),s("font",{attrs:{color:"red"}},[s("strong",[t._v("firstKey()和LastKey()两个API分别获取第一个key和最后一个key的值")])]),t._v("(最小key和最大key)")],1),t._v(" "),s("li",[t._v("cellingKey(K num)：返回大于等于num的最小key值；floorKey(K num)：返回小于等于num的最大key值")]),t._v(" "),s("li",[t._v("pollFirstEntry()：删除key最小的元素。")])]),t._v(" "),s("h2",{attrs:{id:"_4-pair-treenode-integer"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-pair-treenode-integer"}},[t._v("#")]),t._v(" 4.Pair<TreeNode,Integer>")]),t._v(" "),s("p",[t._v("使用Pair类型对象返回一个"),s("strong",[t._v("不同类型对象的元组")]),t._v("，类似于HashMap的每一组K-V值。")]),t._v(" "),s("p",[t._v("作为递归函数的返回值类型用于传递更多的信息：")]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Pair")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TreeNode")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" node"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TreeNode")]),t._v(" tree"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("node"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getKey")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),t._v(" val"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("node"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getValue")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("h2",{attrs:{id:"_5-stream流"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-stream流"}},[t._v("#")]),t._v(" 5.Stream流")]),t._v(" "),s("h4",{attrs:{id:"collectors-groupingby"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#collectors-groupingby"}},[t._v("#")]),t._v(" Collectors#groupingBy")]),t._v(" "),s("p",[t._v("List集合通过stream流重新收集构造Map，"),s("font",{attrs:{color:"red"}},[s("strong",[t._v("groupingBy指定容器数据类型的哪个字段作为key，value为聚合的List集合。")])]),t._v("key->groupId,value->List<GatewayServerDetailVO>")],1),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Map")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("List")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("GatewayServerDetailVO")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" gatewayServerDetailMap "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" gatewayServerDetailVOS"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("stream")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("collect")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Collectors")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("groupingBy")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("GatewayServerDetailVO")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getGroupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("h4",{attrs:{id:"list集合stream流提供的方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#list集合stream流提供的方法"}},[t._v("#")]),t._v(" List集合stream流提供的方法")]),t._v(" "),s("ul",[s("li",[t._v("filter()：筛选过滤集合中满足的item，并return返回一个布尔类型，如果为true则表示item留在集合中。")]),t._v(" "),s("li",[t._v("map()：对所有的item进行操作，返回对象类型可以是item类型，也可以是自定义new的新类型，并把这些return的对象收集起来。")]),t._v(" "),s("li",[t._v("sorted：升序排序，return顺序和参数顺序一致则升序，否则降序。")])]),t._v(" "),s("h4",{attrs:{id:"结合beanutils组装dto对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#结合beanutils组装dto对象"}},[t._v("#")]),t._v(" 结合BeanUtils组装DTO对象")]),t._v(" "),s("p",[t._v("场景：用于把A类的List集合封装成具有更多业务属性的B类的List集合")]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("List")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SetmealDto")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" list "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" records"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("stream")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("map")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("item"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SetmealDto")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SetmealDto")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SetmealDto")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BeanUtils")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("copyProperties")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("item"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SetmealDto")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Long")]),t._v(" cId "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" item"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getCategoryId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n            "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Category")]),t._v(" category "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" categoryService"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getById")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cId"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SetmealDto")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setCategoryName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("category"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SetmealDto")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("collect")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Collectors")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toList")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br")])]),s("h2",{attrs:{id:"_6-java线程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-java线程"}},[t._v("#")]),t._v(" 6.JAVA线程")]),t._v(" "),s("h4",{attrs:{id:"java线程六种状态"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#java线程六种状态"}},[t._v("#")]),t._v(" JAVA线程六种状态")]),t._v(" "),s("p",[t._v("初始状态(NEW)：通过new一个新的线程对象后，"),s("strong",[t._v("还没有调用执行start()方法")]),t._v("。")]),t._v(" "),s("p",[t._v("运行状态(就绪+运行，Runnable)：对象创建之后，其它线程比如main()调用了该对象的start()方法，则该线程就处于"),s("strong",[t._v("就绪状态")]),t._v("，位于可运行的线程池等待分配时间片被调用。获得时间片后转为"),s("strong",[t._v("运行态")]),t._v("。")]),t._v(" "),s("p",[t._v("阻塞状态(Blocked)：表示线程"),s("strong",[t._v("阻塞于锁")]),t._v("。阻塞在synchronized修饰的方法块。")]),t._v(" "),s("p",[t._v("等待状态(Waiting)："),s("strong",[t._v("线程需要等待其它线程做出特定的动作或者通知。才被唤醒")]),t._v("。类似于休眠等待唤醒。")]),t._v(" "),s("p",[t._v("超时等待(Timed_waiting)：不同于等待状态，一定时间后线程可以自行返回。"),s("strong",[t._v("在这个状态下不会释放锁资源")]),t._v("。")]),t._v(" "),s("p",[t._v("终止状态(Terminated)：线程已经执行完毕。run{}方法或者是main()方法完成。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://jsd.cdn.zzko.cn/gh/blage-coding/picx-images-hosting@master/20230516/1096ded85e6f49e6a664ea24792b4ee2.4blqczoisem0.webp",alt:"Snipaste_2022-02-26_22-45-30"}})]),t._v(" "),s("ul",[s("li",[t._v("不区分就绪态和运行态的原因")])]),t._v(" "),s("p",[t._v("因为JAVA中"),s("strong",[t._v("线程上下文切换比较快")]),t._v("，如果区分就绪和运行，那么你看到运行态线程可能早就已经切换下去了。因此区分就绪态和运行态没有太大意义。")]),t._v(" "),s("h4",{attrs:{id:"简述线程wait-notify-sleep-join-等方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#简述线程wait-notify-sleep-join-等方法"}},[t._v("#")]),t._v(" "),s("strong",[t._v("简述线程wait(),notify(),sleep(),join()等方法")])]),t._v(" "),s("ul",[s("li",[t._v("wait()")])]),t._v(" "),s("p",[t._v("当前线程调用某个对象的wait()方法，表示"),s("strong",[t._v("线程释放这个对象的锁")]),t._v("，进入等待状态，等待再次获得这个对象的锁。(因此wait()方法必须在同步块synchronized进行)")]),t._v(" "),s("ul",[s("li",[t._v("notify()")])]),t._v(" "),s("p",[t._v("随机"),s("strong",[t._v("唤醒一个等待对象锁的线程")]),t._v("。")]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("run")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("synchronized")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("object"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//等待进入synchronized方法块，处于阻塞态")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          object"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("wait")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//等待notify()唤醒，处于等待态")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("InterruptedException")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"线程"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("currentThread")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"获取到了锁"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br")])]),s("ul",[s("li",[t._v("sleep()")])]),t._v(" "),s("p",[t._v("使"),s("strong",[t._v("当前线程停止执行一段时间，进入time_waiting状态")]),t._v("，此处并没有释放锁资源。")]),t._v(" "),s("ul",[s("li",[t._v("join()")])]),t._v(" "),s("p",[t._v("当前线程"),s("strong",[t._v("调用其它线程的join()方法")]),t._v("，进入"),s("strong",[t._v("time_waiting状态")]),t._v("，"),s("strong",[t._v("当其它线程执行完毕后，当前线程才重新进入运行态")]),t._v("。")]),t._v(" "),s("h2",{attrs:{id:"_7-java基本对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-java基本对象"}},[t._v("#")]),t._v(" 7.JAVA基本对象")]),t._v(" "),s("h4",{attrs:{id:"java包装类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#java包装类型"}},[t._v("#")]),t._v(" JAVA包装类型")]),t._v(" "),s("p",[t._v("Character和Integer,Long是char和int,long的包装类，是一个类，而char和int,long是基本数据类型,基本数据类型默认值是0。")]),t._v(" "),s("h4",{attrs:{id:"包装对象与数据类型转换"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#包装对象与数据类型转换"}},[t._v("#")]),t._v(" 包装对象与数据类型转换")]),t._v(" "),s("p",[t._v("包装类可以"),s("strong",[t._v("拆包")]),t._v("成基本数据类型，基本数据类型可以"),s("strong",[t._v("包装")]),t._v("成类。类似于类和类内属性的关系。\n"),s("strong",[t._v("Integer转int：Integer.intValue()\nint转Integer：Integer.valueOf(int)")]),t._v(" "),s("strong",[t._v("Integer封装了int类型的最大值最小值：Integer.MIN_VALUE,  Integer.MAX_VALUE")])]),t._v(" "),s("h2",{attrs:{id:"_8-java代理模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8-java代理模式"}},[t._v("#")]),t._v(" 8.JAVA代理模式")]),t._v(" "),s("p",[t._v("代理模式分为目标角色，代理角色，抽象角色。代理角色的意义在于"),s("strong",[t._v("控制客户端对目标角色的直接访问")]),t._v("或是"),s("strong",[t._v("附加扩展对目标角色的操作")]),t._v("。调用者(客户端)感知不到使用的其实是代理对象。")]),t._v(" "),s("ul",[s("li",[t._v("静态代理")])]),t._v(" "),s("p",[t._v("代理对象和目标对象"),s("strong",[t._v("共同实现一个业务接口")]),t._v("，代理对象中有一个private的私有目标对象"),s("strong",[t._v("引用")]),t._v("。使用时只需要"),s("strong",[t._v("new一个目标对象并传给代理角色即可")]),t._v("。")]),t._v(" "),s("p",[t._v("缺点在于目标角色和代理角色都实现相同业务接口，代码冗余，且维护不方便。")]),t._v(" "),s("ul",[s("li",[t._v("JDK动态代理")])]),t._v(" "),s("p",[s("strong",[t._v("代理对象不需要实现功能接口")]),t._v("。代理对象调用目标对象的方法是通过调用处理类中的invoke()方法，里面利用反射机制来调用目标类的方法。"),s("strong",[t._v("JDK动态代理实际上是通过接口来实现代理")]),t._v("。")]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("JdkProxyFactory")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getProxy")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v(" target"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Proxy")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("newProxyInstance")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n                target"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getClass")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getClassLoader")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                target"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getClass")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getInterfaces")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//代理接口")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DebugInvocationHandler")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("target"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br")])]),s("p",[t._v("缺点在于JDK代理实际上"),s("strong",[t._v("代理的只是目标类所实现的接口中方法，而对于目标类的私有方法，则不能代理")]),t._v("。")]),t._v(" "),s("ul",[s("li",[t._v("CDLIB动态代理")])]),t._v(" "),s("p",[t._v("通过"),s("strong",[t._v("继承目标类的一个子类")]),t._v("来实现代理。代理对象会把"),s("strong",[t._v("目标类设置为自己的父类")]),t._v("。实现代理方法和JDK动态代理类似，通过invoke方法。")]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CglibProxyFactory")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getProxy")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Class")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" clazz"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 创建动态代理增强类")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Enhancer")]),t._v(" enhancer "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Enhancer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 设置类加载器")]),t._v("\n        enhancer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setClassLoader")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("clazz"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getClassLoader")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 设置委托类（设置父类）")]),t._v("\n        enhancer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setSuperclass")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("clazz"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 设置方法拦截器")]),t._v("\n        enhancer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setCallback")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DebugMethodInterceptor")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 创建代理类")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" enhancer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("create")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br")])]),s("p",[t._v("缺点在于CGlib需要引入外部依赖，并且不能代理继承final修饰的类。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://jsd.cdn.zzko.cn/gh/blage-coding/picx-images-hosting@master/20230516/710fda1ed678405fbc979013b319d3b3.6dfdgxwtd7k0.webp",alt:"Snipaste_2022-02-27_13-55-50"}})]),t._v(" "),s("h2",{attrs:{id:"_9-单例模式的懒汉式和饿汉式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_9-单例模式的懒汉式和饿汉式"}},[t._v("#")]),t._v(" 9.单例模式的懒汉式和饿汉式")]),t._v(" "),s("ul",[s("li",[t._v("单例模式")])]),t._v(" "),s("p",[t._v("单例模式是指当你多次使用一个对象且作用相同时，为了防止多次重复创建该对象，导致内存飙升，内存中只创建一个对象，让所有需要调用的地方共享该对象。")]),t._v(" "),s("ul",[s("li",[t._v("懒汉式与饿汉式")])]),t._v(" "),s("p",[t._v("懒汉式是指如果没有使用或者调用该对象时，就不创建一个新的对象，仅当使用时才创建new一个对象。而饿汉式是指不管有没有被调用，在"),s("strong",[t._v("类加载时已经创建好该单例对象")]),t._v("。")]),t._v(" "),s("ul",[s("li",[t._v("DCL实现饿汉式")])]),t._v(" "),s("p",[t._v("懒汉式通过DCL实现，保证高并发场景下，不会多次创建多个对象；如果已经创建有对象，则不需要等待锁直接返回该对象(高效)。")]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SingleDemo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SingleDemo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("volatile")]),t._v(" singleDemo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SingeleDemo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SingleDemo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getInstance")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("singleDemo"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//高效性")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("synchronized")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SingleDemo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//控制高并发")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("singleDemo"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                    singleDemo"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SingleDemo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" singleDemo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br")])]),s("ul",[s("li",[t._v("破坏单例模式")])]),t._v(" "),s("p",[t._v("可以通过反射机制，"),s("strong",[t._v("强制访问该类的私有构造器，去创建另一个对象")]),t._v("。通过T.class.getConstructor获得该类的构造方法(构造器)，setAccessible(true)取消语言访问，暴力访问。")]),t._v(" "),s("h2",{attrs:{id:"_10-java开启线程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10-java开启线程"}},[t._v("#")]),t._v(" 10.JAVA开启线程")]),t._v(" "),s("p",[t._v("进程是CPU资源分配的最小单位，线程是CPU任务调度的最小单位。线程隶属于进程。")]),t._v(" "),s("ul",[s("li",[t._v("线程开启方式")])]),t._v(" "),s("p",[t._v("开启线程主要有两种方式，第一种是通过实现Runnable接口，实现run()方法。第二种是通过继承Thread类，重写run()方法。除此之外还可以通过实现Callable接口实现call方法或者是通过线程池来开启新的线程。")]),t._v(" "),s("ul",[s("li",[t._v("线程安全")])]),t._v(" "),s("p",[t._v("通过加锁来保证线程安全，有两种方式，一种是使用JVM提供的隐式锁Synchronized(偏向锁，轻量锁...)。另一种是使用JDK的显示锁(实现Lock接口，而Lock操作借助于内部类Sync，Sync继承了AQS类)。")]),t._v(" "),s("h2",{attrs:{id:"_11-object对象数组与对象转换"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_11-object对象数组与对象转换"}},[t._v("#")]),t._v(" 11.Object对象数组与对象转换")]),t._v(" "),s("ul",[s("li",[t._v("对象转换")])]),t._v(" "),s("p",[s("font",{attrs:{color:"red"}},[s("strong",[t._v("Object转String，注意如果是Integer类型，那么(String)  object强制转换会报错，")])]),t._v("正确转换如下:")],1),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v(" pageObj"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("session"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getAttribute")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"page"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" page"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("valueOf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pageObj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" page"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pageObj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("ul",[s("li",[t._v("对象数组内存分配")])]),t._v(" "),s("p",[t._v("因为Object数组中每个元素都是一个对象，因此"),s("font",{attrs:{color:"red"}},[s("strong",[t._v("它的对象在堆内存中不是连续分配的；但是在栈中的对象引用指针是连续的")])]),t._v("。")],1),t._v(" "),s("h2",{attrs:{id:"_12-多态、重写、重载"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_12-多态、重写、重载"}},[t._v("#")]),t._v(" 12.多态、重写、重载")]),t._v(" "),s("ul",[s("li",[t._v("多态")])]),t._v(" "),s("p",[t._v("JAVA多态性是指继承，重写，父类引用指向子类对象。")]),t._v(" "),s("ul",[s("li",[t._v("重载")])]),t._v(" "),s("p",[t._v("重载是指方法名相同，参数类型，个数，顺序不同。("),s("strong",[t._v("如果仅有返回类型不同不属于重载")]),t._v(")")]),t._v(" "),s("ul",[s("li",[t._v("重写")])]),t._v(" "),s("p",[t._v("重写发生在子类父类之间，"),s("strong",[t._v("方法名、参数列表相同")]),t._v("，返回值范围小于等于父类，访问修饰符范围要大于等于父类("),s("strong",[t._v("父类为private则不能重写")]),t._v(")。")]),t._v(" "),s("h2",{attrs:{id:"_13-copyonwritearraylist"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_13-copyonwritearraylist"}},[t._v("#")]),t._v(" 13.CopyOnWriteArrayList")]),t._v(" "),s("p",[t._v("CopyOnWriteArrayList容器写操作时，会复制一个数组副本，在"),s("strong",[t._v("副本上进行修改数据")]),t._v("，此时可以对原数组继续"),s("strong",[t._v("无锁读操作")]),t._v("。写操作完成之后，就"),s("strong",[t._v("把旧容器引用指向副本数组")]),t._v("。\n缺点在于仅能保证最终一致性，而不能保证强一致性(写过程读会读到旧数据)。并且需要另外开辟内存空间。")]),t._v(" "),s("p",[t._v("一般用于读多写少场景，比如白名单黑名单")]),t._v(" "),s("h2",{attrs:{id:"_14-重写equals方法与hashcode方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_14-重写equals方法与hashcode方法"}},[t._v("#")]),t._v(" 14.重写equals方法与hashcode方法")]),t._v(" "),s("p",[t._v("hashcode方法它设计的理念就是保证equals认定为是相同的两个对象拥有相同的两个哈希值。默认的equals方法是比较对象的地址，当根据业务需要重写equals方法，变为值相等时，hashcode也需要改为值相等。如果不重写hashcode，那么在遍历桶中元素判断相等时，先执行"),s("strong",[t._v("Object方法中的hashcode(比较的是地址)")]),t._v("，这时候不同地址的相同元素就会直接返回false("),s("strong",[t._v("hashcode为true桶相同，才继续用equals遍历桶中元素")]),t._v(")。")]),t._v(" "),s("h2",{attrs:{id:"_15-日期格式转换"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_15-日期格式转换"}},[t._v("#")]),t._v(" 15.日期格式转换")]),t._v(" "),s("p",[t._v("java和数据库日期交互(一般来说向数据库插入日期时，可以是Date类型，也可以是String类型——默认的日期格式)")]),t._v(" "),s("p",[s("strong",[t._v("java.util.Date包含日期时间，对应Mysql的Datetime类型")])]),t._v(" "),s("p",[s("strong",[t._v("java.sql.Date仅仅包含日期，没有时间，对应Mysql的Date类型")])]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Date")]),t._v(" date "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Date")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" str"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2022-11-11 13:59"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DateFormat")]),t._v(" simpleDateFormat "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SimpleDateFormat")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"yyyy-MM-dd HH:mm:ss"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//日期转String")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" replyDate "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" simpleDateFormat"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("format")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("date"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//String转日期")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Date")]),t._v(" date"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("simpleDateFormat"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("parse")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br")])]),s("h2",{attrs:{id:"_16-threadlocal"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_16-threadlocal"}},[t._v("#")]),t._v(" 16.ThreadLocal")]),t._v(" "),s("p",[t._v("①ThreadLocal是用来维护每个线程的私有变量和数据。"),s("strong",[t._v("ThreadLocal的set和get方式实际上是通过调用每个Thread对象中都有的一个ThreadLocalMap来进行操作(key就是这个ThreadLocal弱引用对象，value就是ThreadLocal声明的强引用类型数据)")]),t._v("。")]),t._v(" "),s("p",[t._v("②ThreadLocal对象使用完后按理说，应该要被垃圾回收。但是因为线程是强引用指向ThreadLocalMap，而ThreadLocalMap也是强引用指向Entry对象，因此只要线程不回收，那么先前的Entry对象就不会回收，进而造成内存泄漏。")]),t._v(" "),s("p",[t._v("解决方案：每次使用完ThreadLocal后，需要"),s("strong",[t._v("手动进行remove清除Entry对象")]),t._v("。")]),t._v(" "),s("p",[t._v("③使用场景：连接管理，一个线程一个连接，不同线程不共享连接。"),s("font",{attrs:{color:"red"}},[s("strong",[t._v("利用线程隔离机制维护客户端线程变量")])]),t._v("。")],1),t._v(" "),s("h2",{attrs:{id:"_17-java引用对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_17-java引用对象"}},[t._v("#")]),t._v(" 17.JAVA引用对象")]),t._v(" "),s("p",[t._v("强引用："),s("strong",[t._v("被强引用的对象即使内存不够也不会被垃圾回收")]),t._v("，要想取消某个引用和对象之间的强引用关系，"),s("strong",[t._v("可以通过把引用显式设置为null")]),t._v("，那么那个没有被引用的对象就会被垃圾回收。一般new对象，还有反射都是强引用。")]),t._v(" "),s("p",[t._v("软引用：系统内存充足则不会被回收，不充足则会被回收。适用于对内存敏感。")]),t._v(" "),s("p",[t._v("弱引用：无论内存是否够用，"),s("strong",[t._v("GC时都会把弱引用对象进行垃圾回收")]),t._v("。一般用于缓存当中。")]),t._v(" "),s("p",[t._v("虚引用：GC时就会被回收，"),s("strong",[t._v("必须搭配队列来使用")]),t._v("。可以得到GC回收的通知。")]),t._v(" "),s("h2",{attrs:{id:"_18-static"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_18-static"}},[t._v("#")]),t._v(" 18.static")]),t._v(" "),s("p",[t._v("static静态方法需要通过类名调用，static的数据和代码块会在jvm中存放在方法区。而类对象会保存在堆中。")]),t._v(" "),s("p",[t._v("final修改的变量可以通过反射修改变量值。")]),t._v(" "),s("p",[t._v("stream()map()块内不能用外部变量，只能用final。")]),t._v(" "),s("p",[t._v("BeanUtils.getProperty(bean,attr)：获取bean对象的attr属性字段值。")]),t._v(" "),s("h2",{attrs:{id:"_19-java对象的引用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_19-java对象的引用"}},[t._v("#")]),t._v(" 19.JAVA对象的引用")]),t._v(" "),s("h4",{attrs:{id:"等号给对象引用赋值"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#等号给对象引用赋值"}},[t._v("#")]),t._v(" 等号给对象引用赋值")]),t._v(" "),s("p",[s("strong",[t._v("对象的引用")]),t._v('通过"="赋值给'),s("strong",[t._v("另一个对象的引用")]),t._v("时，实际上是把这个对象在堆中的地址赋值给另一个引用，这时候两者对象的引用"),s("strong",[t._v("指向的是同一个地址")]),t._v("。以下面这个为例子:")]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Linklist")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" val"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Linklist")]),t._v(" next"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Linklist")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Linklist")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" _val"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("val"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("_val"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("next"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Linklisk")]),t._v(" p1"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Linklist")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//实例化一个Linklist对象，并让p1指向这个对象")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Linklist")]),t._v(" p2"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("p1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//把p1这个引用所指向对象的地址赋值给p2")]),t._v("\n     p1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("val"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n     p1"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Linklist")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br")])]),s("p",[t._v("这里对应两种应用调用操作：")]),t._v(" "),s("ul",[s("li",[t._v("通过p1(p2)来改变对应地址的属性p1.val，那么"),s("strong",[t._v("所有指向该对象地址的引用")]),t._v("访问"),s("strong",[t._v("该对象属性的值")]),t._v("时都会改变。即p1指向对象的内容改了，那么p2指向对象的内容也会相应改变。")]),t._v(" "),s("li",[t._v("当直接"),s("strong",[t._v("改变p1指向对象的地址")]),t._v("，相当于让p1换一个对象时，"),s("strong",[t._v("p2的指向不受影响")]),t._v("，还是指向val=8的对象。")])]),t._v(" "),s("h4",{attrs:{id:"方法调用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#方法调用"}},[t._v("#")]),t._v(" 方法调用")]),t._v(" "),s("p",[t._v("形参为对象的引用时的方法调用。例子如下：")]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Linklist")]),t._v(" p1"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Linklist")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fun")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("p1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//p.val=7")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fun")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Linklist")]),t._v(" p"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("val"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//改变引用地址的属性。或者改变p.next")]),t._v("\n\t\tp"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Linklisk")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br")])]),s("p",[t._v("当你调用函数时，先会隐式的"),s("strong",[t._v("生成（复制）一个所传入实参p1引用的形参副本p")]),t._v(",这个形参p和p1指向的是同一个堆中的对象。同样对应两种操作:")]),t._v(" "),s("ul",[s("li",[t._v("当通过形参副本p修改"),s("strong",[t._v("p所指向的堆中的对象的属性值")]),t._v("时，那么主函数中的"),s("strong",[t._v("主元(实参)所指向的地址的内容确实被改变")]),t._v("了。")]),t._v(" "),s("li",[t._v("直接修改形参副本p的指向，让p等于(指向)另一个对象时，"),s("strong",[t._v("改变的仅仅只是副本引用的指向")]),t._v("，你在主函数中"),s("strong",[t._v("实参引用指向的对象的地址仍然没变")]),t._v("，还是原来那个对象。\n"),s("img",{attrs:{src:"https://jsd.cdn.zzko.cn/gh/blage-coding/picx-images-hosting@master/20230516/344ad26f375548ab935ccfc7d109b377.61l7zoerg000.webp",alt:"在这里插入图片描述"}}),t._v(" "),s("img",{attrs:{src:"https://img-blog.csdnimg.cn/344ad26f375548ab935ccfc7d109b377.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5LiA5ZuiIOeznw==,size_18,color_FFFFFF,t_70,g_se,x_16#pic_center",alt:"在这里插入图片描述"}})])]),t._v(" "),s("p",[t._v("因此，修改一个对象引用的对象属性，会影响到所有指向该对象的引用；修改一个对象引用的指向(p1=p2)，"),s("strong",[t._v("只会影响到被修改引用自身")]),t._v("。所以如果需要通过子函数修改引用的指向，只能够过"),s("strong",[t._v("子函数返回那个对象的地址，在主函数中赋给那个引用(p1=fun(p1))")]),t._v("。")])])}),[],!1,null,null,null);s.default=e.exports}}]);